[
["index.html", "SSD PINT analyses Chapter 1 The index page 1.1 all the packages in this book", " SSD PINT analyses Erin Dickie 2020-06-18 Chapter 1 The index page 1.1 all the packages in this book library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT library(cowplot) ## ## ******************************************************** ## Note: As of version 1.0.0, cowplot does not change the ## default ggplot2 theme anymore. To recover the previous ## behavior, execute: ## theme_set(theme_cowplot()) ## ******************************************************** library(tidygraph) ## ## Attaching package: &#39;tidygraph&#39; ## The following object is masked from &#39;package:stats&#39;: ## ## filter library(ggraph) library(broom) library(ggridges) library(igraph) ## ## Attaching package: &#39;igraph&#39; ## The following object is masked from &#39;package:tidygraph&#39;: ## ## groups ## The following objects are masked from &#39;package:dplyr&#39;: ## ## as_data_frame, groups, union ## The following objects are masked from &#39;package:purrr&#39;: ## ## compose, simplify ## The following object is masked from &#39;package:tidyr&#39;: ## ## crossing ## The following object is masked from &#39;package:tibble&#39;: ## ## as_data_frame ## The following objects are masked from &#39;package:stats&#39;: ## ## decompose, spectrum ## The following object is masked from &#39;package:base&#39;: ## ## union library(bookdown) library(MatchIt) library(effsize) sessionInfo() ## R version 3.6.1 (2019-07-05) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 16.04.4 LTS ## ## Matrix products: default ## BLAS: /mnt/tigrlab/quarantine/R/3.6.1/build/lib/R/lib/libRblas.so ## LAPACK: /mnt/tigrlab/quarantine/R/3.6.1/build/lib/R/lib/libRlapack.so ## ## locale: ## [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 ## [5] LC_MONETARY=en_CA.UTF-8 LC_MESSAGES=en_CA.UTF-8 ## [7] LC_PAPER=en_CA.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] effsize_0.8.0 MatchIt_3.0.2 bookdown_0.19 igraph_1.2.5 ## [5] ggridges_0.5.2 broom_0.5.6 ggraph_2.0.3 tidygraph_1.2.0 ## [9] cowplot_1.0.0 here_0.1 forcats_0.5.0 stringr_1.4.0 ## [13] dplyr_1.0.0 purrr_0.3.4 readr_1.3.1 tidyr_1.1.0 ## [17] tibble_3.0.1 ggplot2_3.3.1 tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] viridis_0.5.1 httr_1.4.1 jsonlite_1.6.1 viridisLite_0.3.0 ## [5] modelr_0.1.8 assertthat_0.2.1 blob_1.2.1 cellranger_1.1.0 ## [9] yaml_2.2.1 ggrepel_0.8.2 pillar_1.4.4 backports_1.1.8 ## [13] lattice_0.20-38 glue_1.4.1 digest_0.6.25 polyclip_1.10-0 ## [17] rvest_0.3.5 colorspace_1.4-1 htmltools_0.5.0 plyr_1.8.6 ## [21] pkgconfig_2.0.3 haven_2.3.1 scales_1.1.1 tweenr_1.0.1 ## [25] ggforce_0.3.1 generics_0.0.2 farver_2.0.3 ellipsis_0.3.1 ## [29] withr_2.2.0 cli_2.0.2 magrittr_1.5 crayon_1.3.4 ## [33] readxl_1.3.1 evaluate_0.14 fs_1.3.1 fansi_0.4.1 ## [37] nlme_3.1-140 MASS_7.3-51.4 xml2_1.3.2 tools_3.6.1 ## [41] hms_0.5.3 lifecycle_0.2.0 munsell_0.5.0 reprex_0.3.0 ## [45] compiler_3.6.1 rlang_0.4.6 grid_3.6.1 rstudioapi_0.11 ## [49] rmarkdown_2.3 gtable_0.3.0 DBI_1.1.0 graphlayouts_0.7.0 ## [53] R6_2.4.1 gridExtra_2.3 lubridate_1.7.9 knitr_1.28 ## [57] rprojroot_1.3-2 stringi_1.4.6 Rcpp_1.0.4.6 vctrs_0.3.1 ## [61] dbplyr_1.4.4 tidyselect_1.1.0 xfun_0.14 "],
["mangle-participant-demographics.html", "Chapter 2 Mangle participant demographics 2.1 Coding ZHH data by session 2.2 Note - re picking motion cutoffs 2.3 Now looking at what we have from COBRE 2.4 Now looking at the CNP we have.. 2.5 add where are is the CMH demographic info.. 2.6 extra little bit for traking down &quot;missing&quot; COBRE", " Chapter 2 Mangle participant demographics 2.0.0.1 Note: this chapter uses the resticted (unshared) phenotypic data. So can only be run on a CAMH computer.. We output the file data/processed/pheno/simple_pheno_20200221.csv which is carrier forward to the next script.. The code chunks below where run on the kimel lab system and not only echo when rest of the notebooks are run.. (i.e. eval = FALSE) 2.0.0.1.1 all computations here are locked on Feb 21, 2020 (they are not repeated as when this book is rerun) knitr::opts_chunk$set(eval = FALSE) and now it starts let's get some idea of what data we have There are now Four/ish Center's sites from which we are pooling data for this project CAMH data (pooling across ASDD, RTMSWM, PNSC, SPINS studies..) COBRE data CNP data ZHH older data For all sites we want: the preprosessed data the MRIQC metrics scanner age sex education diagnosis 2.0.0.2 Starting with ZHH library(foreign) library(tidyverse) library(readxl) library(here) ## these hold the more extended data pulls from 2018 ZHH_SZ = read.spss(here(&#39;data/raw/restricted_pheno/ZHH/phenotypic/Patient\\ Sample\\ 7-30-18.sav&#39;), to.data.frame=TRUE) ZHH_CRTL = read.spss(here(&#39;data/raw/restricted_pheno/ZHH/phenotypic/Control Sample 7-30-18.sav&#39;), to.data.frame=TRUE) ## these hold the original phenotypic pull that was used to determine the BIDS session id qryHC_firstexcel &lt;- read_excel(here(&quot;data/raw/restricted_pheno/ZHH/demographics/qryHC_NewResting_15-40.xlsx&quot;)) qrySZ_firstexcel &lt;- read_excel(here(&quot;data/raw/restricted_pheno/ZHH/demographics/qrySZ_Sess_Miklos.xlsx&quot;)) 2.0.1 mangle the ZZH data - determining the mapping between the ZHH session name and Dayton's bids name qryHC &lt;- qryHC_firstexcel %&gt;% mutate(subject = str_c(&quot;sub-&quot;,GRID)) %&gt;% select(subject, SessNo, Age, sex) qrySZ &lt;- qrySZ_firstexcel %&gt;% mutate(subject = str_c(&quot;sub-&quot;,grid)) %&gt;% select(subject, SessNo, Age, sex) qry_both &lt;- bind_rows(&quot;CTRL&quot; = qryHC, &quot;SSD&quot; = qrySZ, .id = &quot;DX&quot;) %&gt;% group_by(subject) %&gt;% mutate(session = str_c(&quot;ses-0&quot;,min_rank(SessNo))) %&gt;% ungroup() %&gt;% mutate(dataset = &quot;ZHH&quot;, Site = &quot;ZHH&quot;, Scanner = &quot;ZHH&quot;, SessNo = as.character(SessNo), Sex = factor(sex, levels = c(1,2), labels = c(&quot;M&quot;, &quot;F&quot;))) %&gt;% select(-sex) 2.1 Coding ZHH data by session When the ZHH data was converted to BIDS, we renamed the session ids in order. But the phenotypic data we have is coded by the original session ids. So lets map the original session ids to the ZHH data. Note: looking at Dayton's scripts - he first joined the participants demographics witha list of what scans we have available.. then he sorted , within participant, by GRID session id and labeled those in orders (i.e 01, 02, 03 etc.) orig_rest_HC &lt;- tibble(files = list.files(here(&#39;data/raw/restricted_pheno/ZHH/raw/HC/rsfmri/&#39;))) %&gt;% separate(files, into = c(&#39;SessNo&#39;, &#39;therest&#39;) , sep = &#39;_&#39;, extra = &quot;merge&quot;) orig_T1w_HC &lt;- tibble(files = list.files(here(&#39;data/raw/restricted_pheno/ZHH/raw/HC/struct/&#39;))) %&gt;% separate(files, into = c(&#39;SessNo&#39;, &#39;therest&#39;) , sep = &#39;_&#39;, extra = &quot;merge&quot;) orig_rest_SZ &lt;- tibble(files = list.files(here(&#39;data/raw/restricted_pheno/ZHH/raw/SCZ/rsfmri/&#39;))) %&gt;% separate(files, into = c(&#39;SessNo&#39;, &#39;therest&#39;) , sep = &#39;_&#39;, extra = &quot;merge&quot;) orig_T1w_SZ &lt;- tibble(files = list.files(here(&#39;data/raw/restricted_pheno/ZHH/raw/SCZ/struct/&#39;))) %&gt;% separate(files, into = c(&#39;SessNo&#39;, &#39;therest&#39;) , sep = &#39;_&#39;, extra = &quot;merge&quot;) orig_rest_both = bind_rows(orig_rest_HC, orig_rest_SZ) orig_T1w_both = bind_rows(orig_T1w_HC, orig_T1w_SZ) orig_both = inner_join(orig_rest_both, orig_T1w_both, by = &quot;SessNo&quot;) ZHH_pheno1 &lt;- semi_join(qry_both, orig_both, by = &quot;SessNo&quot;) Putting together the simplest stuff vars_from_both &lt;- c(&quot;GRID&quot;, &quot;zhh_session_id&quot;,&quot;MRI_Date&quot;, &quot;Age&quot;, &quot;Sex&quot;, &quot;DX&quot;, &quot;Edu&quot;) mangle_CTRL_ZHH &lt;- qryHC_firstexcel %&gt;% select(SessNo, sex) %&gt;% right_join(ZHH_CRTL, by = &quot;SessNo&quot;) %&gt;% mutate(zhh_session_id = as.character(SessNo), GRID = as.character(GRID)) %&gt;% mutate(Sex = factor(sex, levels = c(1,2), labels = c(&quot;M&quot;, &quot;F&quot;)), DX = &quot;CTRL&quot;, Edu = EducatPtHighest) %&gt;% select(one_of(vars_from_both)) mangle_SZ_ZHH &lt;- ZHH_SZ %&gt;% mutate(zhh_session_id = as.character(SessNo), GRID = as.character(grid)) %&gt;% mutate(Sex = factor(sex, levels = c(&quot;male&quot;, &quot;female&quot;), labels = c(&quot;M&quot;, &quot;F&quot;)), DX = &quot;SSD&quot;, Edu = EducationPatient) %&gt;% rename(isFEP = Type) %&gt;% select(one_of(vars_from_both), isFEP) ZHH_pheno2 &lt;-bind_rows(mangle_SZ_ZHH, mangle_CTRL_ZHH) %&gt;% mutate(subject = str_c(&#39;sub-&#39;,GRID), dataset = &quot;ZHH&quot;, Site = &quot;ZHH&quot;, Scanner = &quot;ZHH&quot;) %&gt;% select(-GRID, -MRI_Date, -Edu) #rm(mangle_CTRL_ZHH, mangle_SZ_ZHH) GRIDs_w_cerebellum_cutoff &lt;- c(7793, 7834, 9405) ZHH_pheno1 %&gt;% distinct(subject) %&gt;% count() ZHH_pheno2 %&gt;% distinct(subject) %&gt;% count() ZHH_pheno &lt;- left_join(ZHH_pheno1, ZHH_pheno2 %&gt;% select(zhh_session_id, Age, isFEP), by = c(&quot;SessNo&quot;=&quot;zhh_session_id&quot;), suffix = c(&quot;&quot;, &quot;_atIQ&quot;)) %&gt;% mutate(zhh_chosen_sess = !is.na(Age_atIQ)) Note: (known issue) we discovered that, due to a duplicate row in the participants spreadsheet - one ZHH scan SessNo 22434 was copied into two sessions..(ses-01 &amp; ses-02) Data from sub-11082-ses-02 should be discarded from further analyses - it does not exist.. ZHH_pheno %&gt;% filter(dataset == &quot;ZHH&quot;, subject == &quot;sub-11082&quot;) ZHH_pheno &lt;- ZHH_pheno %&gt;% distinct() 2.1.0.1 the COBRE cohort cobre_participants &lt;- read_delim(here(&quot;data/raw/phenotypic/cobre_participants.tsv&quot;), &quot;\\t&quot;, escape_double = FALSE, trim_ws = TRUE) %&gt;% rename(Age = age) %&gt;% mutate(Sex = case_when( gender == &quot;male&quot; ~ &quot;M&quot;, gender == &quot;female&quot; ~ &quot;F&quot;), DX = case_when(diagnosis == &quot;Schizophrenia_Strict&quot; ~ &quot;SSD&quot;, diagnosis == &quot;Schizoaffective&quot; ~ &quot;SSD&quot;, diagnosis == &quot;No_Known_Disorder&quot; ~ &quot;CTRL&quot;), dataset = &quot;COBRE&quot;, Site = &quot;COBRE&quot;, subject = str_c(&#39;sub-&#39;, subjectid), Scanner = &quot;COBRE&quot;) %&gt;% select(subject, Age, Sex, DX, dataset, Site, Scanner) 2.1.0.2 the ds00030 cohort This dems were read from teh participants.tsv distributed with the ds000030_R1.0.5 release on openmri.org. ds00030_participants &lt;- read_delim(here(&quot;data/raw/bids/ds000030/participants.tsv&quot;), &quot;\\t&quot;, escape_double = FALSE, trim_ws = TRUE) %&gt;% filter(T1w != &quot;n/a&quot;, rest != &quot;n/a&quot;, diagnosis %in% c(&quot;CONTROL&quot;, &quot;SCHZ&quot;)) %&gt;% rename(Sex = gender, subject = participant_id) %&gt;% mutate(DX = case_when(diagnosis == &quot;CONTROL&quot; ~ &quot;CTRL&quot;, diagnosis == &quot;SCHZ&quot; ~ &quot;SSD&quot;), dataset = &quot;ds000030_R1.0.5&quot;, Site = &quot;ds000030&quot;, Scanner = str_c(&quot;ds000030&quot;, ScannerSerialNumber), Age = age) %&gt;% select(subject, Age, DX, Sex, Scanner, ghost_NoGhost, dataset, Site) 2.1.0.3 the CAMH cohorts old_pheno &lt;- read_csv(here(&quot;/data/raw/phenotypic/NEWallSubjects_completeData3_DM_not_sexmatched.csv&quot;)) CMH_pheno &lt;- old_pheno %&gt;% filter(site == 1) %&gt;% separate(subid, into = c(&quot;Study&quot;, &quot;Site&quot;, &quot;SUBJ&quot;, &quot;cmh_session_id&quot;)) %&gt;% unite(subject_id, Site, SUBJ, sep = &quot;&quot;) %&gt;% mutate(DX = case_when(DX_GROUP == 2 ~ &quot;CTRL&quot;, DX_GROUP == 1 ~ &quot;SSD&quot;), Sex = case_when(sex.x == 1 ~ &quot;M&quot;, sex.x == 2 ~ &quot;F&quot;), dataset = case_when(Study == &quot;SPN01&quot; ~ &quot;SPINS&quot;, Study == &quot;RTMSWM&quot; ~ &quot;RTMSWM&quot;, Study == &quot;ASDD&quot; ~ &quot;ASDD&quot;, Study == &quot;DTI&quot; ~ &quot;DTI3T&quot;, Study == &quot;PNS&quot; ~ &quot;PNSC&quot;), subject = str_c(&quot;sub-&quot;, subject_id), Scanner = &quot;CMH&quot;, Site = &quot;CMH&quot;, Age = age) %&gt;% select(subject, cmh_session_id, DX, Age, Sex, dataset, Site, Scanner) 2.1.0.4 Combine and write out simple_pheno = bind_rows(CMH_pheno, ZHH_pheno, ds00030_participants, cobre_participants) write_csv(simple_pheno, here(&quot;data/processed/pheno/simple_pheno_20200221.csv&quot;)) 2.2 Note - re picking motion cutoffs Based on our looking at the mriqc outputs, any visual QC issues are associated with high motion (mean fd &gt; 0.6mm percent &gt; 48%) 2.3 Now looking at what we have from COBRE From the COBRE data dictionary we see that: CODEM_6: Highest Level of Education for Primary Caretaker until 18 years old CODEM_7: Highest Level of Education for Secondary Caretaker until subject was 18 years old There is also a smoking scale and hours of sleep night before scan There is a medictions scale as well (COMED) And a PANSS Neuropsych includes the (CNP cols) WTAR, WASI, and Matrics.. 2.4 Now looking at the CNP we have.. wais, sans, medication, bprs, education, smoking status. cpt 2.5 add where are is the CMH demographic info.. 2.6 extra little bit for traking down &quot;missing&quot; COBRE "],
["check-completion-and-add-mr-qa.html", "Chapter 3 Check completion and add MR QA 3.1 Get a list of available bold and T1w files (from the mriqc outputs) 3.2 now glob for all of the PINT outputs 3.3 read in the combined demographics from the last chapter 3.4 also read in an concatenate all the surface area info from freesurfer 3.5 anti-join the pheno data with the usable scan data to see if we have everything.. 3.6 ZHH is the only site where we have session specific pheno information.. so we will check that 3.7 Setting the motion threshold: 3.8 write this table out to csv - than read the csv and print it 3.9 who is still missing a PINT output? 3.10 Selecting scans with least motion 3.11 final mangle of the phenotypic data (transforming variables) 3.12 adding matching for the ds00030 subsample first...", " Chapter 3 Check completion and add MR QA This section of the code checks to make sure that we have preprocessed data available for all expected partcipants. Then, for participants with more than one run/session of bold data it picks the best run per participant for the next analysis The final output is the QAed phenotypic file is data/processed/pheno/simple_pheno_20200221.csv which is the input for all of the rest of the analyses. 3.0.0.1 Note: all computations here are locked on Feb 21, 2020 (they are not repeated as when this book is rerun) knitr::opts_chunk$set(eval = FALSE) library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT processed_mri_dir &lt;- here(&quot;data/processed/mri/&quot;) 3.1 Get a list of available bold and T1w files (from the mriqc outputs) sub_projects = c(&quot;ZHH&quot;, &quot;COBRE&quot;, &quot;ASDD&quot;, &quot;ASDD&quot;, &quot;DTI3T&quot; , &quot;RTMSWM&quot;, &quot;PNSC&quot;, &quot;SPINS&quot;, &quot;ds000030_R1.0.5&quot;) read_mriqc_bold &lt;- function(studyname) { bold &lt;- read_csv(str_c(processed_mri_dir, studyname, &quot;/out/mriqc/bold.csv&quot;)) %&gt;% mutate(subject_id = as.character(subject_id)) if (&quot;session_id&quot; %in% names(bold)) { bold &lt;- bold %&gt;% mutate(session_id = as.character(session_id)) } return(bold) } ## read all mriqc bold outputs all_the_bolds &lt;- tibble(dataset = sub_projects) %&gt;% mutate(boldqc = map(dataset, function(x) { read_mriqc_bold(x) })) %&gt;% unnest() %&gt;% filter(task_id == &quot;rest&quot;) ## mangle the mriqc bold outputs bolds_condensed &lt;- all_the_bolds %&gt;% select(dataset, ends_with(&#39;_id&#39;), starts_with(&#39;fd_&#39;), starts_with(&#39;size&#39;), starts_with(&#39;spacing&#39;)) %&gt;% mutate(subject = str_c(&quot;sub-&quot;, subject_id), session = str_c(&quot;ses-&quot;,session_id)) Also read the mriqc outputs from the T1w images read_mriqc_t1w &lt;- function(studyname) { bold &lt;- read_csv(str_c(processed_mri_dir, studyname, &quot;/out/mriqc/T1w.csv&quot;)) %&gt;% mutate(subject_id = as.character(subject_id)) if (&quot;session_id&quot; %in% names(bold)) { bold &lt;- bold %&gt;% mutate(session_id = as.character(session_id)) } return(bold) } all_the_T1w &lt;- tibble(dataset = sub_projects) %&gt;% mutate(t1wqc = map(dataset, function(x) { read_mriqc_t1w(x) })) %&gt;% unnest() %&gt;% group_by(dataset, subject_id) %&gt;% summarise(num_t1w = n()) 3.1.1 the list of usable scans is all participants with both T1w and bold data usable_scans &lt;- all_the_bolds %&gt;% group_by(dataset, subject_id, session_id, task_id) %&gt;% summarise(num_rest = n()) %&gt;% full_join(all_the_T1w, by = c(&quot;subject_id&quot;, &quot;dataset&quot;)) %&gt;% mutate(num_scans = num_rest + num_t1w, subject = str_c(&quot;sub-&quot;, subject_id), session = str_c(&quot;ses-&quot;, session_id)) %&gt;% ungroup() ## print the number of usable scans usable_scans %&gt;% ungroup() %&gt;% select(subject_id, dataset, num_scans) %&gt;% drop_na(num_scans) %&gt;% distinct() %&gt;% count(dataset) 3.2 now glob for all of the PINT outputs pint_summarys_wses &lt;- Sys.glob(str_c(processed_mri_dir, &quot;/*/out/ciftify_PINT/sub*/ses*/*summary.csv&quot;)) pint_summarys_nses &lt;- Sys.glob(str_c(processed_mri_dir, &quot;/*/out/ciftify_PINT/sub*/*summary.csv&quot;)) pintdf_nses &lt;- tibble(filepath = pint_summarys_nses) %&gt;% transmute(filepath = str_remove(filepath, processed_mri_dir)) %&gt;% separate(filepath, into = c(&quot;1&quot;,&#39;dataset&#39;,&#39;4&#39;,&#39;5&#39;,&#39;subject&#39;, &#39;filename&#39;), sep = .Platform$file.sep) %&gt;% select(dataset, subject, filename) pintdf_wses &lt;- tibble(filepath = pint_summarys_wses) %&gt;% transmute(filepath = str_remove(filepath, processed_mri_dir)) %&gt;% separate(filepath, into = c(&quot;1&quot;, &#39;dataset&#39;,&#39;4&#39;,&#39;5&#39;,&#39;subject&#39;, &#39;session&#39;, &#39;filename&#39;), sep = .Platform$file.sep) %&gt;% select(dataset, subject, session, filename) pintdf &lt;- bind_rows(pintdf_wses, pintdf_nses) rm(pint_summarys_nses, pint_summarys_wses, pintdf_nses, pintdf_wses) 3.3 read in the combined demographics from the last chapter # removing session id column because it is redundant simple_pheno &lt;- read_csv(here(&#39;data/processed/pheno/simple_pheno_20200221.csv&#39;)) %&gt;% drop_na(DX) 3.4 also read in an concatenate all the surface area info from freesurfer all_surfs &lt;- tibble(dataset = sub_projects) %&gt;% mutate(data = map(dataset, ~read_csv(str_c(processed_mri_dir,.x, &#39;/out/freesurfer/CorticalMeasuresENIGMA_SurfAvg.csv&#39;), col_types = cols( .default = col_double(), SubjID = col_character())))) %&gt;% unnest() %&gt;% select(dataset, SubjID, LSurfArea, RSurfArea) %&gt;% mutate(SurfArea = LSurfArea + RSurfArea) 3.5 anti-join the pheno data with the usable scan data to see if we have everything.. usable_scans %&gt;% anti_join(simple_pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% drop_na(num_scans) 3.5.0.1 we see that the only people we have bold info but no phenotype for is that one VIPR participant in SPINS and the 5 people from ds00030 who don't have a T1w scan 3.6 ZHH is the only site where we have session specific pheno information.. so we will check that Note: (known issue) we discovered that, due to a duplicate row in the participants spreadsheet - one ZHH scan SessNo 22434 was copied into two sessions..(ses-01 &amp; ses-02) Data from sub-11082-ses-02 should be discarded from further analyses - ses-02 does not exist..it is a duplicate of ses-01 from the same participant..(note how the scan QA values are also identical) usable_scans %&gt;% filter(dataset == &quot;ZHH&quot;) %&gt;% anti_join(simple_pheno, by = c(&quot;subject&quot;, &quot;session&quot;, &quot;dataset&quot;)) %&gt;% drop_na(num_scans) bolds_condensed %&gt;% filter(dataset == &quot;ZHH&quot;, subject == &quot;sub-11082&quot;) 3.7 Setting the motion threshold: We have set the motion threshold to: Mean FD &lt; 0.5mm and No more than 50% of the scan with motion &gt; 0.2mm GRIDs_w_cerebellum_cutoff &lt;- c(7793, 7834, 9405) mean_fd_thres &lt;- 0.5 perc_fd_thres &lt;- 50 pre_pre_qa &lt;- bolds_condensed %&gt;% inner_join(usable_scans %&gt;% select(subject, dataset, num_scans), by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% drop_na(num_scans) %&gt;% inner_join(simple_pheno %&gt;% select(subject, dataset, DX, Site), by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% inner_join(all_surfs, by = c(&quot;subject&quot;=&quot;SubjID&quot;, &quot;dataset&quot;)) pre_qa &lt;- pre_pre_qa %&gt;% filter(!(subject_id %in% GRIDs_w_cerebellum_cutoff)) pre_pre_qa_counts &lt;- pre_pre_qa %&gt;% select(subject, Site, DX) %&gt;% distinct() %&gt;% count(DX, Site) %&gt;% rename(n_before_anat_qa = n) pre_pre_qa_ses_counts &lt;- pre_pre_qa %&gt;% select(subject, Site, DX, session) %&gt;% distinct() %&gt;% count(DX, Site) %&gt;% rename(n_ses_before_anat_qa = n) pre_qa_counts &lt;- pre_qa %&gt;% select(subject, Site, DX) %&gt;% distinct() %&gt;% count(DX, Site) qa_passes_pheno &lt;- pre_qa %&gt;% filter(fd_mean &lt; 0.5, fd_perc &lt; 50, size_t &gt; 100) (sub_numbers_table &lt;- qa_passes_pheno %&gt;% select(subject, Site, DX) %&gt;% distinct() %&gt;% count(DX, Site) %&gt;% inner_join(pre_qa_counts, by = c(&quot;DX&quot;, &quot;Site&quot;), suffix = c(&quot;_after_fmri_qa&quot;, &quot;_before_qa&quot;)) %&gt;% inner_join(pre_pre_qa_counts, by = c(&quot;DX&quot;, &quot;Site&quot;)) %&gt;% inner_join(pre_pre_qa_ses_counts, by = c(&quot;DX&quot;, &quot;Site&quot;))) 3.8 write this table out to csv - than read the csv and print it write_csv(sub_numbers_table, here(&quot;data&quot;, &quot;processed&quot;, &quot;pheno&quot;, &quot;pre_and_post_qa_counts.csv&quot;)) read_csv(here(&quot;data&quot;, &quot;processed&quot;, &quot;pheno&quot;, &quot;pre_and_post_qa_counts.csv&quot;)) %&gt;% knitr::kable() ## Parsed with column specification: ## cols( ## DX = col_character(), ## Site = col_character(), ## n_after_fmri_qa = col_double(), ## n_before_qa = col_double(), ## n_before_anat_qa = col_double(), ## n_ses_before_anat_qa = col_double() ## ) DX Site n_after_fmri_qa n_before_qa n_before_anat_qa n_ses_before_anat_qa CTRL CMH 41 41 41 41 CTRL COBRE 35 90 90 90 CTRL ds000030 107 122 122 122 CTRL ZHH 110 122 124 124 SSD CMH 67 67 67 67 SSD COBRE 22 85 85 91 SSD ds000030 31 50 50 50 SSD ZHH 83 114 115 175 3.9 who is still missing a PINT output? anti_join(qa_passes_pheno, pintdf, by = c(&quot;dataset&quot;, &quot;subject&quot;)) 3.10 Selecting scans with least motion # select the scan for each participant with the least motion mangle_qa_passes &lt;- qa_passes_pheno %&gt;% select(-ends_with(&quot;_x&quot;), -ends_with(&quot;_y&quot;)) %&gt;% left_join(pintdf, by = c(&quot;dataset&quot;, &quot;subject&quot;, &quot;session&quot;)) %&gt;% filter(!is.na(filename)) qa_passes_no_ZHH &lt;- mangle_qa_passes %&gt;% filter(dataset != &quot;ZHH&quot;) %&gt;% distinct() qa_passes_no_ZHH_leastmotion &lt;- qa_passes_no_ZHH %&gt;% left_join(simple_pheno %&gt;% select(-session), by = c(&quot;subject&quot;, &quot;dataset&quot;, &quot;DX&quot;, &quot;Site&quot;)) %&gt;% group_by(subject, dataset) %&gt;% arrange(fd_perc) %&gt;% slice(1) %&gt;% ungroup() names(qa_passes_no_ZHH_leastmotion) anti_join(qa_passes_no_ZHH, qa_passes_no_ZHH_leastmotion, by = c(&quot;subject&quot;, &quot;dataset&quot;, &quot;session&quot;, &quot;fd_mean&quot;)) bind_rows(pre_drop = qa_passes_no_ZHH %&gt;% count(dataset), post_drop = qa_passes_no_ZHH_leastmotion %&gt;% count(dataset), .id = &quot;prepost&quot;) %&gt;% spread(prepost, n) qa_passes_ZHH &lt;- mangle_qa_passes %&gt;% filter(dataset == &quot;ZHH&quot;) %&gt;% distinct() %&gt;% left_join(simple_pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;, &quot;session&quot;, &quot;DX&quot;, &quot;Site&quot;)) qa_passes_ZHH_leastmotion &lt;- qa_passes_ZHH %&gt;% group_by(subject, dataset) %&gt;% arrange(fd_perc) %&gt;% slice(1) %&gt;% ungroup() qa_passes_ZHH_chosenleastmotion &lt;- qa_passes_ZHH %&gt;% group_by(subject, dataset) %&gt;% arrange(desc(zhh_chosen_sess), fd_num) %&gt;% slice(1) %&gt;% ungroup() ## show table of picking scans purely for motion vs picking the scan with better clinical characterization.. bind_rows(before = qa_passes_ZHH %&gt;% count(DX, isFEP), after_dropping_formot = qa_passes_ZHH_leastmotion %&gt;% count(DX, isFEP), after_dropping_notchosen = qa_passes_ZHH_chosenleastmotion %&gt;% count(DX, isFEP), .id = &quot;prepost&quot;) %&gt;% spread(prepost, n) So, luckily, it looks like the difference between what we did before (just selecting the session with the least motion) and what we would like to do now (selecting the session with better clinical characterization) leads to similar subject lists (differing only by 15 sessions). Note - from this calculation it looks like we have repeat scans available for some later analysis from 33 SSD participants.. anti_join(qa_passes_ZHH, qa_passes_ZHH_chosenleastmotion, by = c(&quot;subject&quot;, &quot;dataset&quot;, &quot;session&quot;, &quot;fd_mean&quot;)) %&gt;% distinct(subject) %&gt;% count() pheno &lt;- bind_rows(qa_passes_no_ZHH_leastmotion, qa_passes_ZHH_chosenleastmotion) pheno %&gt;% ggplot(aes(x = Age, y = SurfArea)) + geom_point(aes(color = Site)) + geom_smooth(method = &quot;lm&quot;) pheno %&gt;% ggplot(aes(x = fd_mean, color = DX)) + geom_density() + facet_wrap(~Site, ncol = 1) 3.11 final mangle of the phenotypic data (transforming variables) transform_to_normal &lt;- function(X) { # calculate the best exponent using powerTransform: pT &lt;- car::powerTransform(X) # apply the power transform and save the result to a new variable X_pT &lt;- X^pT$lambda ## note ^ is exponent in r xout = scales::rescale(X_pT) return(xout) } # transform age and fd_mean to normality pheno &lt;- pheno %&gt;% mutate(Age_pt = transform_to_normal(Age), fd_mean_pt = transform_to_normal(fd_mean), SurfArea_pt = transform_to_normal(SurfArea)) pheno %&gt;% select(subject, dataset, DX) %&gt;% distinct() %&gt;% count(DX) %&gt;% inner_join(pre_qa_counts, by = &quot;DX&quot;, suffix = c(&quot;_after_qa&quot;, &quot;_before_qa&quot;)) pheno %&gt;% group_by(Site, DX) %&gt;% summarise(n = n(), nMale = sum(Sex == &quot;M&quot;), perc_male = nMale/n()*100, age_mean = mean(Age, na.rm = T), age_sd = sd(Age, na.rm = T), age_min = min(Age, na.rm = T), age_max = max(Age, na.rm = T)) %&gt;% mutate(age_report =sprintf(&quot;%0.1f(%0.1f) %0.0f - %0.0f&quot;, age_mean, age_sd, age_min, age_max), sex_report = str_c(nMale, &#39;(&#39;, sprintf(&quot;%0.1f&quot;, perc_male), &#39;%)&#39;)) %&gt;% select(Site, DX, n, age_report, sex_report) bold_scan_params &lt;- qa_passes_pheno %&gt;% mutate(scan_length = size_t*2/60, spacing_x_round = round(spacing_x, 3), spacing_z_round = round(spacing_z,3)) %&gt;% group_by(subject) %&gt;% sample_n(1) %&gt;% ungroup() %&gt;% group_by(Site, size_t, size_x, size_y, size_z, spacing_x_round, spacing_z_round, spacing_tr, scan_length) %&gt;% count() %&gt;% ungroup() %&gt;% group_by(Site) %&gt;% arrange(-n) %&gt;% slice(1) write_csv(bold_scan_params, here(&quot;data&quot;, &quot;processed&quot;, &quot;pheno&quot;, &quot;bold_scan_summary.csv&quot;)) read_csv(here(&quot;data&quot;, &quot;processed&quot;, &quot;pheno&quot;, &quot;bold_scan_summary.csv&quot;)) %&gt;% t() ## Parsed with column specification: ## cols( ## Site = col_character(), ## size_t = col_double(), ## size_x = col_double(), ## size_y = col_double(), ## size_z = col_double(), ## spacing_x_round = col_double(), ## spacing_z_round = col_double(), ## spacing_tr = col_double(), ## scan_length = col_double(), ## n = col_double() ## ) ## [,1] [,2] [,3] [,4] ## Site &quot;CMH&quot; &quot;COBRE&quot; &quot;ds000030&quot; &quot;ZHH&quot; ## size_t &quot;208&quot; &quot;149&quot; &quot;152&quot; &quot;148&quot; ## size_x &quot;64&quot; &quot;64&quot; &quot;64&quot; &quot;64&quot; ## size_y &quot;64&quot; &quot;64&quot; &quot;64&quot; &quot;64&quot; ## size_z &quot;40&quot; &quot;33&quot; &quot;34&quot; &quot;40&quot; ## spacing_x_round &quot;3.125&quot; &quot;3.750&quot; &quot;3.000&quot; &quot;3.750&quot; ## spacing_z_round &quot;4.00&quot; &quot;4.55&quot; &quot;4.00&quot; &quot;3.00&quot; ## spacing_tr &quot;2&quot; &quot;2&quot; &quot;2&quot; &quot;2&quot; ## scan_length &quot;6.933333&quot; &quot;4.966667&quot; &quot;5.066667&quot; &quot;4.933333&quot; ## n &quot; 98&quot; &quot; 35&quot; &quot;125&quot; &quot;118&quot; 3.12 adding matching for the ds00030 subsample first... In ds00030 there are a lot more controls than SSD participants - and the controls are mostly from one scanner with no ghosting artifact.. so it might be good idea to drop some of them.. library(MatchIt) ds30 &lt;- pheno %&gt;% filter(Site == &quot;ds000030&quot;) %&gt;% select(subject, DX, Age, Sex, ghost_NoGhost, Scanner, Site) %&gt;% mutate(DXnum = as.numeric(factor(DX))-1) (ds30_match1 &lt;- matchit(DXnum ~ Age + Sex + as.character(ghost_NoGhost) + as.character(Scanner), data = ds30)) therest &lt;- pheno %&gt;% filter(Site != &quot;ds000030&quot;) %&gt;% select(subject, DX, Age, Sex, Scanner) %&gt;% mutate(DXnum = as.numeric(factor(DX))-1) (therest_match1 &lt;- matchit(DXnum ~ Age + Sex + as.character(Scanner), data = therest)) pheno1 &lt;- bind_rows( pheno %&gt;% semi_join(match.data(ds30_match1), by = c(&quot;subject&quot;, &quot;Site&quot;)), pheno %&gt;% semi_join(match.data(therest_match1), by = c(&quot;subject&quot;, &quot;Scanner&quot;))) pheno1 %&gt;% count(Site,DX) pheno1 %&gt;% group_by(Site, DX) %&gt;% summarise(n = n(), nMale = sum(Sex == &quot;M&quot;), perc_male = nMale/n()*100, age_mean = mean(Age, na.rm = T), age_sd = sd(Age, na.rm = T), age_min = min(Age, na.rm = T), age_max = max(Age, na.rm = T)) %&gt;% mutate(age_report =sprintf(&quot;%0.1f(%0.1f) %0.0f - %0.0f&quot;, age_mean, age_sd, age_min, age_max), sex_report = str_c(nMale, &#39;(&#39;, sprintf(&quot;%0.1f&quot;, perc_male), &#39;%)&#39;)) %&gt;% select(Site, DX, n, age_report, sex_report) pheno1 %&gt;% ggplot(aes(x = fd_mean, color = DX)) + geom_density() + facet_wrap(~Site, ncol = 1) final_pheno &lt;- pheno %&gt;% left_join(pheno1 %&gt;% select(subject, dataset, Age, fd_mean, SurfArea), by =c(&quot;subject&quot;, &quot;dataset&quot;), suffix = c(&quot;&quot;, &quot;_match&quot;)) %&gt;% mutate(in_matched_sample = !is.na(Age_match), Age_match_pt = transform_to_normal(Age_match), fd_mean_match_pt = transform_to_normal(fd_mean_match), SurfArea_match_pt = transform_to_normal(SurfArea_match)) final_pheno %&gt;% ggplot(aes(x = fd_mean_match_pt, color = DX)) + geom_density() + scale_colour_manual(values = c(&quot;grey10&quot;, &quot;red&quot;)) + facet_wrap(~Site, ncol = 1) final_pheno %&gt;% ggplot(aes(x = SurfArea_match_pt, color = DX)) + geom_density() + scale_colour_manual(values = c(&quot;grey10&quot;, &quot;red&quot;)) + facet_wrap(~Site, ncol = 1) final_pheno %&gt;% ggplot(aes(x = SurfArea_match_pt, color = DX)) + geom_density() + scale_colour_manual(values = c(&quot;grey10&quot;, &quot;red&quot;)) + facet_wrap(~Site, ncol = 1) write_csv(final_pheno, here(&#39;data/processed/pheno/20200221_pheno_clinicalplusqa.csv&#39;)) pheno %&gt;% filter(!is.na(DX)) %&gt;% count(Site, DX) ASDD is done! ZHH is done! (note that the TR for scans without a TR was set to 2s by Saba and Dayton) RTMSWM is done! PNSC is done DTI3T is done! SPINS has one extra bold (CMHAA2102 - from VIPR - disregard) COBRE is done (enough) - but half of it never downloaded ds00030 5 subjects need to rerun ciftify.. 3.12.1 write out subject list for further analysis this section is run manually before the postPINT group steps are done.. source(here(&#39;code&#39;,&#39;R&#39;,&#39;file_reading_helpers.R&#39;)) final_sublist &lt;- final_pheno %&gt;% mutate(func_base = get_func_base_from_pint_summary_filename(filename,subject, session), outputprefix = construct_output_prefix(subject, session, func_base), expected_filepath = file.path(dataset, &quot;out&quot;,&#39;ciftify_PINT&#39;, str_c(outputprefix, &#39;_desc-clean_bold_summary.csv&#39;))) final_sublist %&gt;% select(expected_filepath) %&gt;% arrange(expected_filepath) %&gt;% write_csv(path = here(&#39;data/processed/mri/all_clinicalplusqa_group/pint_summary_filelist.csv&#39;), col_names = FALSE) "],
["stats-on-the-pint-summary-displacement-values.html", "Chapter 4 Stats on the PINT summary displacement values 4.1 The paths to data 4.2 run for the whole head 4.3 double check that model/plot look right without COBRE and ds00030 4.4 run linear model per edge (not reported)", " Chapter 4 Stats on the PINT summary displacement values library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(broom) library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT 4.1 The paths to data source(here(&#39;code/R/settings_helpers.R&#39;)) Yeo7_2011_80verts &lt;- read_Yeo72011_template() YeoNet_colours = define_Yeo7_colours() ## adding a subid that matches what the concatenation script adds.. pheno &lt;- read_pheno_file() %&gt;% mutate(subid = str_replace(filename, &#39;_summary.csv&#39;,&#39;&#39;)) %&gt;% drop_na(DX) %&gt;% drop_na(Age_match) # dropping un-matched subjects ## Parsed with column specification: ## cols( ## .default = col_double(), ## dataset = col_character(), ## subject_id = col_character(), ## session_id = col_character(), ## task_id = col_character(), ## run_id = col_character(), ## acq_id = col_character(), ## subject = col_character(), ## session = col_character(), ## DX = col_character(), ## Site = col_character(), ## filename = col_character(), ## cmh_session_id = col_character(), ## Sex = col_character(), ## Scanner = col_character(), ## isFEP = col_character(), ## zhh_chosen_sess = col_logical(), ## ghost_NoGhost = col_character(), ## in_matched_sample = col_logical() ## ) ## See spec(...) for full column specifications. #pint_concat &lt;- read_csv(file.path(output_base,&#39;postPINT1_concat_all_qa_passes.csv&#39;)) pint_concat &lt;- read_csv(here(&quot;data&quot;,&quot;processed&quot;,&quot;mri&quot;, &quot;all_clinicalplusqa_group&quot;, &quot;postPINT&quot;, &quot;postPINT1_concat_all_qa_passes.csv&quot;)) ## Parsed with column specification: ## cols( ## subid = col_character(), ## hemi = col_character(), ## NETWORK = col_double(), ## roiidx = col_double(), ## tvertex = col_double(), ## pvertex = col_double(), ## dist_49 = col_double(), ## vertex_48 = col_double(), ## std_distance = col_double() ## ) lm_predictors &lt;- &quot;DX + Age_match_pt + Sex + fd_mean_match_pt + Site + SurfArea_match_pt&quot; lm_covars &lt;- &quot;Sex + fd_mean_match_pt + Site + SurfArea_match_pt&quot; library(modelr) ## ## Attaching package: &#39;modelr&#39; ## The following object is masked from &#39;package:broom&#39;: ## ## bootstrap df_plus_resids &lt;- function(df, outcome, covars) { m1 &lt;- lm(formula(paste(outcome, &#39;~&#39;, paste(covars, collapse = &quot; + &quot;))), data = df) result &lt;-df %&gt;% add_residuals(m1) return(result) } ana_data &lt;- pheno %&gt;% inner_join(pint_concat, by = &quot;subid&quot;) %&gt;% inner_join(Yeo7_2011_80verts, by = &quot;roiidx&quot;) %&gt;% mutate(network = str_sub(SHORTNAME, 1,2), network = factor(network, levels = names(YeoNet_colours))) 4.2 run for the whole head dist_by_total &lt;- ana_data %&gt;% group_by(subid) %&gt;% summarise(MeanDistance = mean(std_distance)) %&gt;% ungroup() %&gt;% inner_join(pheno, by = &quot;subid&quot;) ## `summarise()` ungrouping output (override with `.groups` argument) dist_by_total_fit &lt;- dist_by_total %&gt;% ungroup() %&gt;% do(tidy(lm(formula(paste(&quot;MeanDistance ~&quot;, lm_predictors)),.))) dist_by_total_fit %&gt;%knitr::kable() term estimate std.error statistic p.value (Intercept) 7.9123671 0.1537307 51.4690092 0.0000000 DXSSD -0.1383787 0.0675476 -2.0486101 0.0411573 Age_match_pt 0.5741340 0.1634885 3.5117706 0.0004963 SexM 0.0492648 0.0836917 0.5886459 0.5564336 fd_mean_match_pt 0.3198708 0.2080922 1.5371587 0.1250510 SiteCOBRE -0.3676564 0.1215226 -3.0254157 0.0026445 Siteds000030 -0.5622250 0.1093387 -5.1420482 0.0000004 SiteZHH 0.0764913 0.0821198 0.9314596 0.3521820 SurfArea_match_pt -0.5926052 0.2320469 -2.5538165 0.0110277 dist_by_total %&gt;% ggplot(aes(y = MeanDistance, x = Age)) + geom_point(aes(color = Site)) + geom_smooth(method = &quot;lm&quot;)+ facet_wrap(~DX) + theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; p1 &lt;- dist_by_total %&gt;% ggplot(aes(y = MeanDistance, x = DX, color = DX)) + geom_boxplot(outlier.shape = NA) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, binwidth = 0.08, alpha = 0.5) + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + facet_wrap( ~ Site, ncol = 4) + labs(x = NULL, color = NULL) + theme_minimal() + labs(y = &quot;PINT mean distance (mm)&quot;) + theme(legend.position = &quot;none&quot;) p2 &lt;- dist_by_total %&gt;% df_plus_resids(&quot;MeanDistance&quot;, lm_covars) %&gt;% ggplot(aes(y = resid, x = Age, color = DX)) + geom_point(alpha = 0.2) + geom_smooth(method = &quot;lm&quot;)+ scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + theme_bw() + labs(y = &quot;PINT distance residuals&quot;) dist_by_network &lt;- ana_data %&gt;% group_by(subid, network) %&gt;% summarise(MeanDistance = mean(std_distance)) %&gt;% ungroup() %&gt;% inner_join(pheno, by = &quot;subid&quot;) ## `summarise()` regrouping output by &#39;subid&#39; (override with `.groups` argument) dist_by_network_lmfit &lt;- dist_by_network %&gt;% ungroup() %&gt;% group_by(network) %&gt;% do(tidy(lm(formula(paste(&quot;MeanDistance ~&quot;, lm_predictors)),.))) %&gt;% mutate(p_bonf = p.value*6) dist_by_network_lmfit %&gt;% filter(!(term %in% c(&#39;(Intercept)&#39;, &#39;SiteCOBRE&#39;, &#39;Siteds000030&#39;, &#39;SiteZHH&#39;))) %&gt;% #select(network, term, df, statistic, p.value, p_bonf) %&gt;% arrange(term, network) %&gt;% knitr::kable() network term estimate std.error statistic p.value p_bonf VI Age_match_pt 1.1366964 0.4098716 2.7732985 0.0058108 0.0348648 SM Age_match_pt 1.6257206 0.5414940 3.0022873 0.0028490 0.0170941 DA Age_match_pt 0.6887221 0.3784455 1.8198713 0.0695315 0.4171893 VA Age_match_pt 0.0539861 0.2885697 0.1870817 0.8516922 5.1101530 DM Age_match_pt 0.0223583 0.3315875 0.0674281 0.9462748 5.6776490 FP Age_match_pt 0.5473200 0.2875183 1.9036004 0.0576851 0.3461107 VI DXSSD -0.3441888 0.1693443 -2.0324793 0.0427703 0.2566215 SM DXSSD -0.1908120 0.2237259 -0.8528828 0.3942386 2.3654314 DA DXSSD -0.2102749 0.1563601 -1.3448117 0.1794538 1.0767229 VA DXSSD -0.1610808 0.1192267 -1.3510464 0.1774500 1.0647002 DM DXSSD -0.0645531 0.1370001 -0.4711901 0.6377638 3.8265830 FP DXSSD 0.0378881 0.1187923 0.3189445 0.7499363 4.4996180 VI fd_mean_match_pt 0.4222965 0.5216948 0.8094703 0.4187296 2.5123774 SM fd_mean_match_pt 1.5855820 0.6892271 2.3005219 0.0219364 0.1316182 DA fd_mean_match_pt 0.4860387 0.4816949 1.0090178 0.3135807 1.8814841 VA fd_mean_match_pt 0.0296406 0.3672987 0.0806990 0.9357220 5.6143319 DM fd_mean_match_pt -0.0342583 0.4220528 -0.0811707 0.9353471 5.6120826 FP fd_mean_match_pt -0.0234690 0.3659605 -0.0641298 0.9488992 5.6933949 VI SexM 0.1056483 0.2098182 0.5035232 0.6148758 3.6892545 SM SexM -0.2269101 0.2771973 -0.8185870 0.4135131 2.4810789 DA SexM 0.0403942 0.1937308 0.2085067 0.8349403 5.0096416 VA SexM 0.2196289 0.1477223 1.4867684 0.1378697 0.8272183 DM SexM -0.1941668 0.1697436 -1.1438825 0.2533616 1.5201697 FP SexM 0.2146303 0.1471841 1.4582441 0.1455639 0.8733835 VI SurfArea_match_pt -1.2264312 0.5817501 -2.1081753 0.0356420 0.2138519 SM SurfArea_match_pt 0.8309689 0.7685679 1.0811913 0.2802684 1.6816102 DA SurfArea_match_pt -0.3447443 0.5371455 -0.6418080 0.5213683 3.1282096 VA SurfArea_match_pt -0.4979558 0.4095806 -1.2157701 0.2247949 1.3487697 DM SurfArea_match_pt -0.4369830 0.4706377 -0.9284912 0.3537170 2.1223021 FP SurfArea_match_pt -1.5147434 0.4080883 -3.7118028 0.0002352 0.0014111 p3 &lt;- dist_by_network %&gt;% group_by(network) %&gt;% nest() %&gt;% mutate(result = map(data, ~df_plus_resids(.x, &quot;MeanDistance&quot;, lm_covars))) %&gt;% unnest(result) %&gt;% ggplot(aes(y = resid, x = Age)) + geom_point(aes(color = DX),alpha = 0.2, size = 0.5) + geom_smooth(aes(color = DX), method = &quot;lm&quot;) + facet_wrap(~network, scales = &quot;free&quot;, nrow = 1) + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;))+ theme_minimal() + labs(y = &quot;PINT distance residuals&quot;) + theme(legend.position = &quot;none&quot;) report_model_beta_t &lt;- function(tidy_model, this_term, p_value_col = p.value) { p_value_col = enquo(p_value_col) tidy_model %&gt;% filter(term == this_term) %&gt;% mutate( beta = specify_decimal(estimate,2), beta_se = specify_decimal(std.error,2), t_stat = specify_decimal(statistic,2), pval_str = ifelse(!!p_value_col &lt; 0.001, format(!!p_value_col, scientific = TRUE, digits = 2), specify_decimal(!!p_value_col,3)), pval_str = ifelse(!!p_value_col &gt; 0.10, &quot;ns&quot;, pval_str), report_str = str_glue(&quot;beta(SE)={beta}({beta_se}), t={t_stat}, p={pval_str}&quot;)) %&gt;% pull(report_str) } report_model_beta_t(dist_by_network_lmfit %&gt;% filter(network == &quot;SM&quot;), &quot;Age_match_pt&quot;, p_value_col = p_bonf) ## beta(SE)=1.63(0.54), t=3.00, p=0.017 We investigated the mean of the distance that ROIs travelled during hte PINT algorithm as a measure of variability in intrinsic network topography, using linear models with SSD diagnosis and Age as predictors, and covariates of Sex, Site, total surface area and movement during the fMRI scan (mean framewise displacement). For mean distance travelled, across all 80 ROIs, We observe a small effect of SSD diagnosis, such that participants wiht SSD had a smaller distance travelled healthy controls (beta(SE)=-0.14(0.07), t=-2.05, p=0.041). Moreover, observed a linear effect of age of RSN network location variability, where older adults were more similar to the template than younger adults. (beta(SE)=0.57(0.16), t=3.51, p=5e-04, see Supplemental Figure 2). When we tested mean distance travelled separately for each intrinsic network, a significant effect of SSD diagnosis was not observed in any individual network after bonferonni correction for the 6 networks tested. The negative linear effect of age was observed for the visual (beta(SE)=1.14(0.41), t=2.77, p=0.035) and sensory motor networks (beta(SE)=1.63(0.54), t=3.00, p=0.017). 4.3 double check that model/plot look right without COBRE and ds00030 library(cowplot) ## ## ******************************************************** ## Note: As of version 1.0.0, cowplot does not change the ## default ggplot2 theme anymore. To recover the previous ## behavior, execute: ## theme_set(theme_cowplot()) ## ******************************************************** top_row &lt;- plot_grid(p1, p2, labels = c(&#39;A&#39;, &#39;B&#39;), label_size = 12) ## `geom_smooth()` using formula &#39;y ~ x&#39; plot_grid(top_row, p3, labels = c(&quot;&quot;, &#39;C&#39;), label_size = 12, ncol = 1) ## `geom_smooth()` using formula &#39;y ~ x&#39; 4.4 run linear model per edge (not reported) roi_dx_lm &lt;- ana_data %&gt;% ungroup() %&gt;% group_by(SHORTNAME) %&gt;% do(tidy(lm(formula(paste(&quot;std_distance ~&quot;, lm_predictors)),.))) %&gt;% ungroup() %&gt;% group_by(term) %&gt;% mutate(p_fdr = p.adjust(p.value, method = &#39;fdr&#39;)) roi_dx_lm %&gt;% filter(term %in% c(&quot;DXSSD&quot;)) %&gt;% filter(p_fdr &lt; 0.1) ## # A tibble: 0 x 7 ## # Groups: term [0] ## # … with 7 variables: SHORTNAME &lt;chr&gt;, term &lt;chr&gt;, estimate &lt;dbl&gt;, ## # std.error &lt;dbl&gt;, statistic &lt;dbl&gt;, p.value &lt;dbl&gt;, p_fdr &lt;dbl&gt; roi_dx_lm %&gt;% filter(term %in% c(&quot;Age_match_pt&quot;)) %&gt;% filter(p_fdr &lt; 0.1) ## # A tibble: 1 x 7 ## # Groups: term [1] ## SHORTNAME term estimate std.error statistic p.value p_fdr ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 VI03L Age_match_pt 5.24 1.26 4.15 0.0000403 0.00322 "],
["sub-cortical-cortical-stats-left-and-right.html", "Chapter 5 Sub-cortical Cortical Stats Left and Right 5.1 The paths to data 5.2 make a subject table from resuts pheno", " Chapter 5 Sub-cortical Cortical Stats Left and Right This analysis tries to combine timeseries data from PINT outputs with subcortical timeseries to ask two questions &quot;External&quot; validation of PINT. If PINT is indeed helping us better target meaningful resting state networks than we should see &quot;cleaner&quot; patterns of between the PINT output cortical ROIs and parcels of the subcortical structure that have been associated with these networks in literature. i.e. connectivity of the cortical ROIS with &quot;expected&quot; subcortical parcel should increae and correlation with other parcels should decrease after PINT. To interograte SSD related differences in Cortical-Subcortical connectivity - and to see if they persist after PINT. Some work Ji (in prep) kinda suggests that there might be differences between left and right subcortical structures. AND spliting the left and right seemed to make more sense for whole brain correlations (because our cortical nodes have a hemisphere). So in this analysis have separate left and right ROIs library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(broom) library(knitr) library(tableone) library(cowplot) ## ## ******************************************************** ## Note: As of version 1.0.0, cowplot does not change the ## default ggplot2 theme anymore. To recover the previous ## behavior, execute: ## theme_set(theme_cowplot()) ## ******************************************************** library(ggridges) library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT knitr::opts_chunk$set(dev = &quot;png&quot;, dev.args = list(type = &quot;cairo-png&quot;)) 5.1 The paths to data source(here(&#39;code/R/settings_helpers.R&#39;)) pheno &lt;- read_pheno_file() %&gt;% drop_na(DX) %&gt;% drop_na(Age_match) # dropping un-matched subjects ## Parsed with column specification: ## cols( ## .default = col_double(), ## dataset = col_character(), ## subject_id = col_character(), ## session_id = col_character(), ## task_id = col_character(), ## run_id = col_character(), ## acq_id = col_character(), ## subject = col_character(), ## session = col_character(), ## DX = col_character(), ## Site = col_character(), ## filename = col_character(), ## cmh_session_id = col_character(), ## Sex = col_character(), ## Scanner = col_character(), ## isFEP = col_character(), ## zhh_chosen_sess = col_logical(), ## ghost_NoGhost = col_character(), ## in_matched_sample = col_logical() ## ) ## See spec(...) for full column specifications. YeoNet_colours &lt;- define_Yeo7_colours() Yeo7_2011_80verts &lt;- read_Yeo72011_template() the_subcortical_guide &lt;- get_subcortical_guide() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(subcort_NET)` ## Parsed with column specification: ## cols( ## subcort_hemi = col_character(), ## subcort_ROI = col_character(), ## numvx = col_double(), ## network = col_character() ## ) node_annotations &lt;- get_node_annotations(Yeo7_2011_80verts, the_subcortical_guide) source(here(&#39;code/R/custom_plot_helpers.R&#39;)) source(here(&#39;code/R/file_reading_helpers.R&#39;)) lm_predictor_cols &lt;- c(&quot;DX&quot;, &quot;Age_match_pt&quot;, &quot;Sex&quot;, &quot;fd_mean_match_pt&quot;, &quot;Site&quot;) This reads all files and generate PINT to subcortical correlation values for a given subject 5.1.1 This reads all the subcortical files it can find Write a func_base and outputprefix cols into the pheno file for the file reading step pheno &lt;- pheno %&gt;% mutate(func_base = get_func_base_from_pint_summary_filename(filename,subject, session), outputprefix = construct_output_prefix(subject, session, func_base)) a litle chunck I use to test if test if the reader is working... all_corZ_results &lt;- pheno %&gt;% select(subject, outputprefix, dataset) %&gt;% mutate(the_corrs = map2(.$outputprefix, .$dataset, ~run_read_all_subject_timeseries_and_wholebrain_corZ(.x, .y))) save(all_corZ_results, file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_results_cache.Rdata&quot;)) run_read_all_subject_timeseries_and_subcortcort_corZ(pheno$outputprefix[1], pheno$dataset[1]) all_subcort_results &lt;- pheno %&gt;% select(subject, outputprefix, dataset) %&gt;% mutate(subcort_corrs = map2(outputprefix, dataset, ~run_read_all_subject_timeseries_and_subcortcort_corZ(.x, .y))) all_corZ_results &lt;- readRDS(file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_cache.rds&quot;)) 5.1.2 reduce data from the whole brain data to only include the subcortical cortical connections ## go from the whole matrix to only the subcortical-cortical and annotate all_subcort_results &lt;- all_corZ_results %&gt;% unnest(cols = c(the_corrs)) %&gt;% filter(!(from %in% the_subcortical_guide$combined_name)) %&gt;% inner_join(the_subcortical_guide, by = c(&quot;to&quot;=&quot;combined_name&quot;)) %&gt;% mutate(PINT_ROI = from, YeoNet = str_sub(PINT_ROI, 1,2), hemisphere = str_sub(PINT_ROI, 5,5)) %&gt;% mutate(conn_type = if_else(YeoNet == subcort_NET, &quot;same_net&quot;, &quot;diff_net&quot;), YeoNet = factor(YeoNet, levels = c(&quot;VI&quot;, &quot;SM&quot;, &quot;DA&quot;, &quot;VA&quot;, &quot;FP&quot;, &quot;DM&quot;)), subcort_NET = factor(subcort_NET, levels = c(&quot;VI&quot;, &quot;SM&quot;, &quot;DA&quot;, &quot;VA&quot;, &quot;FP&quot;, &quot;DM&quot;, &quot;LI&quot;))) 5.1.3 merge with the phenotypic data results_pheno &lt;- all_subcort_results %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% select(subject, dataset, rval = weight, YeoNet, hemisphere, conn_type, PINT_ROI, subcort_ROI, subcort_NET, subcort_hemi, vertex_type, Age, Site, Scanner, fd_mean, fd_perc, one_of(lm_predictor_cols), in_matched_sample) 5.2 make a subject table from resuts pheno library(tableone) therealtable1 &lt;- CreateTableOne( strata = c(&quot;DX&quot;, &quot;Site&quot;), vars = c(&quot;Age&quot;, &quot;Sex&quot;, &quot;fd_mean&quot;, &quot;fd_perc&quot;), data = filter(results_pheno, PINT_ROI==&quot;DMP1L&quot;,subcort_ROI==&quot;thalamus&quot;, subcort_NET==&quot;VA&quot;, subcort_hemi == &quot;L&quot;, vertex_type == &quot;pvertex&quot;) ) tabMat &lt;- print(therealtable1, quote = FALSE, noSpaces = TRUE, printToggle = FALSE) kable(tabMat) CTRL:CMH SSD:CMH CTRL:COBRE SSD:COBRE CTRL:ds000030 SSD:ds000030 CTRL:ZHH SSD:ZHH p test n 41 67 27 22 31 31 104 83 Age (mean (SD)) 26.37 (6.67) 32.19 (8.47) 33.93 (9.66) 29.55 (12.14) 33.77 (8.94) 35.23 (9.32) 25.42 (6.33) 25.86 (9.01) &lt;0.001 Sex = M (%) 22 (53.7) 40 (59.7) 23 (85.2) 19 (86.4) 26 (83.9) 24 (77.4) 47 (45.2) 63 (75.9) &lt;0.001 fd_mean (mean (SD)) 0.10 (0.04) 0.12 (0.06) 0.18 (0.04) 0.21 (0.08) 0.15 (0.08) 0.18 (0.07) 0.12 (0.04) 0.13 (0.06) &lt;0.001 fd_perc (mean (SD)) 6.56 (6.72) 11.08 (9.85) 28.47 (14.14) 26.60 (11.93) 19.61 (17.01) 28.26 (16.54) 12.74 (13.67) 13.33 (13.11) &lt;0.001 library(tableone) therealtable1 &lt;- CreateTableOne( vars = c(&quot;Age&quot;, &quot;Sex&quot;, &quot;DX&quot;, &quot;fd_mean&quot;, &quot;fd_perc&quot;), data = filter(results_pheno, PINT_ROI==&quot;DMP1L&quot;,subcort_ROI==&quot;thalamus&quot;, subcort_NET==&quot;VA&quot;, subcort_hemi == &quot;L&quot;, vertex_type == &quot;pvertex&quot;) ) tabMat &lt;- print(therealtable1, quote = FALSE, noSpaces = TRUE, printToggle = FALSE) kable(tabMat) Overall n 406 Age (mean (SD)) 28.90 (9.09) Sex = M (%) 264 (65.0) DX = SSD (%) 203 (50.0) fd_mean (mean (SD)) 0.14 (0.06) fd_perc (mean (SD)) 15.47 (14.51) "],
["is-pint-focusing-cortical-subcortical-connectivity.html", "Chapter 6 Is PINT &quot;focusing&quot; cortical subcortical connectivity", " Chapter 6 Is PINT &quot;focusing&quot; cortical subcortical connectivity table1 &lt;- results_pheno %&gt;% group_by(vertex_type, YeoNet, subcort_ROI, subcort_NET) %&gt;% summarise(n = n(), Mean = mean(rval), SD = sd(rval)) ## `summarise()` regrouping output by &#39;vertex_type&#39;, &#39;YeoNet&#39;, &#39;subcort_ROI&#39; (override with `.groups` argument) ggplot(table1, aes(y = YeoNet, x = subcort_NET, fill = Mean)) + geom_tile() + scale_fill_distiller(breaks = c(-0.5,0.5), type = &quot;div&quot;, palette = 5) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(subcort_ROI~vertex_type) functions to help re-annotated the function axes #&#39; sets some the main variables to factors to more descriptive labels add_corrtype_and_subcortROI_columns &lt;- function(data) { result &lt;- data %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;tvolume&#39;,&#39;tvertex&#39;,&#39;pvertex&#39;), labels = c(&quot;Volume Template&quot;, &quot;Surface Template&quot;, &quot;Surface Personalized&quot;)), subcortROI = factor(subcort_ROI, levels = c(&quot;striatum&quot;, &quot;thalamus&quot;, &quot;cerebellum&quot;), labels = c(&quot;Striatum&quot;, &quot;Thalamus&quot;, &quot;Cerebellum&quot;))) return(result) } #&#39;drop VI DA and LI network from resutls drop_VI_DA_LI &lt;- function(data) { result &lt;- data %&gt;% filter(subcort_NET != &quot;VI&quot;, subcort_NET != &quot;DA&quot;, subcort_NET != &quot;LI&quot;, YeoNet != &quot;VI&quot;, YeoNet != &quot;DA&quot;) return(result) } table1 %&gt;% drop_VI_DA_LI() %&gt;% add_corrtype_and_subcortROI_columns() %&gt;% ggplot(aes(y = YeoNet, x = subcort_NET, fill = Mean)) + geom_tile() + geom_text(aes(label = sprintf(&#39;%3.2f&#39;,Mean))) + scale_fill_distiller(breaks = c(-0.5,0.5), type = &quot;div&quot;, palette = 5) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(corrtype~subcortROI) + labs(y = &quot;Cortical RSN Network&quot;, x = &quot;Subcortical Subregion&quot;) table1 &lt;- results_pheno %&gt;% group_by(vertex_type, YeoNet, hemisphere, subcort_ROI, subcort_NET, subcort_hemi) %&gt;% summarise(n = n(), Mean = mean(rval), SD = sd(rval)) ## `summarise()` regrouping output by &#39;vertex_type&#39;, &#39;YeoNet&#39;, &#39;hemisphere&#39;, &#39;subcort_ROI&#39;, &#39;subcort_NET&#39; (override with `.groups` argument) table1 %&gt;% drop_VI_DA_LI() %&gt;% add_corrtype_and_subcortROI_columns() %&gt;% ggplot(aes(y = YeoNet, x = subcort_NET, fill = Mean)) + geom_tile() + geom_text(aes(label = sprintf(&#39;%3.2f&#39;,Mean))) + scale_fill_distiller(breaks = c(-0.5,0.5), type = &quot;div&quot;, palette = 5) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(subcortROI*subcort_hemi~corrtype*hemisphere) + labs(y = &quot;Cortical RSN Network&quot;, x = &quot;Subcortical Subregion&quot;) We see in the above figure that the Yeo 7 Network connectivity strongly shows the expected pattern in the cerebeullum. Lower evidence is seen in the striatum and thalamus, although there is a faint increase across the diagonal for the SM, VA and DM especially net_means &lt;- results_pheno %&gt;% drop_VI_DA_LI() %&gt;% group_by(YeoNet, subcort_ROI, subcort_NET, conn_type, subject, dataset, vertex_type) %&gt;% summarise(netmean = mean(rval)) %&gt;% ungroup() ## `summarise()` regrouping output by &#39;YeoNet&#39;, &#39;subcort_ROI&#39;, &#39;subcort_NET&#39;, &#39;conn_type&#39;, &#39;subject&#39;, &#39;dataset&#39; (override with `.groups` argument) subject_focus &lt;- net_means %&gt;% drop_VI_DA_LI() %&gt;% group_by(subject, dataset, subcort_ROI, YeoNet, vertex_type, conn_type) %&gt;% summarise(nets_type_avg = mean(netmean)) %&gt;% spread(conn_type, nets_type_avg) # %&gt;% ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;subcort_ROI&#39;, &#39;YeoNet&#39;, &#39;vertex_type&#39; (override with `.groups` argument) # ungroup() %&gt;% # mutate(focus_effect = same_net - diff_net) subject_focus %&gt;% ungroup() %&gt;% group_by(subcort_ROI, YeoNet, vertex_type) %&gt;% do(tidy(t.test(.$same_net, .$diff_net, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1)) %&gt;% kable() subcort_ROI YeoNet vertex_type estimate statistic p.value parameter conf.low conf.high method alternative cohenD cerebellum SM pvertex 0.2509370 32.79637 0 405 0.2358956 0.2659783 Paired t-test two.sided 1.6276567 cerebellum SM tvertex 0.2169637 33.29947 0 405 0.2041552 0.2297722 Paired t-test two.sided 1.6526250 cerebellum SM tvolume 0.1449559 30.41125 0 405 0.1355857 0.1543261 Paired t-test two.sided 1.5092851 cerebellum VA pvertex 0.2439763 31.09638 0 405 0.2285527 0.2593999 Paired t-test two.sided 1.5432875 cerebellum VA tvertex 0.2009076 31.79134 0 405 0.1884844 0.2133309 Paired t-test two.sided 1.5777775 cerebellum VA tvolume 0.1241032 29.82652 0 405 0.1159237 0.1322827 Paired t-test two.sided 1.4802655 cerebellum FP pvertex 0.1951463 35.93027 0 405 0.1844693 0.2058233 Paired t-test two.sided 1.7831891 cerebellum FP tvertex 0.1484289 36.99876 0 405 0.1405425 0.1563153 Paired t-test two.sided 1.8362175 cerebellum FP tvolume 0.1050624 33.83044 0 405 0.0989574 0.1111674 Paired t-test two.sided 1.6789766 cerebellum DM pvertex 0.3156742 37.62450 0 405 0.2991806 0.3321678 Paired t-test two.sided 1.8672725 cerebellum DM tvertex 0.2535391 37.36094 0 405 0.2401985 0.2668797 Paired t-test two.sided 1.8541922 cerebellum DM tvolume 0.1826252 35.64842 0 405 0.1725543 0.1926961 Paired t-test two.sided 1.7692013 striatum SM pvertex 0.1109963 16.03850 0 405 0.0973914 0.1246011 Paired t-test two.sided 0.7959773 striatum SM tvertex 0.1023066 17.77211 0 405 0.0909901 0.1136232 Paired t-test two.sided 0.8820152 striatum SM tvolume 0.0772217 16.51277 0 405 0.0680285 0.0864149 Paired t-test two.sided 0.8195149 striatum VA pvertex 0.1015677 24.03184 0 405 0.0932593 0.1098761 Paired t-test two.sided 1.1926804 striatum VA tvertex 0.0812200 24.03456 0 405 0.0745768 0.0878631 Paired t-test two.sided 1.1928150 striatum VA tvolume 0.0468493 18.40508 0 405 0.0418453 0.0518532 Paired t-test two.sided 0.9134290 striatum FP pvertex 0.0510051 13.22495 0 405 0.0434234 0.0585868 Paired t-test two.sided 0.6563435 striatum FP tvertex 0.0430208 14.93332 0 405 0.0373575 0.0486841 Paired t-test two.sided 0.7411284 striatum FP tvolume 0.0342699 14.65305 0 405 0.0296723 0.0388675 Paired t-test two.sided 0.7272189 striatum DM pvertex 0.0758314 12.57094 0 405 0.0639729 0.0876898 Paired t-test two.sided 0.6238855 striatum DM tvertex 0.0687229 15.15420 0 405 0.0598080 0.0776378 Paired t-test two.sided 0.7520903 striatum DM tvolume 0.0500223 12.02385 0 405 0.0418439 0.0582007 Paired t-test two.sided 0.5967339 thalamus SM pvertex 0.2544642 28.19933 0 405 0.2367249 0.2722035 Paired t-test two.sided 1.3995093 thalamus SM tvertex 0.2204035 29.09559 0 405 0.2055119 0.2352950 Paired t-test two.sided 1.4439901 thalamus SM tvolume 0.1408673 27.37653 0 405 0.1307520 0.1509826 Paired t-test two.sided 1.3586746 thalamus VA pvertex 0.0608091 13.53099 0 405 0.0519745 0.0696436 Paired t-test two.sided 0.6715316 thalamus VA tvertex 0.0470749 13.17317 0 405 0.0400499 0.0540999 Paired t-test two.sided 0.6537736 thalamus VA tvolume 0.0319912 12.36880 0 405 0.0269067 0.0370757 Paired t-test two.sided 0.6138533 thalamus FP pvertex 0.0928243 19.34700 0 405 0.0833925 0.1022561 Paired t-test two.sided 0.9601755 thalamus FP tvertex 0.0797281 21.65148 0 405 0.0724892 0.0869669 Paired t-test two.sided 1.0745447 thalamus FP tvolume 0.0532868 18.38452 0 405 0.0475889 0.0589847 Paired t-test two.sided 0.9124085 thalamus DM pvertex 0.1120022 19.13990 0 405 0.1004986 0.1235058 Paired t-test two.sided 0.9498971 thalamus DM tvertex 0.0956365 21.25110 0 405 0.0867897 0.1044834 Paired t-test two.sided 1.0546743 thalamus DM tvolume 0.0700509 17.89502 0 405 0.0623555 0.0777463 Paired t-test two.sided 0.8881148 YeoNet7 &lt;- tribble( ~network, ~hexcode, &quot;VI&quot;, &quot;#781286&quot;, &quot;SM&quot;, &quot;#4682B4&quot;, &quot;DA&quot;, &quot;#00760E&quot;, &quot;VA&quot;, &quot;#C43AFA&quot;, &quot;FP&quot;, &quot;#E69422&quot;, &quot;DM&quot;, &quot;#CD3E3A&quot;, &quot;LI&quot;, &quot;#dcf8a4&quot;) #&#39; Left section of the raincload plots used in sub-cortical cortical change reporting samediff_subcort_raincloud &lt;- function(data, this_subcort_ROI, this_YeoNet, no_ticks = TRUE) { eff_size_df &lt;- data %&gt;% ungroup() %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;))) %&gt;% filter(subcort_ROI == this_subcort_ROI, YeoNet == this_YeoNet) %&gt;% group_by(subcort_ROI, YeoNet, corrtype) %&gt;% do(tidy(t.test(.$same_net, .$diff_net, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), cohenD_str = str_c(&quot;d = &quot;, format(cohenD, digits = 3))) plt &lt;- data %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;))) %&gt;% gather(nettype, gvalue, diff_net, same_net) %&gt;% filter(subcort_ROI == this_subcort_ROI, YeoNet == this_YeoNet) %&gt;% ungroup() %&gt;% ggplot(aes(y = corrtype, x = gvalue)) + geom_density_ridges(aes(fill = nettype, colour = nettype), #jittered_points = TRUE, position = &quot;raincloud&quot;, alpha = 0.5, scale = 2, quantile_lines = TRUE, quantiles = 2 ) + geom_text(aes(y = corrtype, label = cohenD_str), x = 0.55, nudge_y = 0.1, data = eff_size_df) + geom_vline(xintercept = 0) + scale_colour_manual(values = c(&quot;#808080&quot;, YeoNet7 %&gt;% filter(network==this_YeoNet) %&gt;% pull(hexcode))) + scale_fill_manual(values = c(&quot;#808080&quot;, YeoNet7 %&gt;% filter(network==this_YeoNet) %&gt;% pull(hexcode))) + scale_x_continuous(limits = c(-0.5, 0.6)) + labs(y = NULL, x = NULL) + theme(legend.position=&#39;none&#39;) if (no_ticks==TRUE) { plt &lt;- plt + theme(axis.title.x=element_blank(), axis.text.x=element_blank()) } else { plt &lt;- plt + labs(x = &quot;Subcortical-Cortical Correlation (Z)&quot;) } return(plt) } subcortical_rainclouds &lt;- function(subject_focus, this_subcort) { DM &lt;- samediff_subcort_raincloud(subject_focus, this_subcort, &quot;DM&quot;) FP &lt;- samediff_subcort_raincloud(subject_focus,this_subcort, &quot;FP&quot;) VA &lt;- samediff_subcort_raincloud(subject_focus,this_subcort, &quot;VA&quot;) SM &lt;- samediff_subcort_raincloud(subject_focus,this_subcort, &quot;SM&quot;, no_ticks = FALSE) title &lt;- ggdraw() + draw_label(this_subcort, fontface=&#39;bold&#39;) plt &lt;- plot_grid(title, DM, FP, VA, SM, ncol = 1, rel_heights = c(0.5, 1, 1, 1, 1.5)) return(plt) } subcortical_rainclouds(subject_focus, &quot;striatum&quot;) ## Picking joint bandwidth of 0.0296 ## Picking joint bandwidth of 0.0251 ## Picking joint bandwidth of 0.028 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.035 ## Warning: Removed 16 rows containing non-finite values (stat_density_ridges). subcortical_rainclouds(subject_focus, &quot;thalamus&quot;) ## Picking joint bandwidth of 0.0267 ## Picking joint bandwidth of 0.0224 ## Picking joint bandwidth of 0.0236 ## Picking joint bandwidth of 0.0336 ## Warning: Removed 11 rows containing non-finite values (stat_density_ridges). subcortical_rainclouds(subject_focus, &quot;cerebellum&quot;) ## Picking joint bandwidth of 0.0289 ## Warning: Removed 5 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0248 ## Picking joint bandwidth of 0.029 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0335 ## Warning: Removed 17 rows containing non-finite values (stat_density_ridges). subcortical_raincloud(subject_focus, &quot;cerebellum&quot;) ## Picking joint bandwidth of 0.0289 ## Warning: Removed 5 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0339 ## Warning: Removed 27 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0248 ## Picking joint bandwidth of 0.0219 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.029 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.032 ## Warning: Removed 9 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0335 ## Warning: Removed 17 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0327 ## Warning: Removed 13 rows containing non-finite values (stat_density_ridges). subcortical_raincloud(subject_focus, &quot;striatum&quot;) ## Picking joint bandwidth of 0.0296 ## Picking joint bandwidth of 0.0259 ## Picking joint bandwidth of 0.0251 ## Picking joint bandwidth of 0.0158 ## Picking joint bandwidth of 0.028 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0169 ## Picking joint bandwidth of 0.035 ## Warning: Removed 16 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0299 ## Warning: Removed 2 rows containing non-finite values (stat_density_ridges). subcortical_raincloud(subject_focus, &quot;thalamus&quot;) ## Picking joint bandwidth of 0.0267 ## Picking joint bandwidth of 0.0251 ## Picking joint bandwidth of 0.0224 ## Picking joint bandwidth of 0.0194 ## Picking joint bandwidth of 0.0236 ## Picking joint bandwidth of 0.0182 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0336 ## Warning: Removed 11 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0364 ## Warning: Removed 25 rows containing non-finite values (stat_density_ridges). # note that the bonferronni corrective factor are 4 network times 3 subregions = 12 bonf_cor_factor = 4*3 subject_focus_wrgl &lt;- subject_focus %&gt;% ungroup() %&gt;% mutate(focus_effect = same_net - diff_net) %&gt;% group_by(subject, dataset, subcort_ROI, YeoNet) %&gt;% gather(conntype, netmean, same_net, diff_net, focus_effect) %&gt;% spread(vertex_type, netmean) %&gt;% ungroup() pvertex_vs_tvertex &lt;- subject_focus_wrgl %&gt;% group_by(subcort_ROI, YeoNet, conntype) %&gt;% do(tidy(t.test(.$pvertex, .$tvertex, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), p_bonf = p.value*bonf_cor_factor) tvertex_vs_tvolume &lt;- subject_focus_wrgl %&gt;% group_by(subcort_ROI, YeoNet, conntype) %&gt;% do(tidy(t.test(.$tvertex, .$tvolume, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), p_bonf = p.value*bonf_cor_factor) focus_results &lt;- bind_rows(pvertex_vs_tvertex = pvertex_vs_tvertex, tvertex_vs_tvolume = tvertex_vs_tvolume, .id = &quot;test_vars&quot;) focus_results %&gt;% mutate(pval_str = ifelse(p_bonf &lt; 0.001, format(p.value, scientific = TRUE, digits = 2), specify_decimal(p_bonf,3))) %&gt;% mutate(report_str = str_c(&quot;d = &quot;, specify_decimal(cohenD, 2), &quot;, t(&quot;,parameter, &#39;) =&#39;, specify_decimal(statistic, 2), &#39;, p=&#39;, pval_str)) %&gt;% select(test_vars, conntype, subcort_ROI, YeoNet, report_str) %&gt;% spread(conntype, report_str) %&gt;% select(test_vars, subcort_ROI, YeoNet, same_net, diff_net, focus_effect) %&gt;% ungroup() %&gt;% mutate(test_vars = factor(test_vars, levels = c(&quot;tvertex_vs_tvolume&quot;,&quot;pvertex_vs_tvertex&quot;)), subcort_ROI = factor(subcort_ROI, levels = c(&quot;cerebellum&quot;, &quot;thalamus&quot;, &quot;striatum&quot;)), YeoNet = factor(YeoNet, levels = c(&quot;DM&quot;, &quot;FP&quot;, &quot;VA&quot;, &quot;SM&quot;))) %&gt;% arrange(test_vars, desc(subcort_ROI), YeoNet) %&gt;% knitr::kable() test_vars subcort_ROI YeoNet same_net diff_net focus_effect tvertex_vs_tvolume striatum DM d = 0.32, t(405) =6.37, p=5.2e-10 d = 0.05, t(405) =1.06, p=3.465 d = 0.31, t(405) =6.24, p=1.1e-09 tvertex_vs_tvolume striatum FP d = 0.27, t(405) =5.47, p=7.9e-08 d = 0.20, t(405) =4.13, p=4.5e-05 d = 0.22, t(405) =4.40, p=1.4e-05 tvertex_vs_tvolume striatum VA d = 0.75, t(405) =15.14, p=2.5e-41 d = 0.36, t(405) =7.32, p=1.3e-12 d = 0.74, t(405) =14.94, p=1.7e-40 tvertex_vs_tvolume striatum SM d = 0.17, t(405) =3.50, p=0.006 d = -0.09, t(405) =-1.78, p=0.910 d = 0.35, t(405) =7.01, p=9.9e-12 tvertex_vs_tvolume thalamus DM d = 0.29, t(405) =5.76, p=1.7e-08 d = -0.08, t(405) =-1.54, p=1.493 d = 0.41, t(405) =8.19, p=3.5e-15 tvertex_vs_tvolume thalamus FP d = 0.47, t(405) =9.39, p=4.4e-19 d = 0.14, t(405) =2.86, p=0.054 d = 0.51, t(405) =10.21, p=6.4e-22 tvertex_vs_tvolume thalamus VA d = 0.41, t(405) =8.30, p=1.6e-15 d = 0.22, t(405) =4.52, p=8.0e-06 d = 0.29, t(405) =5.94, p=6.0e-09 tvertex_vs_tvolume thalamus SM d = 0.89, t(405) =17.93, p=2.3e-53 d = 0.04, t(405) =0.72, p=5.636 d = 0.82, t(405) =16.61, p=1.2e-47 tvertex_vs_tvolume cerebellum DM d = 0.46, t(405) =9.32, p=7.4e-19 d = -0.51, t(405) =-10.23, p=5.2e-22 d = 0.84, t(405) =16.92, p=5.7e-49 tvertex_vs_tvolume cerebellum FP d = 0.38, t(405) =7.66, p=1.4e-13 d = -0.28, t(405) =-5.72, p=2.0e-08 d = 0.80, t(405) =16.15, p=1.2e-45 tvertex_vs_tvolume cerebellum VA d = 0.43, t(405) =8.64, p=1.3e-16 d = -0.69, t(405) =-13.86, p=5.0e-36 d = 0.99, t(405) =20.03, p=1.6e-62 tvertex_vs_tvolume cerebellum SM d = 0.04, t(405) =0.81, p=5.011 d = -0.84, t(405) =-17.03, p=2e-49 d = 0.78, t(405) =15.62, p=2.2e-43 pvertex_vs_tvertex striatum DM d = -0.05, t(405) =-0.93, p=4.261 d = -0.19, t(405) =-3.86, p=0.002 d = 0.14, t(405) =2.72, p=0.081 pvertex_vs_tvertex striatum FP d = 0.07, t(405) =1.32, p=2.262 d = -0.07, t(405) =-1.51, p=1.595 d = 0.22, t(405) =4.35, p=1.7e-05 pvertex_vs_tvertex striatum VA d = 0.64, t(405) =12.81, p=9.3e-32 d = 0.28, t(405) =5.66, p=2.8e-08 d = 0.65, t(405) =13.04, p=1.0e-32 pvertex_vs_tvertex striatum SM d = 0.05, t(405) =1.04, p=3.602 d = -0.09, t(405) =-1.77, p=0.932 d = 0.18, t(405) =3.58, p=0.005 pvertex_vs_tvertex thalamus DM d = 0.07, t(405) =1.37, p=2.075 d = -0.22, t(405) =-4.49, p=9.4e-06 d = 0.33, t(405) =6.74, p=5.3e-11 pvertex_vs_tvertex thalamus FP d = 0.21, t(405) =4.27, p=2.4e-05 d = -0.01, t(405) =-0.16, p=10.512 d = 0.29, t(405) =5.84, p=1.1e-08 pvertex_vs_tvertex thalamus VA d = 0.42, t(405) =8.46, p=4.9e-16 d = 0.19, t(405) =3.87, p=0.001 d = 0.38, t(405) =7.63, p=1.7e-13 pvertex_vs_tvertex thalamus SM d = 0.52, t(405) =10.53, p=4.5e-23 d = -0.03, t(405) =-0.54, p=7.075 d = 0.55, t(405) =11.06, p=5.0e-25 pvertex_vs_tvertex cerebellum DM d = 0.31, t(405) =6.19, p=1.5e-09 d = -0.74, t(405) =-14.92, p=2.0e-40 d = 0.96, t(405) =19.35, p=1.5e-59 pvertex_vs_tvertex cerebellum FP d = 0.42, t(405) =8.44, p=5.9e-16 d = -0.41, t(405) =-8.35, p=1.1e-15 d = 0.87, t(405) =17.51, p=1.7e-51 pvertex_vs_tvertex cerebellum VA d = 0.33, t(405) =6.67, p=8.2e-11 d = -0.53, t(405) =-10.59, p=2.8e-23 d = 0.80, t(405) =16.03, p=3.9e-45 pvertex_vs_tvertex cerebellum SM d = 0.00, t(405) =-0.02, p=11.771 d = -0.66, t(405) =-13.31, p=9e-34 d = 0.60, t(405) =12.04, p=9.9e-29 focus_results_ranges &lt;- focus_results %&gt;% ungroup() %&gt;% group_by(test_vars, conntype) %&gt;% summarise(d_min = specify_decimal(min(cohenD),2), d_max = specify_decimal(max(cohenD),2), d_str = str_glue(&#39;{d_min}-{d_max}&#39;)) ## `summarise()` regrouping output by &#39;test_vars&#39; (override with `.groups` argument) focus_results_ranges %&gt;% filter(test_vars==&quot;pvertex_vs_tvertex&quot;, conntype==&quot;focus_effect&quot;) %&gt;% pull(d_str) ## 0.14-0.96 pvertex_vs_tvolume &lt;- subject_focus_wrgl %&gt;% group_by(subcort_ROI, YeoNet, conntype) %&gt;% do(tidy(t.test(.$pvertex, .$tvolume, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1)) pvertex_vs_tvolume_ranges &lt;- pvertex_vs_tvolume %&gt;% filter(conntype == &quot;same_net&quot;) %&gt;% ungroup() %&gt;% summarise(est_min = specify_decimal(min(estimate),2), est_max = specify_decimal(max(estimate),2), est_str = str_glue(&#39;{est_min}-{est_max}&#39;), d_min = specify_decimal(min(cohenD),2), d_max = specify_decimal(max(cohenD),2), d_str = str_glue(&#39;{d_min}-{d_max}&#39;)) While subcortical-cortical correlations are noticeably weaker than the cortical-cortical correlations plotted in Figure 1, for all cortical-timeseries extraction methods, for all four networks, we observed that the correlation to the expected subregions of the striatum, thalamus and striatum are positive, and greater than the correlations of these cortical networks to other subregions. Moreover, we observed that this expected pattern is strengthened when using a surface-based cortical timeseries extraction approach, as compared to the volume-based approach (cohen D (min-max) = 0.22-0.99). The pattern is again strengthened when using PINT, the personalized surface-based approach, as opposed to the template surface-based approach (cohen D (min-max) = 0.14-0.96). In total, moving from a volume-based cortical timeseries extract methods to PINT increased the correlation with the expected cortical subregions by an effect size of 0.03-0.99, across the four cortical networks and subregions tested (see suppl Table 3). "],
["cortical-cortical-results.html", "Chapter 7 Cortical-cortical results 7.1 To do - rainclouds for withing between changes in cortical cortical??", " Chapter 7 Cortical-cortical results Checking how the cortical-cortical stats change with adding surfaced based analyses and PINT library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(broom) library(knitr) library(cowplot) ## ## ******************************************************** ## Note: As of version 1.0.0, cowplot does not change the ## default ggplot2 theme anymore. To recover the previous ## behavior, execute: ## theme_set(theme_cowplot()) ## ******************************************************** library(ggridges) library(igraph) ## ## Attaching package: &#39;igraph&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## as_data_frame, groups, union ## The following objects are masked from &#39;package:purrr&#39;: ## ## compose, simplify ## The following object is masked from &#39;package:tidyr&#39;: ## ## crossing ## The following object is masked from &#39;package:tibble&#39;: ## ## as_data_frame ## The following objects are masked from &#39;package:stats&#39;: ## ## decompose, spectrum ## The following object is masked from &#39;package:base&#39;: ## ## union library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT knitr::opts_chunk$set(dev = &quot;png&quot;, dev.args = list(type = &quot;cairo-png&quot;)) source(here(&#39;code/R/settings_helpers.R&#39;)) pheno &lt;- read_pheno_file() %&gt;% drop_na(DX) %&gt;% drop_na(Age_match) # dropping un-matched subjects ## Parsed with column specification: ## cols( ## .default = col_double(), ## dataset = col_character(), ## subject_id = col_character(), ## session_id = col_character(), ## task_id = col_character(), ## run_id = col_character(), ## acq_id = col_character(), ## subject = col_character(), ## session = col_character(), ## DX = col_character(), ## Site = col_character(), ## filename = col_character(), ## cmh_session_id = col_character(), ## Sex = col_character(), ## Scanner = col_character(), ## isFEP = col_character(), ## zhh_chosen_sess = col_logical(), ## ghost_NoGhost = col_character(), ## in_matched_sample = col_logical() ## ) ## See spec(...) for full column specifications. #YeoNet_colours &lt;- define_YeoN7_colours() Yeo7_2011_80verts &lt;- read_Yeo72011_template() #the_subcortical_guide &lt;- get_subcortical_guide() node_annotations &lt;- get_node_annotations(read_Yeo72011_template(), get_subcortical_guide()) ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(subcort_NET)` ## Parsed with column specification: ## cols( ## subcort_hemi = col_character(), ## subcort_ROI = col_character(), ## numvx = col_double(), ## network = col_character() ## ) source(here(&#39;code/R/file_reading_helpers.R&#39;)) source(here(&#39;code/R/custom_plot_helpers.R&#39;)) pheno &lt;- pheno %&gt;% mutate(func_base = get_func_base_from_pint_summary_filename(filename,subject, session), outputprefix = construct_output_prefix(subject, session, func_base)) map2(pheno$outputprefix[1], pheno$dataset[1], ~run_read_all_subject_timeseries_and_cortcort_corZ(.x, .y)) all_corZ_cort_results &lt;- pheno %&gt;% select(subject, outputprefix, dataset) %&gt;% mutate(the_corrs = map2(.$outputprefix, .$dataset, ~run_read_all_subject_timeseries_and_cortcort_corZ(.x, .y))) --- use the cache to load the data all_corZ_results &lt;- readRDS(file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_cache.rds&quot;)) all_corZ_cort_results &lt;- all_corZ_results %&gt;% semi_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% unnest(cols = c(the_corrs)) %&gt;% filter(from %in% Yeo7_2011_80verts$SHORTNAME) %&gt;% filter(to %in% Yeo7_2011_80verts$SHORTNAME) %&gt;% group_by(subject, dataset, outputprefix) %&gt;% nest(the_corrs = c(vertex_type, from, to, weight)) rm(all_corZ_results) #&#39; go uppertri data to full dataframe for geom_tile uppertri_df_to_full &lt;- function(graph_df) { # converts from three col graph df to adjacency matrix uppertri_df_to_agjmat &lt;- function(graph_df) { names(graph_df) &lt;- c(&#39;to&#39;, &#39;from&#39;, &#39;myattr&#39;) matrix_out &lt;- graph_df %&gt;% graph_from_data_frame(.,directed = F) %&gt;% get.adjacency(., type = &quot;both&quot;, attr = &quot;myattr&quot;) %&gt;% as.matrix() return(matrix_out) } result &lt;- graph_df %&gt;% uppertri_df_to_agjmat() %&gt;% as.data.frame() %&gt;% mutate(to = row.names(.)) %&gt;% gather(from, value, -to) return(result) } mean_cors &lt;- all_corZ_cort_results %&gt;% unnest(cols = c(the_corrs)) %&gt;% group_by(vertex_type, to, from) %&gt;% summarise(mcorZ = mean(weight)) %&gt;% ungroup() ## `summarise()` regrouping output by &#39;vertex_type&#39;, &#39;to&#39; (override with `.groups` argument) # build the full heatmap plot object withincortical_heatmap &lt;- function(data, plt_title = &quot;&quot;, fillvar = &quot;weight&quot;) { fillvar &lt;- enquo(fillvar) max_fill &lt;- 1.15 ## filter the node_annotations to take only cortical edges cortical_annotations &lt;- node_annotations %&gt;% filter(etype == &quot;Cort&quot;) %&gt;% mutate(network = factor(network, levels = YeoNet7$network[1:6])) %&gt;% arrange(desc(network), node_name) # figure out where the white lines goes hgrid_beaks &lt;- cortical_annotations %&gt;% arrange(network, node_name) %&gt;% mutate(netnum = as.numeric(network), diffnet = (netnum -lag(netnum))*80:1) %&gt;% filter(diffnet &gt; 0) %&gt;% pull(diffnet) # make the Yeo 6 network color bar for the axis network_bar &lt;- cortical_annotations %&gt;% mutate(to_lab = factor(node_name, levels = rev(cortical_annotations$node_name))) %&gt;% ggplot(aes(x=1, y=to_lab, fill = network)) + geom_tile() + geom_hline(yintercept= 80.5-hgrid_beaks, color=&#39;white&#39;, size=1) + scale_fill_manual(values = YeoNet7$hexcode[1:6]) + coord_fixed(ratio = 0.75) network_top_bar &lt;- cortical_annotations %&gt;% mutate(from_lab = factor(node_name, levels = node_annotations$node_name)) %&gt;% ggplot(aes(x=from_lab, y=1, fill = network)) + geom_tile() + geom_vline(xintercept= hgrid_beaks + 0.5, color=&#39;white&#39;, size=1) + scale_fill_manual(values = rev(YeoNet7$hexcode[1:6])) + coord_fixed(ratio = 0.75) plt &lt;- data %&gt;% filter(to %in% cortical_annotations$node_name) %&gt;% filter(from %in% cortical_annotations$node_name) %&gt;% ungroup() %&gt;% select(to, from, !!fillvar) %&gt;% uppertri_df_to_full() %&gt;% mutate(to_lab = factor(to, levels = cortical_annotations$node_name), from_lab = factor(from, levels = rev(cortical_annotations$node_name)), value = if_else(value &gt; max_fill, max_fill, value)) %&gt;% ggplot(aes(x=to_lab, y=from_lab, fill=value)) + geom_tile() + geom_hline(yintercept= 80.5-hgrid_beaks, color=&#39;white&#39;, size=1) + geom_vline(xintercept= hgrid_beaks + 0.5, color=&#39;white&#39;, size=1) + scale_fill_gradient2(high = &quot;#b2182b&quot;, mid = &quot;white&quot;, low = &quot;#2166ac&quot;, midpoint = 0, limits = c(-(max_fill), max_fill)) + theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5), axis.text = element_text(size = 5)) + # panel.border = element_rect(linetype = &quot;solid&quot;, color = &quot;black&quot;)) + coord_fixed() + labs(title = plt_title, x = NULL, y = NULL, fill = &quot;Correlation (Z)&quot;) #p1&lt;- insert_yaxis_grob(plt, network_top_bar, grid::unit(.03, &quot;null&quot;), position = &quot;bottom&quot;) p2&lt;- insert_yaxis_grob(plt, network_bar, grid::unit(.03, &quot;null&quot;), position = &quot;left&quot;) return(p2) } mean_cors %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% withincortical_heatmap(&quot;Personalized Mean Correlation&quot;, fillvar = &quot;mcorZ&quot;) %&gt;% ggdraw() mean_cors %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% withincortical_heatmap(&quot;Surface Template Mean Correlation&quot;, mcorZ) %&gt;% ggdraw() mean_cors %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% withincortical_heatmap(&quot;Volume Template Mean Correlation&quot;, mcorZ) %&gt;% ggdraw() thissubject = unique(pheno$subject)[2] this_results_pheno &lt;- all_corZ_cort_results %&gt;% filter(subject==thissubject) %&gt;% unnest() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(the_corrs)` this_results_pheno %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Personalized Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Surface Template Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Volume Template Correlation&quot;)) %&gt;% ggdraw() thissubject = unique(pheno$subject)[3] this_results_pheno &lt;- all_corZ_cort_results %&gt;% filter(subject==thissubject) %&gt;% unnest() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(the_corrs)` this_results_pheno %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Personalized Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Surface Template Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Volume Template Correlation&quot;)) %&gt;% ggdraw() thissubject = unique(pheno$subject)[100] this_results_pheno &lt;- all_corZ_cort_results %&gt;% filter(subject==thissubject) %&gt;% unnest() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(the_corrs)` this_results_pheno %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Personalized Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Surface Template Correlation&quot;)) %&gt;% ggdraw() this_results_pheno %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% withincortical_heatmap(str_c(thissubject, &quot; Volume Template Correlation&quot;)) %&gt;% ggdraw() 7.1 To do - rainclouds for withing between changes in cortical cortical?? Need to start by calculating indvididual subject same and diff means by network calc_wtn_and_cross_network_means &lt;- function(graph_df, node_list) { result &lt;- graph_df %&gt;% # setup the data by switching from upper-tri to full filter(to %in% node_list) %&gt;% filter(from %in% node_list) %&gt;% ungroup() %&gt;% select(to, from, weight) %&gt;% uppertri_df_to_full() %&gt;% # add columns we need to do the computation based on YeoNet7 naming convention.. mutate(to_network = str_sub(to, 1,2), wtn_or_cross = if_else(to_network == str_sub(from,1,2), &quot;within&quot;, &quot;cross&quot;)) %&gt;% # remove the same-edge bits filter(to != from) %&gt;% # group_by and compute the means group_by(to_network, wtn_or_cross) %&gt;% summarise(net_mean = mean(value)) return(result) } # define a vector of the cortical rois cortical_rois &lt;- node_annotations %&gt;% filter(etype == &quot;Cort&quot;) %&gt;% pull(node_name) # calculate all the subject-wise within and cross edge means all_subject_wtn_cross_means &lt;- all_corZ_cort_results %&gt;% # slice(1) %&gt;% ungroup() %&gt;% unnest(cols = c(the_corrs)) %&gt;% select(vertex_type, subject, dataset, to, from, weight) %&gt;% ungroup() %&gt;% group_by(vertex_type, subject, dataset) %&gt;% nest() %&gt;% mutate(net_means_res = map(data, ~calc_wtn_and_cross_network_means( .x, cortical_rois))) %&gt;% unnest(net_means_res) %&gt;% select(vertex_type, subject, dataset, to_network, wtn_or_cross, net_mean) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;to_network&#39; (override with `.groups` argument) #&#39; Left section of the raincload plots used in sub-cortical cortical change reporting samediff_cortcort_raincloud &lt;- function(data, this_YeoNet, no_ticks = TRUE) { ## grab the color this_YeoNet_color = YeoNet7 %&gt;% filter(network==this_YeoNet) %&gt;% pull(hexcode) ## label plot data plt_data &lt;- data %&gt;% ungroup() %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;))) %&gt;% filter(to_network == this_YeoNet) ## calculate effect sizes eff_size_df &lt;- plt_data %&gt;% ungroup() %&gt;% group_by(subject, dataset, to_network, corrtype) %&gt;% spread(wtn_or_cross, net_mean) %&gt;% ungroup() %&gt;% group_by(to_network, corrtype) %&gt;% do(tidy(t.test(.$within, .$cross, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), cohenD_str = str_c(&quot;d = &quot;, format(cohenD, digits = 3, nsmall=1))) ## make the plot plt &lt;- plt_data %&gt;% ungroup() %&gt;% ggplot(aes(y = corrtype, x = net_mean)) + geom_density_ridges(aes(fill = wtn_or_cross, colour = wtn_or_cross), #jittered_points = TRUE, position = &quot;raincloud&quot;, alpha = 0.5, scale = 2, quantile_lines = TRUE, quantiles = 2 ) + geom_text(aes(y = corrtype, label = cohenD_str), x = 1.25, label.size = 0.18, nudge_y = 0.4, data = eff_size_df) + geom_vline(xintercept = 0) + scale_colour_manual(values = c(&quot;#808080&quot;, this_YeoNet_color)) + scale_fill_manual(values = c(&quot;#808080&quot;, this_YeoNet_color)) + scale_x_continuous(limits = c(-0.5, 1.5)) + labs(y = NULL, x = NULL) + theme(legend.position=&#39;none&#39;) if (no_ticks==TRUE) { plt &lt;- plt + theme(axis.title.x=element_blank(), axis.text.x=element_blank()) } else { plt &lt;- plt + labs(x = &quot;Correlation (Z)&quot;) } return(plt) } #&#39; Combined subcortical-cortical correlation rainclouds for one subcortical structure cortical_raincloud &lt;- function(subject_focus, YeoNet7) { DM &lt;- samediff_cortcort_raincloud(subject_focus, &quot;DM&quot;) FP &lt;- samediff_cortcort_raincloud(subject_focus, &quot;FP&quot;) VA &lt;- samediff_cortcort_raincloud(subject_focus, &quot;VA&quot;) DA &lt;- samediff_cortcort_raincloud(subject_focus, &quot;DA&quot;) SM &lt;- samediff_cortcort_raincloud(subject_focus, &quot;SM&quot;) VI &lt;- samediff_cortcort_raincloud(subject_focus, &quot;VI&quot;, no_ticks = FALSE) title &lt;- ggdraw() + draw_label(&quot;Within Cortical&quot;, fontface=&#39;bold&#39;) plt &lt;- plot_grid(title, DM, FP, VA, DA, SM, VI, ncol = 1, rel_heights = c(0.5, 1, 1, 1, 1, 1, 1.5)) return(plt) } cortical_raincloud(all_subject_wtn_cross_means, YeoNet7) ## Warning: Ignoring unknown parameters: label.size ## Warning: Ignoring unknown parameters: label.size ## Warning: Ignoring unknown parameters: label.size ## Warning: Ignoring unknown parameters: label.size ## Warning: Ignoring unknown parameters: label.size ## Warning: Ignoring unknown parameters: label.size ## Picking joint bandwidth of 0.0218 ## Picking joint bandwidth of 0.0177 ## Picking joint bandwidth of 0.0192 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0204 ## Warning: Removed 1 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0246 ## Warning: Removed 2 rows containing non-finite values (stat_density_ridges). ## Picking joint bandwidth of 0.0322 ## Warning: Removed 3 rows containing non-finite values (stat_density_ridges). specify_decimal &lt;- function(x, k) trimws(format(round(x, k), nsmall=k)) report_ds &lt;- all_subject_wtn_cross_means %&gt;% ungroup() %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;))) %&gt;% group_by(subject, dataset, to_network, corrtype) %&gt;% spread(wtn_or_cross, net_mean) %&gt;% ungroup() %&gt;% group_by(to_network, corrtype) %&gt;% do(tidy(t.test(.$within, .$cross, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), cohenD_str = str_c(&quot;d = &quot;, specify_decimal(cohenD, 2))) report_ds ## # A tibble: 18 x 12 ## # Groups: to_network, corrtype [18] ## to_network corrtype estimate statistic p.value parameter conf.low conf.high ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 DA Surface… 0.584 74.6 1.07e-238 405 0.568 0.599 ## 2 DA Surface… 0.285 50.5 9.08e-177 405 0.274 0.296 ## 3 DA Volume … 0.209 41.7 1.09e-148 405 0.199 0.219 ## 4 DM Surface… 0.696 77.6 3.14e-245 405 0.678 0.713 ## 5 DM Surface… 0.376 55.6 1.20e-191 405 0.362 0.389 ## 6 DM Volume … 0.396 56.5 2.65e-194 405 0.383 0.410 ## 7 FP Surface… 0.464 70.0 1.89e-228 405 0.451 0.477 ## 8 FP Surface… 0.217 45.7 4.57e-162 405 0.208 0.226 ## 9 FP Volume … 0.216 43.6 5.51e-155 405 0.207 0.226 ## 10 SM Surface… 0.541 71.3 2.55e-231 405 0.526 0.556 ## 11 SM Surface… 0.340 50.1 9.28e-176 405 0.327 0.353 ## 12 SM Volume … 0.375 53.3 3.34e-185 405 0.361 0.388 ## 13 VA Surface… 0.517 75.1 8.91e-240 405 0.504 0.531 ## 14 VA Surface… 0.283 53.4 1.95e-185 405 0.273 0.294 ## 15 VA Volume … 0.239 49.9 3.48e-175 405 0.230 0.249 ## 16 VI Surface… 0.818 71.0 1.40e-230 405 0.795 0.840 ## 17 VI Surface… 0.498 51.1 9.01e-179 405 0.479 0.517 ## 18 VI Volume … 0.571 58.0 2.10e-198 405 0.552 0.590 ## # … with 4 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;, cohenD &lt;dbl&gt;, ## # cohenD_str &lt;chr&gt; # bonfferoni correct for the number of networks bonf_cor_factor = 6 subject_focus_wrgl &lt;- all_subject_wtn_cross_means %&gt;% ungroup() %&gt;% group_by(subject, dataset, to_network, vertex_type) %&gt;% spread(wtn_or_cross, net_mean) %&gt;% ungroup() %&gt;% mutate(focus_effect = within - cross) %&gt;% group_by(subject, dataset, to_network) %&gt;% gather(conntype, netmean, within, cross, focus_effect) %&gt;% spread(vertex_type, netmean) %&gt;% ungroup() pvertex_vs_tvertex &lt;- subject_focus_wrgl %&gt;% group_by(to_network, conntype) %&gt;% do(tidy(t.test(.$pvertex, .$tvertex, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), p_bonf = p.value*bonf_cor_factor) tvertex_vs_tvolume &lt;- subject_focus_wrgl %&gt;% group_by(to_network, conntype) %&gt;% do(tidy(t.test(.$tvertex, .$tvolume, paired = TRUE))) %&gt;% mutate(cohenD = statistic/sqrt(parameter + 1), p_bonf = p.value*bonf_cor_factor) focus_results &lt;- bind_rows(pvertex_vs_tvertex = pvertex_vs_tvertex, tvertex_vs_tvolume = tvertex_vs_tvolume, .id = &quot;test_vars&quot;) focus_results %&gt;% mutate(pval_str = ifelse(p_bonf &lt; 0.001, format(p_bonf, scientific = TRUE, digits = 2), specify_decimal(p_bonf,3)), pval_str = ifelse(p_bonf &gt; 0.10, &quot;ns&quot;, pval_str)) %&gt;% mutate(report_str = str_c(&quot;d = &quot;, specify_decimal(cohenD, 2), &quot;, t(&quot;,parameter, &#39;) =&#39;, specify_decimal(statistic, 2), &#39;, p=&#39;, pval_str)) %&gt;% select(test_vars, conntype, to_network, report_str) %&gt;% spread(conntype, report_str) %&gt;% select(test_vars, to_network, within, cross, focus_effect) %&gt;% ungroup() %&gt;% mutate(test_vars = factor(test_vars, levels = c(&quot;tvertex_vs_tvolume&quot;,&quot;pvertex_vs_tvertex&quot;)), to_network = factor(to_network, levels = c(&quot;DM&quot;, &quot;FP&quot;, &quot;VA&quot;, &quot;DA&quot;, &quot;SM&quot;, &quot;VI&quot;))) %&gt;% arrange(test_vars, to_network) %&gt;% knitr::kable() test_vars to_network within cross focus_effect tvertex_vs_tvolume DM d = -0.46, t(405) =-9.24, p= 8.6e-18 d = -0.29, t(405) =-5.80, p=8.0e-08 d = -0.20, t(405) =-3.96, p= 5.3e-04 tvertex_vs_tvolume FP d = -0.29, t(405) =-5.84, p= 6.5e-08 d = -0.32, t(405) =-6.35, p=3.5e-09 d = 0.01, t(405) =0.13, p=ns tvertex_vs_tvolume VA d = 0.09, t(405) =1.88, p=ns d = -0.34, t(405) =-6.92, p=1.1e-10 d = 0.57, t(405) =11.50, p= 6.9e-26 tvertex_vs_tvolume DA d = 0.32, t(405) =6.42, p= 2.3e-09 d = -0.36, t(405) =-7.26, p=1.2e-11 d = 0.86, t(405) =17.35, p= 5.0e-50 tvertex_vs_tvolume SM d = -0.52, t(405) =-10.42, p= 6.6e-22 d = -0.31, t(405) =-6.35, p=3.5e-09 d = -0.40, t(405) =-8.10, p= 3.8e-14 tvertex_vs_tvolume VI d = -0.75, t(405) =-15.04, p= 3.6e-40 d = -0.28, t(405) =-5.54, p=3.2e-07 d = -0.57, t(405) =-11.54, p= 4.8e-26 pvertex_vs_tvertex DM d = 3.26, t(405) =65.75, p=1.9e-217 d = -0.97, t(405) =-19.46, p=3.1e-59 d = 3.10, t(405) =62.51, p=2.3e-209 pvertex_vs_tvertex FP d = 3.13, t(405) =63.14, p=6.1e-211 d = -0.54, t(405) =-10.90, p=1.1e-23 d = 2.84, t(405) =57.15, p=3.4e-195 pvertex_vs_tvertex VA d = 3.04, t(405) =61.22, p=4.9e-206 d = -0.22, t(405) =-4.45, p=6.6e-05 d = 2.89, t(405) =58.24, p=3.8e-198 pvertex_vs_tvertex DA d = 2.86, t(405) =57.63, p=1.7e-196 d = -0.13, t(405) =-2.65, p=0.049 d = 2.72, t(405) =54.80, p=1.2e-188 pvertex_vs_tvertex SM d = 2.56, t(405) =51.60, p=2.2e-179 d = 0.11, t(405) =2.20, p=ns d = 2.41, t(405) =48.61, p=2.4e-170 pvertex_vs_tvertex VI d = 2.73, t(405) =54.97, p=4.1e-189 d = -0.08, t(405) =-1.58, p=ns d = 2.70, t(405) =54.48, p=9.9e-188 report_ds_by_corrtype &lt;- report_ds %&gt;% ungroup() %&gt;% group_by(corrtype) %&gt;% summarise(d_min = specify_decimal(min(cohenD),2), d_max = specify_decimal(max(cohenD),2), d_str = str_glue(&#39;{d_min}-{d_max}&#39;)) ## `summarise()` ungrouping output (override with `.groups` argument) library(glue) ## ## Attaching package: &#39;glue&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## collapse focus_results_ranges &lt;- focus_results %&gt;% ungroup() %&gt;% group_by(test_vars, conntype) %&gt;% summarise(d_min = specify_decimal(min(cohenD),2), d_max = specify_decimal(max(cohenD),2), d_str = str_glue(&#39;{d_min}-{d_max}&#39;)) ## `summarise()` regrouping output by &#39;test_vars&#39; (override with `.groups` argument) The sample mean cortical-cortical correlation matrixes were calculated after fMRI timeseries were extracted using a volume-based, surface-based and personalized surface-based approach are plotted in Figure 1. Within network correlations are higher than between network correlations, evidence of a resting-state network structure, were observed for all networks tested, for the volume-based approach (Cohen's D 2.07-2.88), as well as for the surface-based approach (Cohen's D 2.27-2.76) and the personalized surface approach (Cohen's D 3.48-3.85)(see Figure 1H). Using a surface-based approach, as opposed to a volume-based approach has a mixed effect on this witin-to-between network differences according to instrinsic network (see Supple Table 2): increases these within to between network correlation difference increases in the Dorsal and Ventral Attentional Network, but decreases for the Default Mode, Sensory Motor and Visual Networks. Using PINT increases within network correlations again further for all networks (Surface Template vs PINT cohen D 2.41-3.10, see Suppl Table 2). Note that this change from Surface Template and Surface Personalized is not surprising given that the PINT algorithm was designed to increase within network correlations. "],
["whole-connectome-results.html", "Chapter 8 Whole Connectome Results 8.1 The paths to data", " Chapter 8 Whole Connectome Results We are now going to see if there is anything in cortical-cortical connectivity by running the matrix of all possible connections instead of just subcortical-cortical stats. library(tidygraph) library(tidyverse) library(broom) library(knitr) library(cowplot) library(igraph) library(ggraph) library(here) 8.1 The paths to data # These functions are for reading timeseries files source(here(&#39;code/R/settings_helpers.R&#39;)) # pheno &lt;- read_pheno_file()%&gt;% drop_na(DX) %&gt;% filter(in_matched_sample) ## Parsed with column specification: ## cols( ## .default = col_double(), ## dataset = col_character(), ## subject_id = col_character(), ## session_id = col_character(), ## task_id = col_character(), ## run_id = col_character(), ## acq_id = col_character(), ## subject = col_character(), ## session = col_character(), ## DX = col_character(), ## Site = col_character(), ## filename = col_character(), ## cmh_session_id = col_character(), ## Sex = col_character(), ## Scanner = col_character(), ## isFEP = col_character(), ## zhh_chosen_sess = col_logical(), ## ghost_NoGhost = col_character(), ## in_matched_sample = col_logical() ## ) ## See spec(...) for full column specifications. YeoNet_colours &lt;- define_Yeo7_colours() Yeo7_2011_80verts &lt;- read_Yeo72011_template() lm_predictor_col = c(&quot;DX&quot;) lm_covar_cols &lt;- c(&quot;Age_match_pt&quot;, &quot;Sex&quot;, &quot;fd_mean_match_pt&quot;, &quot;Site&quot;) "],
["code-for-reading-in-all-the-timeseries-.html", "Chapter 9 Code for reading in all the timeseries.. 9.1 This was run once in order to detemine the too small subcortical ROIs 9.2 calcualate cohen's D for Diagnosis Effect 9.3 filters out some unwanted edges before FDR correction 9.4 Make co 9.5 make table FDR corrected Edges that survive correction 9.6 write up to this point..", " Chapter 9 Code for reading in all the timeseries.. A table that describes the current expected subortical files These functions are for reading timeseries files This reads all files and generate PINT to subcortical correlation values for a given subject the_subcortical_guide &lt;- get_subcortical_guide() ## Warning: `cols` is now required when using unnest(). ## Please use `cols = c(subcort_NET)` ## Parsed with column specification: ## cols( ## subcort_hemi = col_character(), ## subcort_ROI = col_character(), ## numvx = col_double(), ## network = col_character() ## ) #run_read_subject_subcort_corrs(subcort_outputlist$subid[1]) 9.1 This was run once in order to detemine the too small subcortical ROIs read_vx_count &lt;- function(filepath) { read_csv(filepath, col_names = FALSE) %&gt;% mutate(network = c(&#39;VI&#39;,&#39;SM&#39;,&#39;DA&#39;,&#39;VA&#39;, &#39;LI&#39;,&#39;FP&#39;,&#39;DM&#39;)) } vx_counts &lt;- the_subcortical_guide %&gt;% select(subcort_hemi, subcort_ROI) %&gt;% distinct() %&gt;% mutate(vx_count = str_c(output_base,&#39;/ZHH/out/ciftify_meants/templates/7RSN_roi-&#39;,subcort_hemi, subcort_ROI,&#39;_vxcount.txt&#39;)) %&gt;% mutate(vxnum = map(vx_count, ~read_vx_count(.x))) %&gt;% unnest() %&gt;% select(subcort_hemi, subcort_ROI, X1, network) %&gt;% rename(numvx = X1) write_csv(vx_counts, &#39;../templates/subcort_vxcounts.csv&#39;) node_annotations &lt;- get_node_annotations(Yeo7_2011_80verts, the_subcortical_guide) 9.1.1 This reads all the subcortical files it can find Write a func_base and outputprefix cols into the pheno file for the file reading step source(here(&#39;code/R/file_reading_helpers.R&#39;)) pheno &lt;- pheno %&gt;% mutate(func_base = get_func_base_from_pint_summary_filename(filename,subject, session), outputprefix = construct_output_prefix(subject, session, func_base)) map2(pheno$outputprefix[1], pheno$dataset[1], ~run_read_all_subject_timeseries_and_wholebrain_corZ(.x, .y)) source(here(&#39;code/R/file_reading_helpers.R&#39;)) pheno &lt;- pheno %&gt;% mutate(func_base = get_func_base_from_pint_summary_filename(filename,subject, session), outputprefix = construct_output_prefix(subject, session, func_base)) all_corZ_results &lt;- pheno %&gt;% select(subject, outputprefix, dataset) %&gt;% mutate(the_corrs = map2(.$outputprefix, .$dataset, ~run_read_all_subject_timeseries_and_wholebrain_corZ(.x, .y))) #save(all_corZ_results, file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_results_cache.Rdata&quot;)) saveRDS(all_corZ_results, file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_cache.rds&quot;)) load(file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_results_cache.Rdata&quot;)) all_corZ_results &lt;- readRDS(file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_cache.rds&quot;)) 9.1.2 merge with the phenotypic data results_pheno &lt;- all_corZ_results %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% unnest(cols = c(the_corrs)) results_pheno 9.2 calcualate cohen's D for Diagnosis Effect library(modelr) ## ## Attaching package: &#39;modelr&#39; ## The following object is masked from &#39;package:igraph&#39;: ## ## permute ## The following object is masked from &#39;package:broom&#39;: ## ## bootstrap library(effsize) calc_DX_cohenD &lt;- function(df, outcome, predictor, covars) { m1 &lt;- lm(formula(paste(outcome, &#39;~&#39;, paste(covars, collapse = &quot; + &quot;))), data = df) result &lt;-df %&gt;% add_residuals(m1) %&gt;% cohen.d(formula(paste(&quot;resid ~&quot;, predictor)), data = .) %&gt;% .$estimate return(result) } rm(all_corZ_results) results_pheno_plus_DXd &lt;- function(results_pheno) { results_pheno %&gt;% semi_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% semi_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% mutate(corZ = weight) %&gt;% group_by(vertex_type, to, from) %&gt;% nest() %&gt;% #slice(1:3) %&gt;% mutate(DX_cohenD = map(data, ~calc_DX_cohenD(.x, outcome = &quot;corZ&quot;, predictor = &quot;DX&quot;, covars = lm_covar_cols))) %&gt;% unnest(DX_cohenD) %&gt;% ungroup() %&gt;% select(vertex_type, to, from, DX_cohenD) } ## had to split this by vertex because of RAM issues on laptop pvertex_DXd &lt;- results_pheno %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% results_pheno_plus_DXd() tvertex_DXd &lt;- results_pheno %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% results_pheno_plus_DXd() tvolume_DXd &lt;- results_pheno %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% results_pheno_plus_DXd() DX_cohensD_results &lt;- bind_rows( pvertex_DXd, tvertex_DXd, tvolume_DXd ) DX_lm_formula &lt;- formula(paste(&quot;corZ ~ &quot;, lm_predictor_col, &quot;+&quot;, paste(lm_covar_cols, collapse = &quot; + &quot;))) print(str_glue(&quot;fitting: lm formula {DX_lm_formula}&quot;)) ## fitting: lm formula ~ ## fitting: lm formula corZ ## fitting: lm formula DX + Age_match_pt + Sex + fd_mean_match_pt + Site DX_lm_model_fit &lt;- function(results_pheno) { results_pheno %&gt;% semi_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% semi_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% mutate(corZ = weight) %&gt;% group_by(vertex_type, to, from) %&gt;% do(tidy(lm(DX_lm_formula,.))) } ## had to split this by vertex because of RAM issues on laptop pvertex_DX_lm &lt;- results_pheno %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% DX_lm_model_fit() tvertex_DX_lm &lt;- results_pheno %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% DX_lm_model_fit() tvolume_DX_lm &lt;- results_pheno %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% DX_lm_model_fit() DX_lm_model_full &lt;- bind_rows( pvertex_DX_lm, tvertex_DX_lm, tvolume_DX_lm ) DX_lm_formula ## corZ ~ DX + Age_match_pt + Sex + fd_mean_match_pt + Site annotated_graph_edges &lt;- DX_lm_model_full %&gt;% ungroup() %&gt;% select(to, from) %&gt;% distinct() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;), suffix = c(&#39;_to&#39;,&#39;_from&#39;)) %&gt;% unite(from_to_type, etype_from, etype_to) %&gt;% unite(hemis, hemi_from, hemi_to, sep = &quot;&quot;) %&gt;% unite(networks, network_from, network_to, sep = &quot;&quot;, remove = FALSE) %&gt;% mutate(from_to_type = recode(from_to_type, &quot;Cort_SubCort&quot; = &quot;SubCort_Cort&quot;)) %&gt;% mutate(hemis = recode(hemis, &quot;RL&quot; = &quot;LR&quot;)) 9.3 filters out some unwanted edges before FDR correction DX_lm_model &lt;- DX_lm_model_full %&gt;% ungroup() %&gt;% inner_join(annotated_graph_edges, by = c(&quot;to&quot;, &quot;from&quot;)) %&gt;% mutate(withinsubcort = if_else((from_to_type == &quot;SubCort_SubCort&quot;) &amp; (subcort_ROI_from == subcort_ROI_to), &quot;drop&quot;, &quot;keep&quot;)) %&gt;% filter(withinsubcort == &quot;keep&quot;) %&gt;% select(vertex_type, to, from, term, statistic, p.value) %&gt;% ungroup() %&gt;% group_by(term) %&gt;% mutate(p_FDR = p.adjust(p.value, method = &quot;fdr&quot;)) %&gt;% arrange(p.value) DX_lm_model_DXcohenD &lt;- DX_lm_model %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% inner_join(DX_cohensD_results, by = c(&quot;vertex_type&quot;, &quot;to&quot;, &quot;from&quot;)) %&gt;% mutate(cohenD_DX_tstatdir = -1 * DX_cohenD) DX_lm_model_DXcohenD %&gt;% ggplot(aes(cohenD_DX_tstatdir, statistic, color = (p_FDR &lt; 0.05))) + geom_point() DX_lm_model_DXcohenD %&gt;% filter(p_FDR &lt; 0.05) %&gt;% arrange(desc(p.value)) %&gt;% slice(1:5) ## # A tibble: 5 x 9 ## # Groups: term [1] ## vertex_type to from term statistic p.value p_FDR DX_cohenD ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 tvertex DMT1L DAP3R DXSSD -2.76 0.00603 0.0500 0.268 ## 2 tvolume VAT1L VAF1L DXSSD 2.76 0.00603 0.0500 -0.268 ## 3 pvertex R_ce… VAF3L DXSSD 2.76 0.00602 0.0499 -0.268 ## 4 tvolume L_ce… FPP2R DXSSD -2.76 0.00601 0.0499 0.268 ## 5 tvolume L_th… VI01L DXSSD 2.76 0.00600 0.0499 -0.268 ## # … with 1 more variable: cohenD_DX_tstatdir &lt;dbl&gt; saveRDS(DX_lm_model_DXcohenD, file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_DXlmfits.rds&quot;)) can get the model fit back from here.. DX_lm_model_DXcohenD &lt;- readRDS(file = file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;Rdata_cache&quot;, &quot;06_wholebrain_FC_DXlmfits.rds&quot;)) 9.4 Make co source(here(&#39;code/R/swirly_plot_helpers.R&#39;)) DX_lm_model_DXcohenD %&gt;% ungroup() %&gt;% ## filtering steps filter(term == &quot;DXSSD&quot;) %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% ## make a pretty plot make_swirly_results_plot(pos_label = &quot;SSD &gt; HC&quot;, neg_label = &quot;HC &gt; SSD&quot;, plot_title = &quot;Personalized&quot;, node_annotations = node_annotations) DX_lm_model_DXcohenD %&gt;% ungroup() %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% make_swirly_results_plot(pos_label = &quot;SSD &gt; HC&quot;, neg_label = &quot;HC &gt; SSD&quot;, plot_title = &quot;Template&quot;, node_annotations = node_annotations) DX_lm_model_DXcohenD %&gt;% ungroup() %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% make_swirly_results_plot(pos_label = &quot;SSD &gt; HC&quot;, neg_label = &quot;HC &gt; SSD&quot;, plot_title = &quot;Volume&quot;, node_annotations = node_annotations) 9.5 make table FDR corrected Edges that survive correction DX_lm_model_DXcohenD %&gt;% inner_join(annotated_graph_edges, by = c(&quot;to&quot;, &quot;from&quot;)) %&gt;% mutate(sig_edge = if_else(p_FDR &lt; 0.05, &quot;sig&quot;, &quot;ns&quot;), stat_pos = if_else(statistic &gt; 0, &quot;pos&quot;, &quot;neg&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% count(vertex_type, from_to_type, sig_edge) %&gt;% spread(sig_edge, n) %&gt;% mutate(perc_sig = sig/(ns + sig)*100) ## # A tibble: 9 x 6 ## # Groups: term [1] ## term vertex_type from_to_type ns sig perc_sig ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 DXSSD pvertex Cort_Cort 2956 204 6.46 ## 2 DXSSD pvertex SubCort_Cort 2760 440 13.8 ## 3 DXSSD pvertex SubCort_SubCort 249 284 53.3 ## 4 DXSSD tvertex Cort_Cort 2952 208 6.58 ## 5 DXSSD tvertex SubCort_Cort 2829 371 11.6 ## 6 DXSSD tvertex SubCort_SubCort 249 284 53.3 ## 7 DXSSD tvolume Cort_Cort 3018 142 4.49 ## 8 DXSSD tvolume SubCort_Cort 2923 277 8.66 ## 9 DXSSD tvolume SubCort_SubCort 249 284 53.3 DX_sig_edge_table &lt;- DX_lm_model_DXcohenD %&gt;% inner_join(annotated_graph_edges, by = c(&quot;to&quot;, &quot;from&quot;)) %&gt;% mutate(sig_edge = if_else(p_FDR &lt; 0.05, &quot;sig&quot;, &quot;ns&quot;), stat_pos = if_else(statistic &gt; 0, &quot;pos&quot;, &quot;neg&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;, from_to_type != &quot;SubCort_SubCort&quot;) %&gt;% count(vertex_type, sig_edge) %&gt;% spread(sig_edge, n) %&gt;% mutate(perc_sig = sig/(ns + sig)*100) DX_sig_edge_table ## # A tibble: 3 x 5 ## # Groups: term [1] ## term vertex_type ns sig perc_sig ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 DXSSD pvertex 5716 644 10.1 ## 2 DXSSD tvertex 5781 579 9.10 ## 3 DXSSD tvolume 5941 419 6.59 YeoNet7 &lt;- define_YeoNet7_colours() node_annotations1 &lt;- node_annotations %&gt;% mutate(node_grouping = if_else(etype == &quot;Cort&quot;, str_c(&quot;Cort&quot;, cort_NET), as.character(subcort_ROI))) node_groupings &lt;- factor(1:9, levels = c(1:9), labels = c(levels(node_annotations$subcort_ROI), str_c(&quot;Cort&quot;,YeoNet7$network[1:6]))) edge_grouping_guide &lt;- matrix(1, nrow = length(node_groupings), ncol = length(node_groupings), dimnames = list(node_groupings, node_groupings)) %&gt;% graph_from_adjacency_matrix(mode=&quot;upper&quot;, weighted=T, diag=T) %&gt;% as_data_frame() %&gt;% filter(!(from %in% c(&quot;striatum&quot;, &quot;thalamus&quot;, &quot;cerebellum&quot;) &amp; to == from)) %&gt;% select(to, from) DX_lm_model_DXcohenD %&gt;% ungroup() %&gt;% inner_join(node_annotations1, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations1, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% mutate(sig_edge = if_else(p_FDR &lt; 0.05, &quot;sig&quot;, &quot;ns&quot;), stat_pos = if_else(statistic &gt; 0, &quot;pos&quot;, &quot;neg&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% count(vertex_type, node_grouping.x, node_grouping.y, stat_pos, sig_edge) %&gt;% group_by(vertex_type, node_grouping.x, node_grouping.y, stat_pos) %&gt;% spread(sig_edge, n, fill = 0) %&gt;% mutate(sig_signed = if_else(stat_pos == &quot;pos&quot;, sig, sig*-1), node_grouping_x = factor(node_grouping.x, levels = node_groupings), node_grouping_y = factor(node_grouping.y, levels = node_groupings)) %&gt;% mutate(node_grouping_fx = if_else(node_grouping_x == &quot;CortDA&quot; &amp; node_grouping_y %in% c(&quot;CortVA&quot;, &quot;CortFP&quot;, &quot;CortDM&quot;), node_grouping_y, node_grouping_x), node_grouping_fy = if_else(node_grouping_x == &quot;CortDA&quot; &amp; node_grouping_y %in% c(&quot;CortVA&quot;, &quot;CortFP&quot;, &quot;CortDM&quot;), node_grouping_x, node_grouping_y)) %&gt;% ggplot(aes(x = node_grouping_fx, y = node_grouping_fy, fill = sig_signed)) + geom_tile() + geom_text(aes(label = sig)) + scale_fill_distiller(breaks = c(-0.5,0.5), type = &quot;div&quot;, palette = 5) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(vertex_type ~ stat_pos) #&#39; convert from three col graph df to adjacency matrix uppertri_df_to_agjmat &lt;- function(graph_df) { names(graph_df) &lt;- c(&#39;to&#39;, &#39;from&#39;, &#39;myattr&#39;) matrix_out &lt;- graph_df %&gt;% graph_from_data_frame(.,directed = F) %&gt;% get.adjacency(., type = &quot;both&quot;, attr = &quot;myattr&quot;) %&gt;% as.matrix() return(matrix_out) } #&#39; go uppertri data to full dataframe for geom_tile uppertri_df_to_full &lt;- function(graph_df) { result &lt;- graph_df %&gt;% uppertri_df_to_agjmat() %&gt;% as.data.frame() %&gt;% mutate(to = row.names(.)) %&gt;% gather(from, value, -to) return(result) } DX_lm_model_DXcohenD %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% mutate(t_filtered = if_else(p_FDR &lt; 0.1, statistic, 0)) %&gt;% ungroup() %&gt;% select(vertex_type, to, from, t_filtered) %&gt;% group_by(vertex_type) %&gt;% nest() %&gt;% mutate(uptri = map(data, uppertri_df_to_full)) %&gt;% unnest(uptri) %&gt;% mutate(to_lab = factor(to, levels = (node_annotations %&gt;% arrange(subcort_ROI, network))$node_name), from_lab = factor(from, levels = (node_annotations %&gt;% arrange(subcort_ROI, network))$node_name)) %&gt;% ggplot(aes(x=to_lab, y=from_lab, fill=value)) + geom_tile(color = &quot;white&quot;) + scale_fill_gradient2(high = &quot;#b2182b&quot;, mid = &quot;white&quot;, low = &quot;#2166ac&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_wrap(~vertex_type, ncol = 1) + labs(title = &quot;T statistic for effect of DX (thesholded)&quot;, x = NULL, y = NULL, fill = &quot;T statistic for DX&quot;) ` full_DX_mat &lt;- DX_lm_model_DXcohenD %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% ungroup() %&gt;% select(to, from, statistic) %&gt;% uppertri_df_to_full() full_DX_mat %&gt;% mutate(to_lab = factor(to, levels = node_annotations$node_name), from_lab = factor(from, levels = node_annotations$node_name)) %&gt;% ggplot(aes(x=to_lab, y=from_lab, fill=value)) + geom_tile(color = &quot;white&quot;) + scale_fill_gradient2(high = &quot;#b2182b&quot;, mid = &quot;white&quot;, low = &quot;#2166ac&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = &quot;T statistic for effect of DX&quot;, x = NULL, y = NULL, fill = &quot;T statistic for DX&quot;) ### trying to plot edges in subgroups Plotting Subcortical to Cortical Edges library(ggridges) make_subcortcort_edges_raincloud &lt;- function(data,D_threshold) { get_subcort_net_edges &lt;- function(data, this_YeoNet, D_threshold) { data %&gt;% ungroup() %&gt;% select(to, from, cohenD_DX_tstatdir) %&gt;% uppertri_df_to_full() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) } DXweigths_pvertex &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% ungroup() %&gt;% get_subcort_net_edges(.,this_YeoNet) DXweigths_tvertex &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvertex&quot;) %&gt;% ungroup() %&gt;% get_subcort_net_edges(.,this_YeoNet) DXweigths_tvolume &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvolume&quot;) %&gt;% ungroup() %&gt;% get_subcort_net_edges(.,this_YeoNet) Fz_DXweigths &lt;- bind_rows(pvertex = DXweigths_pvertex, tvertex = DXweigths_tvertex, tvolume = DXweigths_tvolume, .id = &quot;vertex_type&quot;) %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;)), hyper_hypo = case_when(value &lt; -D_threshold ~ &quot;hypo&quot;, value &gt; D_threshold ~ &quot;hyper&quot;, TRUE ~ &quot;notsig&quot;)) plt_counts &lt;- Fz_DXweigths %&gt;% count(corrtype, network.y, hyper_hypo) %&gt;% spread(hyper_hypo, n, fill = 0) make_one_net_ridgelines &lt;- function(plt_data, plt_counts, this_YeoNet, D_threshold, no_ticks = TRUE) { plt &lt;- plt_data %&gt;% filter(as.character(network.y) %in% c(this_YeoNet)) %&gt;% ggplot(aes(y = corrtype, x = value)) + geom_density_ridges( #jittered_points = TRUE, position = &quot;raincloud&quot;, alpha = 0.5, scale = 2, quantile_lines = TRUE, quantiles = 2, color = YeoNet7 %&gt;% filter(network==this_YeoNet) %&gt;% pull(hexcode) ) + geom_text(aes(y = corrtype, label = hyper), x = 0.5, nudge_y = 0.2, data = plt_counts %&gt;% filter(as.character(network.y) %in% c(this_YeoNet))) + geom_text(aes(y = corrtype, label = hypo), x = -0.5, nudge_y = 0.2, data = plt_counts %&gt;% filter(as.character(network.y) %in% c(this_YeoNet))) + geom_vline(xintercept = 0) + geom_vline(xintercept = D_threshold, linetype = &quot;dashed&quot;) + geom_vline(xintercept = -D_threshold, linetype = &quot;dashed&quot;) + scale_colour_manual(values = c(YeoNet7 %&gt;% filter(network==this_YeoNet) %&gt;% pull(hexcode))) + scale_x_continuous(limits = c(-0.5, 0.6)) + labs(y = NULL, x = NULL) + theme(legend.position=&#39;none&#39;) if (no_ticks==TRUE) { plt &lt;- plt + theme(axis.title.x=element_blank(), axis.text.x=element_blank()) } else { plt &lt;- plt + labs(x = &quot;Subcortical to Cortical Edges&quot;) } return(plt) } DM &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;DM&quot;, D_threshold) FP &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;FP&quot;, D_threshold) VA &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;VA&quot;, D_threshold) DA &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;DA&quot;, D_threshold) SM &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;SM&quot;, D_threshold) VI &lt;- make_one_net_ridgelines(Fz_DXweigths, plt_counts, &quot;VI&quot;, D_threshold, no_ticks = FALSE) title &lt;- ggdraw() + draw_label(&quot;Subcortical to Cortical&quot;, fontface=&#39;bold&#39;) full_plt &lt;- plot_grid(title, DM, FP, VA, DA, SM, VI, ncol = 1, rel_heights = c(0.5, 1, 1, 1, 1, 1, 1.5)) return(full_plt) } make_subcortcort_edges_raincloud(DX_lm_model_DXcohenD,D_threshold = 0.2678) ## Picking joint bandwidth of 0.0335 ## Picking joint bandwidth of 0.0277 ## Picking joint bandwidth of 0.0346 ## Picking joint bandwidth of 0.0324 ## Picking joint bandwidth of 0.0376 ## Picking joint bandwidth of 0.0308 ## Warning: Removed 4 rows containing non-finite values (stat_density_ridges). library(ggridges) make_cortcort_edges_raincloud &lt;- function(data,D_threshold) { get_cortcort_net_edges &lt;- function(data) { data %&gt;% ungroup() %&gt;% select(to, from, cohenD_DX_tstatdir) %&gt;% uppertri_df_to_full() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) } DXweigths_pvertex &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% ungroup() %&gt;% get_cortcort_net_edges() DXweigths_tvertex &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvertex&quot;) %&gt;% ungroup() %&gt;% get_cortcort_net_edges() DXweigths_tvolume &lt;- data %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvolume&quot;) %&gt;% ungroup() %&gt;% get_cortcort_net_edges() Fz_DXweigths &lt;- bind_rows(pvertex = DXweigths_pvertex, tvertex = DXweigths_tvertex, tvolume = DXweigths_tvolume, .id = &quot;vertex_type&quot;) %&gt;% mutate(corrtype = factor(vertex_type, levels = c(&#39;pvertex&#39;, &#39;tvertex&#39;, &#39;tvolume&#39;), labels = c(&quot;Surface Personalized&quot;, &quot;Surface Template&quot;, &quot;Volume Template&quot;)), hyper_hypo = case_when(value &lt; -D_threshold ~ &quot;hypo&quot;, value &gt; D_threshold ~ &quot;hyper&quot;, TRUE ~ &quot;notsig&quot;)) all_plt_counts &lt;- Fz_DXweigths %&gt;% count(corrtype, network.y, network.x, hyper_hypo) %&gt;% spread(hyper_hypo, n, fill = 0) make_two_net_ridgelines &lt;- function(plt_data, all_plt_counts, network_x, network_y, D_threshold, no_ticks = TRUE) { plt_counts &lt;- all_plt_counts %&gt;% filter(as.character(network.x)== network_x, as.character(network.y)== network_y,) plt &lt;- plt_data %&gt;% filter(as.character(network.x)== network_x, as.character(network.y)== network_y,) %&gt;% ggplot(aes(y = corrtype, x = value)) + geom_density_ridges( #jittered_points = TRUE, position = &quot;raincloud&quot;, alpha = 0.5, scale = 2, quantile_lines = TRUE, quantiles = 2, color = YeoNet7 %&gt;% filter(network==network_x) %&gt;% pull(hexcode), fill = YeoNet7 %&gt;% filter(network==network_y) %&gt;% pull(hexcode) ) + geom_text(aes(y = corrtype, label = hyper), x = 0.5, nudge_y = 0.2, data = plt_counts) + geom_text(aes(y = corrtype, label = hypo), x = -0.5, nudge_y = 0.2, data = plt_counts) + geom_vline(xintercept = 0) + geom_vline(xintercept = D_threshold, linetype = &quot;dashed&quot;) + geom_vline(xintercept = -D_threshold, linetype = &quot;dashed&quot;) + scale_x_continuous(limits = c(-0.5, 0.6)) + labs(y = NULL, x = NULL) + theme(legend.position=&#39;none&#39;) if (no_ticks==TRUE) { plt &lt;- plt + theme(axis.title.x=element_blank(), axis.text.x=element_blank()) } else { plt &lt;- plt + labs(x = &quot;Cortical to Cortical Edges&quot;) } return(plt) } DM_DA &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;DM&quot;, &quot;DA&quot;, D_threshold) DM_VA &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;DM&quot;, &quot;VA&quot;, D_threshold) DM_SM &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;DM&quot;, &quot;SM&quot;, D_threshold) FP_SM &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;FP&quot;, &quot;SM&quot;, D_threshold) VA_DA &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;DA&quot;, &quot;VA&quot;, D_threshold) DA_SM &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;DA&quot;, &quot;SM&quot;, D_threshold) VI_VI &lt;- make_two_net_ridgelines(Fz_DXweigths, all_plt_counts, &quot;VI&quot;, &quot;VI&quot;, D_threshold, no_ticks = FALSE) title &lt;- ggdraw() + draw_label(&quot;Subcortical to Cortical&quot;, fontface=&#39;bold&#39;) full_plt &lt;- plot_grid(title, DM_DA, DM_VA, FP_SM, VA_DA, DA_SM, VI_VI, ncol = 1, rel_heights = c(0.5, 1, 1, 1, 1, 1,1.5)) return(full_plt) } make_cortcort_edges_raincloud(DX_lm_model_DXcohenD,D_threshold = 0.2678) ## Picking joint bandwidth of 0.0307 ## Picking joint bandwidth of 0.0297 ## Picking joint bandwidth of 0.0366 ## Picking joint bandwidth of 0.031 ## Picking joint bandwidth of 0.0329 ## Picking joint bandwidth of 0.0497 ## Warning: Removed 2 rows containing non-finite values (stat_density_ridges). D_threshold = 0.2678 hypo_cerebullum_to &lt;- DX_lm_model_DXcohenD %&gt;% ungroup() %&gt;% select(to, from, cohenD_DX_tstatdir) %&gt;% uppertri_df_to_full() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) %&gt;% filter(subcort_ROI.x == &quot;cerebellum&quot;) %&gt;% filter(subcort_ROI.y %in% c(&quot;striatum&quot;, &quot;thalamus&quot;)) %&gt;% mutate(hyper_hypo = case_when(value &lt; -D_threshold ~ &quot;hypo&quot;, value &gt; D_threshold ~ &quot;hyper&quot;, TRUE ~ &quot;notsig&quot;), corrtype = str_c(subcort_ROI.y, &quot; to cerebellum&quot;)) plt_counts &lt;- hypo_cerebullum_to %&gt;% count(corrtype, hyper_hypo) %&gt;% spread(hyper_hypo, n, fill = 0) %&gt;% mutate(hyper = 0) # note this only works because there is no hyper hypo_cerebullum_to %&gt;% ggplot(aes(y = corrtype, x = value)) + geom_density_ridges( #jittered_points = TRUE, position = &quot;raincloud&quot;, alpha = 0.5, scale = 1.5, quantile_lines = TRUE, quantiles = 2 ) + geom_text(aes(y = corrtype, label = hyper), x = 0.5, nudge_y = 0.2, data = plt_counts) + geom_text(aes(y = corrtype, label = hypo), x = -2.5, nudge_y = 0.2, data = plt_counts) + geom_vline(xintercept = 0) + geom_vline(xintercept = D_threshold, linetype = &quot;dashed&quot;) + geom_vline(xintercept = -D_threshold, linetype = &quot;dashed&quot;) + labs(y = NULL, x = NULL) + theme(legend.position=&#39;none&#39;) ## Picking joint bandwidth of 0.121 calc_fc_weights &lt;- function(lm_df, t_threshold) { full_DX_mat &lt;- lm_df %&gt;% ungroup() %&gt;% select(to, from, cohenD_DX_tstatdir) %&gt;% uppertri_df_to_full() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) hypo_cerebullum_to_striatum &lt;- full_DX_mat %&gt;% filter(subcort_ROI.x == &quot;cerebellum&quot;) %&gt;% filter(subcort_ROI.y == &quot;striatum&quot;) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hypo_cerebullum_to_thalamus &lt;- full_DX_mat %&gt;% filter(subcort_ROI.x == &quot;cerebellum&quot;) %&gt;% filter(subcort_ROI.y == &quot;thalamus&quot;) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hyper_subcort_to_SM &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;SM&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hyper_subcort_to_VI &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;VI&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hyper_subcort_to_DA &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;DA&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hyper_subcort_to_DM &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;DM&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hypo_subcort_to_FP &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;FP&quot;)) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hypo_subcort_to_VA &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;SubCort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.y) %in% c(&quot;VA&quot;)) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hyper_cortDA_to_SM &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;DA&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;SM&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hyper_cortVA_to_DA &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;VA&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;DA&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hyper_cortFP_to_SM &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;FP&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;SM&quot;)) %&gt;% filter(value &gt; t_threshold) %&gt;% select(to, from, value) hypo_cortDM_to_DA &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;DM&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;DA&quot;)) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hypo_cortDM_to_VA &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;DM&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;VA&quot;)) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) hypo_cortVI_to_VI &lt;- full_DX_mat %&gt;% filter(etype.x == &quot;Cort&quot;) %&gt;% filter(etype.y == &quot;Cort&quot;) %&gt;% filter(as.character(network.x) %in% c(&quot;VI&quot;)) %&gt;% filter(as.character(network.y) %in% c(&quot;VI&quot;)) %&gt;% filter(value &lt; -t_threshold) %&gt;% select(to, from, value) Fz_weigths &lt;-bind_rows(hyper_cortDA_to_SM = hyper_cortDA_to_SM, hyper_cortFP_to_SM = hyper_cortFP_to_SM, hyper_cortVA_to_DA = hyper_cortVA_to_DA, hypo_cortDM_to_DA = hypo_cortDM_to_DA, hypo_cortDM_to_VA = hypo_cortDM_to_VA, hypo_cortVI_to_VI = hypo_cortVI_to_VI, hyper_subcort_to_DM = hyper_subcort_to_DM, hypo_subcort_to_FP = hypo_subcort_to_FP, hypo_subcort_to_VA = hypo_subcort_to_VA, hyper_subcort_to_DA = hyper_subcort_to_DA, hyper_subcort_to_SM = hyper_subcort_to_SM, hyper_subcort_to_VI = hyper_subcort_to_VI, hypo_cerebullum_to_striatum = hypo_cerebullum_to_striatum, hypo_cerebullum_to_thalamus = hypo_cerebullum_to_thalamus, .id = &quot;direction_edge_group&quot;) %&gt;% separate(direction_edge_group, into = c(&quot;effect_direction&quot;, &quot;edge_group&quot;), extra = &quot;merge&quot;) %&gt;% rename(edge_FC_weight = value) return(Fz_weigths) } 9.5.1 calculated extract edge weights for per participant scores cohenD_threshold = 0.2678 cohenD_thresname = &quot;pFDR&quot; Fz_DXweigths_pvertex &lt;- DX_lm_model_DXcohenD %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% ungroup() %&gt;% calc_fc_weights(.,cohenD_threshold) Fz_DXweigths_tvertex &lt;- DX_lm_model_DXcohenD %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvertex&quot;) %&gt;% ungroup() %&gt;% calc_fc_weights(.,cohenD_threshold) Fz_DXweigths_tvolume &lt;- DX_lm_model_DXcohenD %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == &quot;tvolume&quot;) %&gt;% ungroup() %&gt;% calc_fc_weights(.,cohenD_threshold) Fz_DXweigths &lt;- bind_rows(pvertex = Fz_DXweigths_pvertex, tvertex = Fz_DXweigths_tvertex, tvolume = Fz_DXweigths_tvolume, .id = &quot;vertex_type&quot;) write_csv(Fz_DXweigths, file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;weighted_subject_FC_weigths&quot;, str_c(&quot;SSD4cohorts_DXtweigths_&quot;, cohenD_thresname, &quot;.csv&quot;))) Fz_DXweigths %&gt;% count(edge_group, vertex_type, effect_direction) %&gt;% spread(vertex_type, n) ## edge_group effect_direction pvertex tvertex tvolume ## 1 cerebullum_to_striatum hypo 86 86 86 ## 2 cerebullum_to_thalamus hypo 131 131 131 ## 3 cortDA_to_SM hyper 30 19 13 ## 4 cortDM_to_DA hypo 32 15 NA ## 5 cortDM_to_VA hypo 23 21 4 ## 6 cortFP_to_SM hyper 9 12 10 ## 7 cortVA_to_DA hyper 23 33 30 ## 8 cortVI_to_VI hypo 48 30 8 ## 9 subcort_to_DA hyper 25 34 24 ## 10 subcort_to_DM hyper 44 14 10 ## 11 subcort_to_FP hypo 29 33 21 ## 12 subcort_to_SM hyper 101 93 78 ## 13 subcort_to_VA hypo 26 24 28 ## 14 subcort_to_VI hyper 194 133 75 9.5.2 calculated scores per participant #&#39; calculates a subjects weigthed FC score from their edgewise values #&#39; #&#39; @param subject_edges_df tibble with columns subject, to, from, and weight #&#39; @param edge_weights tibble with columns effect_direction, edge_group, to, from, and edge_FC_weight #&#39; #&#39; @return tibble with columns subject, dataset, effect_direction, edge_group, FC_subtype and wFC_score #&#39; #&#39; @examples calc_subjects_wFC_score &lt;- function(subject_edges_df, edge_weights) { result &lt;- subject_edges_df %&gt;% ungroup() %&gt;% group_by(subject, dataset) %&gt;% nest() %&gt;% mutate(uptri = map(data, uppertri_df_to_full)) %&gt;% unnest(uptri) %&gt;% inner_join(edge_weights, by = c(&quot;to&quot;, &quot;from&quot;)) %&gt;% ungroup() %&gt;% group_by(subject, dataset, effect_direction, edge_group) %&gt;% summarise(wFC_score = weighted.mean(value, w = edge_FC_weight), mFC_score = mean(value)) %&gt;% ungroup() return(result) } pvertex_subject_FC_scores &lt;- results_pheno %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% select(subject, dataset, to, from, weight) %&gt;% calc_subjects_wFC_score(Fz_DXweigths_pvertex) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) tvertex_subject_FC_scores &lt;- results_pheno %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% select(subject, dataset, to, from, weight) %&gt;% calc_subjects_wFC_score(Fz_DXweigths_tvertex) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) tvolume_subject_FC_scores &lt;- results_pheno %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% select(subject, dataset, to, from, weight) %&gt;% calc_subjects_wFC_score(Fz_DXweigths_tvolume) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) FC_scores_together &lt;- bind_rows( pvertex = pvertex_subject_FC_scores, tvertex = tvertex_subject_FC_scores, tvolume = tvolume_subject_FC_scores, .id = &quot;vertex_type&quot; ) write_csv(FC_scores_together, file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;weighted_subject_FC_scores&quot;, &quot;SSD4cohorts_DXweighted_subject_scores.csv&quot;)) DX_sig_edge_table %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% pull(sig) ## [1] 644 9.6 write up to this point.. We observed robust patterns of dysconnectivity that were strengthened using a surface-based approach and PINT (Number of differing pairwise-correlations: volume: {419}, surface: {579}, PINT: {644}, FDR corrected). Moreover, patterns of dyscnnectivity became more interpretable in terms of individual resting state networks and cortical heirarchy (see Supplemental Figure 2 for breakdown by cortical network). Overall, regardless of cortical mapping approach, hypoconnectivity, that is decreased connectivity in participants with schizophrenia relative to controls as observed for edges connecting subcortical regions to the fronto-parietal network. Hyperconnectivity, or increased connectivity in participants with SSD relative to controls was observed for subcortical connections to those visual, somatomor, and dorsal attention networks, which increased when moving from volume-to-surface, and again from surface-to-PINT. Additional patterns of hypoconnectivity where observed between the cortical default-mode network and the dorsal and ventral attention netoworks, as well as within visual network edges. Cortical hyperconnectivity was observed between the dorsal and ventral attenetion networks, as well as the frontoparietal network to the somatomotor network. Moreover, hypoconnectivity was observed for nearly half of edges connecting the cerebellum to the striatum and the cerebellum to the thalamus. To investigate these patterns further, sub-scored for these groups of edges were calculated to for each participants by taking the weighted-mean of all edges with that survived FDR corretion (Cohen's D threshold = {0.2678}, means were weighted by the SSD diagnosis effect size). FC_scores_lmfit &lt;- FC_scores_together %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% group_by(edge_group, effect_direction, vertex_type) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_pt + Sex + fd_mean_pt + Scanner,.))) FC_scores_lmfit %&gt;% select(edge_group, effect_direction, term, statistic, p.value) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% knitr::kable() ## Adding missing grouping variables: `vertex_type` vertex_type edge_group effect_direction term statistic p.value pvertex cerebullum_to_striatum hypo DXSSD -6.186413 0.00e+00 tvertex cerebullum_to_striatum hypo DXSSD -6.186413 0.00e+00 tvolume cerebullum_to_striatum hypo DXSSD -6.186413 0.00e+00 pvertex cerebullum_to_thalamus hypo DXSSD -8.126418 0.00e+00 tvertex cerebullum_to_thalamus hypo DXSSD -8.126418 0.00e+00 tvolume cerebullum_to_thalamus hypo DXSSD -8.126418 0.00e+00 pvertex cortDA_to_SM hyper DXSSD 5.925091 0.00e+00 tvertex cortDA_to_SM hyper DXSSD 6.876098 0.00e+00 tvolume cortDA_to_SM hyper DXSSD 5.721400 0.00e+00 pvertex cortDM_to_DA hypo DXSSD -5.773509 0.00e+00 tvertex cortDM_to_DA hypo DXSSD -6.564210 0.00e+00 pvertex cortDM_to_VA hypo DXSSD -5.298831 2.00e-07 tvertex cortDM_to_VA hypo DXSSD -6.852014 0.00e+00 tvolume cortDM_to_VA hypo DXSSD -5.362809 1.00e-07 pvertex cortFP_to_SM hyper DXSSD 4.699304 3.60e-06 tvertex cortFP_to_SM hyper DXSSD 5.919053 0.00e+00 tvolume cortFP_to_SM hyper DXSSD 5.098214 5.00e-07 pvertex cortVA_to_DA hyper DXSSD 5.480320 1.00e-07 tvertex cortVA_to_DA hyper DXSSD 7.651558 0.00e+00 tvolume cortVA_to_DA hyper DXSSD 6.389303 0.00e+00 pvertex cortVI_to_VI hypo DXSSD -5.483734 1.00e-07 tvertex cortVI_to_VI hypo DXSSD -6.393396 0.00e+00 tvolume cortVI_to_VI hypo DXSSD -4.216663 3.07e-05 pvertex subcort_to_DA hyper DXSSD 5.273220 2.00e-07 tvertex subcort_to_DA hyper DXSSD 7.083454 0.00e+00 tvolume subcort_to_DA hyper DXSSD 7.089347 0.00e+00 pvertex subcort_to_DM hyper DXSSD 7.142738 0.00e+00 tvertex subcort_to_DM hyper DXSSD 6.982997 0.00e+00 tvolume subcort_to_DM hyper DXSSD 6.298543 0.00e+00 pvertex subcort_to_FP hypo DXSSD -6.772180 0.00e+00 tvertex subcort_to_FP hypo DXSSD -7.289079 0.00e+00 tvolume subcort_to_FP hypo DXSSD -7.321904 0.00e+00 pvertex subcort_to_SM hyper DXSSD 6.820810 0.00e+00 tvertex subcort_to_SM hyper DXSSD 7.841656 0.00e+00 tvolume subcort_to_SM hyper DXSSD 7.641352 0.00e+00 pvertex subcort_to_VA hypo DXSSD -6.451742 0.00e+00 tvertex subcort_to_VA hypo DXSSD -7.155871 0.00e+00 tvolume subcort_to_VA hypo DXSSD -8.220291 0.00e+00 pvertex subcort_to_VI hyper DXSSD 7.338969 0.00e+00 tvertex subcort_to_VI hyper DXSSD 7.818418 0.00e+00 tvolume subcort_to_VI hyper DXSSD 7.078653 0.00e+00 FC_scores_lmfit %&gt;% group_by(vertex_type, edge_group, effect_direction) %&gt;% filter(term == &quot;DXSSD&quot;, str_detect(edge_group,&quot;subcort&quot;)) %&gt;% ggplot(aes(y = abs(statistic), x = rev(vertex_type), color = edge_group)) + geom_point() + geom_line(aes(group = edge_group)) FC_scores_lmfit &lt;- FC_scores_together %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% group_by(edge_group, vertex_type, effect_direction, Site) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_pt + Sex + fd_mean_pt,.))) FC_scores_lmfit %&gt;% select(edge_group, vertex_type, Site, term, statistic, p.value) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% knitr::kable() ## Adding missing grouping variables: `effect_direction` effect_direction edge_group vertex_type Site term statistic p.value hypo cerebullum_to_striatum pvertex CMH DXSSD -3.5738171 0.0005370 hypo cerebullum_to_striatum pvertex COBRE DXSSD -1.8151375 0.0763226 hypo cerebullum_to_striatum pvertex ds000030 DXSSD -2.9588712 0.0044903 hypo cerebullum_to_striatum pvertex ZHH DXSSD -3.4056876 0.0008121 hypo cerebullum_to_striatum tvertex CMH DXSSD -3.5738171 0.0005370 hypo cerebullum_to_striatum tvertex COBRE DXSSD -1.8151375 0.0763226 hypo cerebullum_to_striatum tvertex ds000030 DXSSD -2.9588712 0.0044903 hypo cerebullum_to_striatum tvertex ZHH DXSSD -3.4056876 0.0008121 hypo cerebullum_to_striatum tvolume CMH DXSSD -3.5738171 0.0005370 hypo cerebullum_to_striatum tvolume COBRE DXSSD -1.8151375 0.0763226 hypo cerebullum_to_striatum tvolume ds000030 DXSSD -2.9588712 0.0044903 hypo cerebullum_to_striatum tvolume ZHH DXSSD -3.4056876 0.0008121 hypo cerebullum_to_thalamus pvertex CMH DXSSD -4.6172504 0.0000113 hypo cerebullum_to_thalamus pvertex COBRE DXSSD -2.6686483 0.0106237 hypo cerebullum_to_thalamus pvertex ds000030 DXSSD -4.7326351 0.0000151 hypo cerebullum_to_thalamus pvertex ZHH DXSSD -4.6160245 0.0000074 hypo cerebullum_to_thalamus tvertex CMH DXSSD -4.6172504 0.0000113 hypo cerebullum_to_thalamus tvertex COBRE DXSSD -2.6686483 0.0106237 hypo cerebullum_to_thalamus tvertex ds000030 DXSSD -4.7326351 0.0000151 hypo cerebullum_to_thalamus tvertex ZHH DXSSD -4.6160245 0.0000074 hypo cerebullum_to_thalamus tvolume CMH DXSSD -4.6172504 0.0000113 hypo cerebullum_to_thalamus tvolume COBRE DXSSD -2.6686483 0.0106237 hypo cerebullum_to_thalamus tvolume ds000030 DXSSD -4.7326351 0.0000151 hypo cerebullum_to_thalamus tvolume ZHH DXSSD -4.6160245 0.0000074 hyper cortDA_to_SM pvertex CMH DXSSD 3.4605247 0.0007858 hyper cortDA_to_SM pvertex COBRE DXSSD 1.5883789 0.1193616 hyper cortDA_to_SM pvertex ds000030 DXSSD 0.8064763 0.4233205 hyper cortDA_to_SM pvertex ZHH DXSSD 4.9424312 0.0000017 hyper cortDA_to_SM tvertex CMH DXSSD 3.9659463 0.0001352 hyper cortDA_to_SM tvertex COBRE DXSSD 0.7514483 0.4563836 hyper cortDA_to_SM tvertex ds000030 DXSSD 1.0769629 0.2860339 hyper cortDA_to_SM tvertex ZHH DXSSD 6.0713815 0.0000000 hyper cortDA_to_SM tvolume CMH DXSSD 1.6539474 0.1011828 hyper cortDA_to_SM tvolume COBRE DXSSD 1.2962903 0.2016335 hyper cortDA_to_SM tvolume ds000030 DXSSD 1.8397476 0.0710145 hyper cortDA_to_SM tvolume ZHH DXSSD 4.8696484 0.0000024 hypo cortDM_to_DA pvertex CMH DXSSD -2.2488685 0.0266498 hypo cortDM_to_DA pvertex COBRE DXSSD -1.0690117 0.2908942 hypo cortDM_to_DA pvertex ds000030 DXSSD -2.5656064 0.0129545 hypo cortDM_to_DA pvertex ZHH DXSSD -4.6052396 0.0000077 hypo cortDM_to_DA tvertex CMH DXSSD -3.6694130 0.0003870 hypo cortDM_to_DA tvertex COBRE DXSSD -1.6055266 0.1155322 hypo cortDM_to_DA tvertex ds000030 DXSSD -2.9133422 0.0050995 hypo cortDM_to_DA tvertex ZHH DXSSD -4.0026889 0.0000911 hypo cortDM_to_VA pvertex CMH DXSSD -1.5776234 0.1177186 hypo cortDM_to_VA pvertex COBRE DXSSD -2.7644023 0.0082990 hypo cortDM_to_VA pvertex ds000030 DXSSD -2.6464987 0.0104955 hypo cortDM_to_VA pvertex ZHH DXSSD -3.6651190 0.0003242 hypo cortDM_to_VA tvertex CMH DXSSD -3.2282384 0.0016711 hypo cortDM_to_VA tvertex COBRE DXSSD -2.1184270 0.0398222 hypo cortDM_to_VA tvertex ds000030 DXSSD -2.2714493 0.0269136 hypo cortDM_to_VA tvertex ZHH DXSSD -5.1196647 0.0000008 hypo cortDM_to_VA tvolume CMH DXSSD -2.6572843 0.0091324 hypo cortDM_to_VA tvolume COBRE DXSSD -3.2498433 0.0022164 hypo cortDM_to_VA tvolume ds000030 DXSSD -2.3938342 0.0199868 hypo cortDM_to_VA tvolume ZHH DXSSD -2.8874987 0.0043538 hyper cortFP_to_SM pvertex CMH DXSSD 3.2998736 0.0013292 hyper cortFP_to_SM pvertex COBRE DXSSD 2.1723407 0.0352600 hyper cortFP_to_SM pvertex ds000030 DXSSD 1.1024222 0.2749112 hyper cortFP_to_SM pvertex ZHH DXSSD 3.2467171 0.0013898 hyper cortFP_to_SM tvertex CMH DXSSD 3.0989110 0.0025043 hyper cortFP_to_SM tvertex COBRE DXSSD 2.5247079 0.0152600 hyper cortFP_to_SM tvertex ds000030 DXSSD 2.1271389 0.0377484 hyper cortFP_to_SM tvertex ZHH DXSSD 3.9391567 0.0001164 hyper cortFP_to_SM tvolume CMH DXSSD 2.4541891 0.0157972 hyper cortFP_to_SM tvolume COBRE DXSSD 1.1820165 0.2435480 hyper cortFP_to_SM tvolume ds000030 DXSSD 3.5398854 0.0008050 hyper cortFP_to_SM tvolume ZHH DXSSD 3.2232928 0.0015019 hyper cortVA_to_DA pvertex CMH DXSSD 1.2679338 0.2076803 hyper cortVA_to_DA pvertex COBRE DXSSD 1.4393562 0.1571264 hyper cortVA_to_DA pvertex ds000030 DXSSD 4.6224661 0.0000222 hyper cortVA_to_DA pvertex ZHH DXSSD 4.6879048 0.0000054 hyper cortVA_to_DA tvertex CMH DXSSD 2.4925742 0.0142760 hyper cortVA_to_DA tvertex COBRE DXSSD 1.6653818 0.1029422 hyper cortVA_to_DA tvertex ds000030 DXSSD 2.7111927 0.0088442 hyper cortVA_to_DA tvertex ZHH DXSSD 6.8510870 0.0000000 hyper cortVA_to_DA tvolume CMH DXSSD 1.8850650 0.0622396 hyper cortVA_to_DA tvolume COBRE DXSSD 1.7460976 0.0877732 hyper cortVA_to_DA tvolume ds000030 DXSSD 2.2095616 0.0311682 hyper cortVA_to_DA tvolume ZHH DXSSD 5.5822563 0.0000001 hypo cortVI_to_VI pvertex CMH DXSSD -2.1605105 0.0330516 hypo cortVI_to_VI pvertex COBRE DXSSD -2.7408364 0.0088229 hypo cortVI_to_VI pvertex ds000030 DXSSD -0.6228427 0.5358720 hypo cortVI_to_VI pvertex ZHH DXSSD -4.2541813 0.0000335 hypo cortVI_to_VI tvertex CMH DXSSD -3.0887756 0.0025837 hypo cortVI_to_VI tvertex COBRE DXSSD -2.0818537 0.0432047 hypo cortVI_to_VI tvertex ds000030 DXSSD -1.1142761 0.2698372 hypo cortVI_to_VI tvertex ZHH DXSSD -4.6517386 0.0000063 hypo cortVI_to_VI tvolume CMH DXSSD -1.9895495 0.0492917 hypo cortVI_to_VI tvolume COBRE DXSSD -2.3873398 0.0213328 hypo cortVI_to_VI tvolume ds000030 DXSSD -1.3446992 0.1840491 hypo cortVI_to_VI tvolume ZHH DXSSD -2.7534151 0.0064958 hyper subcort_to_DA pvertex CMH DXSSD 3.3982361 0.0009654 hyper subcort_to_DA pvertex COBRE DXSSD 1.5352888 0.1318731 hyper subcort_to_DA pvertex ds000030 DXSSD 1.2337519 0.2223585 hyper subcort_to_DA pvertex ZHH DXSSD 3.4420805 0.0007161 hyper subcort_to_DA tvertex CMH DXSSD 3.5642111 0.0005548 hyper subcort_to_DA tvertex COBRE DXSSD 2.9049097 0.0057281 hyper subcort_to_DA tvertex ds000030 DXSSD 1.9537523 0.0556441 hyper subcort_to_DA tvertex ZHH DXSSD 4.7147109 0.0000048 hyper subcort_to_DA tvolume CMH DXSSD 4.6478503 0.0000100 hyper subcort_to_DA tvolume COBRE DXSSD 3.6634652 0.0006651 hyper subcort_to_DA tvolume ds000030 DXSSD 1.6065518 0.1136790 hyper subcort_to_DA tvolume ZHH DXSSD 4.3301197 0.0000246 hyper subcort_to_DM pvertex CMH DXSSD 2.4335530 0.0166734 hyper subcort_to_DM pvertex COBRE DXSSD 2.4001209 0.0206874 hyper subcort_to_DM pvertex ds000030 DXSSD 4.0462588 0.0001584 hyper subcort_to_DM pvertex ZHH DXSSD 5.0852633 0.0000009 hyper subcort_to_DM tvertex CMH DXSSD 3.7330010 0.0003103 hyper subcort_to_DM tvertex COBRE DXSSD 1.7385244 0.0891124 hyper subcort_to_DM tvertex ds000030 DXSSD 2.8775910 0.0056306 hyper subcort_to_DM tvertex ZHH DXSSD 4.9203213 0.0000019 hyper subcort_to_DM tvolume CMH DXSSD 3.1692934 0.0020123 hyper subcort_to_DM tvolume COBRE DXSSD 2.3938993 0.0209993 hyper subcort_to_DM tvolume ds000030 DXSSD 4.3655518 0.0000540 hyper subcort_to_DM tvolume ZHH DXSSD 3.1015981 0.0022315 hypo subcort_to_FP pvertex CMH DXSSD -3.5016798 0.0006850 hypo subcort_to_FP pvertex COBRE DXSSD -3.0043103 0.0043812 hypo subcort_to_FP pvertex ds000030 DXSSD -1.8414043 0.0707679 hypo subcort_to_FP pvertex ZHH DXSSD -4.4278006 0.0000164 hypo subcort_to_FP tvertex CMH DXSSD -3.4612544 0.0007839 hypo subcort_to_FP tvertex COBRE DXSSD -2.6722293 0.0105269 hypo subcort_to_FP tvertex ds000030 DXSSD -3.1792338 0.0023876 hypo subcort_to_FP tvertex ZHH DXSSD -4.7722615 0.0000037 hypo subcort_to_FP tvolume CMH DXSSD -4.1782391 0.0000617 hypo subcort_to_FP tvolume COBRE DXSSD -2.2207510 0.0315632 hypo subcort_to_FP tvolume ds000030 DXSSD -2.2644789 0.0273656 hypo subcort_to_FP tvolume ZHH DXSSD -4.6832571 0.0000055 hyper subcort_to_SM pvertex CMH DXSSD 3.7383364 0.0003046 hyper subcort_to_SM pvertex COBRE DXSSD 4.2077278 0.0001250 hyper subcort_to_SM pvertex ds000030 DXSSD 2.5269281 0.0143061 hyper subcort_to_SM pvertex ZHH DXSSD 3.6518668 0.0003402 hyper subcort_to_SM tvertex CMH DXSSD 4.3676777 0.0000300 hyper subcort_to_SM tvertex COBRE DXSSD 5.2941126 0.0000036 hyper subcort_to_SM tvertex ds000030 DXSSD 3.0764450 0.0032160 hyper subcort_to_SM tvertex ZHH DXSSD 4.0931594 0.0000639 hyper subcort_to_SM tvolume CMH DXSSD 4.0651540 0.0000940 hyper subcort_to_SM tvolume COBRE DXSSD 3.6926647 0.0006095 hyper subcort_to_SM tvolume ds000030 DXSSD 3.8141038 0.0003383 hyper subcort_to_SM tvolume ZHH DXSSD 4.3247986 0.0000251 hypo subcort_to_VA pvertex CMH DXSSD -2.4042660 0.0179912 hypo subcort_to_VA pvertex COBRE DXSSD -2.9739368 0.0047575 hypo subcort_to_VA pvertex ds000030 DXSSD -1.6334286 0.1078912 hypo subcort_to_VA pvertex ZHH DXSSD -4.8313921 0.0000029 hypo subcort_to_VA tvertex CMH DXSSD -3.3339234 0.0011908 hypo subcort_to_VA tvertex COBRE DXSSD -2.4325199 0.0191295 hypo subcort_to_VA tvertex ds000030 DXSSD -1.8442373 0.0703477 hypo subcort_to_VA tvertex ZHH DXSSD -5.3522347 0.0000003 hypo subcort_to_VA tvolume CMH DXSSD -4.0091401 0.0001155 hypo subcort_to_VA tvolume COBRE DXSSD -2.0180347 0.0497105 hypo subcort_to_VA tvolume ds000030 DXSSD -3.2329145 0.0020392 hypo subcort_to_VA tvolume ZHH DXSSD -6.0844455 0.0000000 hyper subcort_to_VI pvertex CMH DXSSD 3.2258252 0.0016840 hyper subcort_to_VI pvertex COBRE DXSSD 3.7500601 0.0005129 hyper subcort_to_VI pvertex ds000030 DXSSD 2.3222757 0.0238129 hyper subcort_to_VI pvertex ZHH DXSSD 4.8046872 0.0000032 hyper subcort_to_VI tvertex CMH DXSSD 4.0500090 0.0000994 hyper subcort_to_VI tvertex COBRE DXSSD 3.6023035 0.0007979 hyper subcort_to_VI tvertex ds000030 DXSSD 1.7488386 0.0857023 hyper subcort_to_VI tvertex ZHH DXSSD 5.0786023 0.0000009 hyper subcort_to_VI tvolume CMH DXSSD 3.7015792 0.0003462 hyper subcort_to_VI tvolume COBRE DXSSD 3.7992718 0.0004420 hyper subcort_to_VI tvolume ds000030 DXSSD 1.8780589 0.0654918 hyper subcort_to_VI tvolume ZHH DXSSD 4.4637685 0.0000141 FC_scores_lmfit %&gt;% filter(term == &quot;DXSSD&quot;, str_detect(edge_group,&quot;subcort&quot;)) %&gt;% ggplot(aes(y = abs(statistic), x = rev(vertex_type), color = edge_group)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~Site, nrow = 1) SSD_cors &lt;- FC_scores_together %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% filter(DX == &quot;SSD&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(SSD_cors)) HC_cors &lt;- FC_scores_together %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% filter(DX == &quot;CTRL&quot;, vertex_type == &quot;pvertex&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(HC_cors)) # Marginal densities along x axis plot_DX_scatter_elipsed &lt;- function(df, x, y) { #the tidy eval ness xvar &lt;- enquo(x) yvar &lt;- enquo(y) # make the main scatte bit using above main_scatter &lt;- ggplot(data = df, aes(x = !!xvar, y = !!yvar, color = DX)) + geom_point(alpha = 0.7, size = 0.7) + stat_ellipse() + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) xdens &lt;- axis_canvas(main_scatter, axis = &quot;x&quot;)+ geom_density(data = df, aes(x = !!xvar, fill = DX), alpha = 0.5, size = 0.2) + scale_fill_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) ydens &lt;- axis_canvas(main_scatter, axis = &quot;y&quot;, coord_flip = TRUE)+ geom_density(data = df, aes(x = !!yvar, fill = DX), alpha = 0.5, size = 0.2) + scale_fill_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + coord_flip() #putting the peices together p1 &lt;- insert_xaxis_grob(main_scatter, xdens, grid::unit(.2, &quot;null&quot;), position = &quot;top&quot;) p2&lt;- insert_yaxis_grob(p1, ydens, grid::unit(.2, &quot;null&quot;), position = &quot;right&quot;) return(p2) } library(cowplot) fplot &lt;- FC_scores_together %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% unite(directed_edge_group, effect_direction, edge_group) %&gt;% unite(dat_sub, dataset, subject) %&gt;% select(dat_sub, Site, DX, directed_edge_group, wFC_score) %&gt;% spread(directed_edge_group, wFC_score) ggdraw(plot_DX_scatter_elipsed(fplot, x = hyper_subcort_to_VI, y = hypo_subcort_to_FP)) ggdraw(plot_DX_scatter_elipsed(fplot, x = hyper_subcort_to_VI, y = hypo_cerebullum_to_striatum)) ggdraw(plot_DX_scatter_elipsed(fplot, x = hyper_subcort_to_SM, y = hypo_subcort_to_FP)) fig1 &lt;- fplot %&gt;% ggplot(aes(y = hypo_subcort_to_FP, x = DX, color = DX)) + geom_boxplot(outlier.shape = NA) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, binwidth = 0.01, alpha = 0.5) + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + facet_wrap( ~ Site, ncol = 4) + labs(x = NULL) #ggsave(fig1, filename = &#39;VA_results.png&#39;,height = 8, width = 5) fig1 fig1 &lt;- fplot %&gt;% ggplot(aes(y = hyper_subcort_to_SM, x = DX, color = DX)) + geom_boxplot(outlier.shape = NA) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, binwidth = 0.01, alpha = 0.5) + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + facet_wrap( ~ Site, ncol = 4) + labs(x = NULL) #ggsave(fig1, filename = &#39;VA_results.png&#39;,height = 8, width = 5) fig1 "],
["calculate-weighted-subject-scores-by-chopping-up-the-matrix.html", "Chapter 10 calculate weighted subject scores by chopping up the matrix 10.1 The paths to data", " Chapter 10 calculate weighted subject scores by chopping up the matrix define_hypohyper_weights &lt;- function(lm_df, cohenD_threshold, node_annotations, edge_guide) { full_DX_mat &lt;- lm_df %&gt;% ungroup() %&gt;% select(to, from, cohenD_DX_tstatdir) %&gt;% uppertri_df_to_full() %&gt;% inner_join(node_annotations, by = c(&quot;to&quot;=&quot;node_name&quot;)) %&gt;% inner_join(node_annotations, by = c(&quot;from&quot;=&quot;node_name&quot;)) pos_weights &lt;- full_DX_mat %&gt;% filter(value &gt; cohenD_threshold) %&gt;% semi_join(edge_grouping_guide, by = c(&quot;node_grouping.x&quot; = &quot;to&quot;, &quot;node_grouping.y&quot; = &quot;from&quot;)) %&gt;% unite(edge_group, node_grouping.x, node_grouping.y) %&gt;% select(edge_group, to, from, value) neg_weights &lt;- full_DX_mat %&gt;% filter(value &lt; -cohenD_threshold) %&gt;% semi_join(edge_grouping_guide, by = c(&quot;node_grouping.x&quot; = &quot;to&quot;, &quot;node_grouping.y&quot; = &quot;from&quot;)) %&gt;% unite(edge_group, node_grouping.x, node_grouping.y) %&gt;% select(edge_group, to, from, value) all_weights &lt;- bind_rows(hyper = pos_weights, hypo = neg_weights, .id = &quot;effect_direction&quot;) return(all_weights) } define_vertex_hypohyper_weights &lt;- function(lm_df, v_type, cohenD_threshold) { groupwise_weights &lt;- lm_df %&gt;% filter(term == &quot;DXSSD&quot;, vertex_type == v_type) %&gt;% ungroup() %&gt;% define_hypohyper_weights(., cohenD_threshold, node_annotations = node_annotations1, edge_guide = edge_guide) return(groupwise_weights) } size_threshold = 8 cohenD_threshold = 0.26 groupwise_weights &lt;- tibble(vertex_type = c(&quot;pvertex&quot;, &quot;tvertex&quot;, &quot;tvolume&quot;)) %&gt;% mutate(result = map(vertex_type, ~ define_vertex_hypohyper_weights(DX_lm_model_DXcohenD, .x, cohenD_threshold))) %&gt;% unnest(cols = c(result)) groupwise_weights_table &lt;- groupwise_weights %&gt;% count(vertex_type, effect_direction, edge_group) %&gt;% spread(effect_direction, n, fill = 0) %&gt;% group_by(edge_group) %&gt;% mutate(hyperhypo_diff = (hyper - hypo)/(hyper + hypo), use_hypo = max(hyperhypo_diff) &lt; 0.1 &amp; min(hypo) &gt; size_threshold, use_hyper = min(hyperhypo_diff) &gt; -0.1 &amp; min(hyper) &gt; size_threshold, num = use_hypo + use_hyper) %&gt;% select(num, use_hypo, use_hyper, everything()) %&gt;% arrange(num, edge_group, vertex_type) # ungroup() %&gt;% # select(vertex_type, edge_group, hyperhypo_diff, max_size) %&gt;% # gather(tmp_col, tmp_vals, hyperhypo_diff, max_size) %&gt;% # unite(vertex_meas, tmp_col, vertex_type) %&gt;% # spread(vertex_meas, tmp_vals) %&gt;% # arrange(-abs(hyperhypo_diff_tvolume)) groupwise_weights_table ## # A tibble: 118 x 8 ## # Groups: edge_group [42] ## num use_hypo use_hyper vertex_type edge_group hyper hypo hyperhypo_diff ## &lt;int&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 FALSE FALSE pvertex CortDA_cereb… 2 4 -0.333 ## 2 0 FALSE FALSE tvertex CortDA_cereb… 4 1 0.6 ## 3 0 FALSE FALSE tvolume CortDA_cereb… 2 2 0 ## 4 0 FALSE FALSE tvolume CortDA_CortDA 2 0 1 ## 5 0 FALSE FALSE pvertex CortDA_CortVI 1 0 1 ## 6 0 FALSE FALSE tvertex CortDA_CortVI 0 1 -1 ## 7 0 FALSE FALSE tvolume CortDA_CortVI 1 1 0 ## 8 0 FALSE FALSE tvolume CortDA_stria… 6 0 1 ## 9 0 FALSE FALSE pvertex CortDM_cereb… 14 5 0.474 ## 10 0 FALSE FALSE tvertex CortDM_cereb… 4 10 -0.429 ## # … with 108 more rows edge_groups_to_use &lt;- groupwise_weights_table %&gt;% ungroup() %&gt;% select(use_hypo, use_hyper, edge_group) %&gt;% distinct() %&gt;% filter(use_hypo | use_hyper) edge_groups_to_use ## # A tibble: 16 x 3 ## use_hypo use_hyper edge_group ## &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; ## 1 TRUE FALSE cerebellum_striatum ## 2 TRUE FALSE cerebellum_thalamus ## 3 FALSE TRUE CortDA_CortSM ## 4 FALSE TRUE CortDA_thalamus ## 5 TRUE FALSE CortDM_CortDA ## 6 TRUE FALSE CortFP_cerebellum ## 7 FALSE TRUE CortFP_CortSM ## 8 FALSE TRUE CortSM_cerebellum ## 9 FALSE TRUE CortSM_thalamus ## 10 FALSE TRUE CortVA_CortDA ## 11 TRUE FALSE CortVA_striatum ## 12 FALSE TRUE CortVA_thalamus ## 13 FALSE TRUE CortVI_cerebellum ## 14 FALSE TRUE CortVI_striatum ## 15 FALSE TRUE CortVI_thalamus ## 16 TRUE FALSE thalamus_striatum hyper_edgegroups &lt;- edge_groups_to_use %&gt;% filter(use_hyper) %&gt;% pull(edge_group) hypo_edgegroups &lt;- edge_groups_to_use %&gt;% filter(use_hypo) %&gt;% pull(edge_group) groupwise_weights_hyper &lt;- groupwise_weights %&gt;% filter(edge_group %in% hyper_edgegroups, effect_direction == &quot;hyper&quot;) groupwise_weights_hypo &lt;- groupwise_weights %&gt;% filter(edge_group %in% hypo_edgegroups, effect_direction == &quot;hypo&quot;) groupwise_weights_both &lt;- bind_rows( groupwise_weights_hypo, groupwise_weights_hyper ) %&gt;% rename(edge_FC_weight = value) groupwise_weights_both %&gt;% count(vertex_type, effect_direction, edge_group) %&gt;% ggplot(aes(y = n, x = vertex_type, color = edge_group)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~effect_direction) groupwise_weights_both %&gt;% mutate(node_class = if_else(str_detect(edge_group,&#39;_Cort&#39;), &quot;Within_Cortical&quot;, &quot;Subcortical_to&quot;)) %&gt;% group_by(vertex_type, effect_direction, edge_group, node_class) %&gt;% summarise(median_t = median(edge_FC_weight)) %&gt;% ggplot(aes(y = abs(median_t), x = vertex_type, color = edge_group)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~effect_direction*node_class) ## `summarise()` regrouping output by &#39;vertex_type&#39;, &#39;effect_direction&#39;, &#39;edge_group&#39; (override with `.groups` argument) write_csv(groupwise_weights_both, file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;weighted_subject_FC_weigths&quot;, &#39;SSD4cohorts_DXweighted_moregroups_subject_weights.csv&#39;)) all_subject_FC_weights_by_vertex &lt;- function(results_data, edge_weights, vtype) { result &lt;- results_data %&gt;% ungroup() %&gt;% filter(vertex_type == vtype) %&gt;% select(subject, dataset, to, from, weight) %&gt;% calc_subjects_wFC_score(edge_weights %&gt;% filter(vertex_type == vtype)) return(result) } all_subject_FC_weights &lt;- tibble(vertex_type = c(&quot;pvertex&quot;, &quot;tvertex&quot;, &quot;tvolume&quot;)) %&gt;% mutate(result = map(vertex_type, ~all_subject_FC_weights_by_vertex(results_pheno, groupwise_weights_both, .x))) %&gt;% unnest(cols = c(result)) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) ## `summarise()` regrouping output by &#39;subject&#39;, &#39;dataset&#39;, &#39;effect_direction&#39; (override with `.groups` argument) write_csv(all_subject_FC_weights, file.path(output_base, &quot;all_clinicalplusqa_group&quot;, &quot;weighted_subject_FC_scores&quot;, &#39;SSD4cohorts_DXweighted_edgegroupwise_subject_scores.csv&#39;)) FC_gscores_lmfit &lt;- all_subject_FC_weights %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% group_by(effect_direction, edge_group, vertex_type) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_pt + Sex + fd_mean_pt + Site,.))) FC_gscores_lmfit %&gt;% select(effect_direction, edge_group, vertex_type, term, statistic, p.value) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% knitr::kable() effect_direction edge_group vertex_type term statistic p.value hyper CortDA_CortSM pvertex DXSSD 5.845282 0.00e+00 hyper CortDA_CortSM tvertex DXSSD 6.776400 0.00e+00 hyper CortDA_CortSM tvolume DXSSD 5.671978 0.00e+00 hyper CortDA_thalamus pvertex DXSSD 5.196846 3.00e-07 hyper CortDA_thalamus tvertex DXSSD 6.969710 0.00e+00 hyper CortDA_thalamus tvolume DXSSD 6.589500 0.00e+00 hyper CortFP_CortSM pvertex DXSSD 4.828552 2.00e-06 hyper CortFP_CortSM tvertex DXSSD 5.966246 0.00e+00 hyper CortFP_CortSM tvolume DXSSD 5.252345 2.00e-07 hyper CortSM_cerebellum pvertex DXSSD 5.640554 0.00e+00 hyper CortSM_cerebellum tvertex DXSSD 6.534012 0.00e+00 hyper CortSM_cerebellum tvolume DXSSD 5.840569 0.00e+00 hyper CortSM_thalamus pvertex DXSSD 5.884949 0.00e+00 hyper CortSM_thalamus tvertex DXSSD 6.571101 0.00e+00 hyper CortSM_thalamus tvolume DXSSD 6.559769 0.00e+00 hyper CortVA_CortDA pvertex DXSSD 5.557345 1.00e-07 hyper CortVA_CortDA tvertex DXSSD 7.656908 0.00e+00 hyper CortVA_CortDA tvolume DXSSD 6.425023 0.00e+00 hyper CortVA_thalamus pvertex DXSSD 4.221236 3.01e-05 hyper CortVA_thalamus tvertex DXSSD 6.121716 0.00e+00 hyper CortVA_thalamus tvolume DXSSD 7.025053 0.00e+00 hyper CortVI_cerebellum pvertex DXSSD 5.260644 2.00e-07 hyper CortVI_cerebellum tvertex DXSSD 5.600676 0.00e+00 hyper CortVI_cerebellum tvolume DXSSD 4.854027 1.70e-06 hyper CortVI_striatum pvertex DXSSD 4.662483 4.30e-06 hyper CortVI_striatum tvertex DXSSD 4.798883 2.30e-06 hyper CortVI_striatum tvolume DXSSD 4.632696 4.90e-06 hyper CortVI_thalamus pvertex DXSSD 6.659482 0.00e+00 hyper CortVI_thalamus tvertex DXSSD 7.237281 0.00e+00 hyper CortVI_thalamus tvolume DXSSD 6.049776 0.00e+00 hypo cerebellum_striatum pvertex DXSSD -6.215017 0.00e+00 hypo cerebellum_striatum tvertex DXSSD -6.215017 0.00e+00 hypo cerebellum_striatum tvolume DXSSD -6.215017 0.00e+00 hypo cerebellum_thalamus pvertex DXSSD -8.142185 0.00e+00 hypo cerebellum_thalamus tvertex DXSSD -8.142185 0.00e+00 hypo cerebellum_thalamus tvolume DXSSD -8.142185 0.00e+00 hypo CortDM_CortDA pvertex DXSSD -5.750990 0.00e+00 hypo CortDM_CortDA tvertex DXSSD -6.724222 0.00e+00 hypo CortFP_cerebellum pvertex DXSSD -5.734453 0.00e+00 hypo CortFP_cerebellum tvertex DXSSD -6.925592 0.00e+00 hypo CortFP_cerebellum tvolume DXSSD -5.936426 0.00e+00 hypo CortVA_striatum pvertex DXSSD -4.234918 2.84e-05 hypo CortVA_striatum tvertex DXSSD -4.595880 5.80e-06 hypo CortVA_striatum tvolume DXSSD -4.558391 6.90e-06 hypo thalamus_striatum pvertex DXSSD -5.839593 0.00e+00 hypo thalamus_striatum tvertex DXSSD -5.839593 0.00e+00 hypo thalamus_striatum tvolume DXSSD -5.839593 0.00e+00 FC_gscores_lmfit %&gt;% mutate(node_class = if_else(str_detect(edge_group,&#39;_Cort&#39;), &quot;Within_Cortical&quot;, &quot;Subcortical_to&quot;)) %&gt;% group_by(vertex_type, effect_direction, edge_group, node_class) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% ggplot(aes(y = abs(statistic), x = rev(vertex_type), color = edge_group)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~effect_direction*node_class) FC_gscores_lmfitbySite &lt;- all_subject_FC_weights %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% group_by(effect_direction, edge_group, vertex_type, Site) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_pt + Sex + fd_mean_pt,.))) FC_gscores_lmfitbySite %&gt;% select(effect_direction, edge_group, Site, vertex_type, term, statistic, p.value) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% knitr::kable() effect_direction edge_group Site vertex_type term statistic p.value hyper CortDA_CortSM CMH pvertex DXSSD 3.4344896 0.0008567 hyper CortDA_CortSM COBRE pvertex DXSSD 1.5512773 0.1279991 hyper CortDA_CortSM ds000030 pvertex DXSSD 0.8355214 0.4069129 hyper CortDA_CortSM ZHH pvertex DXSSD 4.9413579 0.0000018 hyper CortDA_CortSM CMH tvertex DXSSD 4.0828814 0.0000881 hyper CortDA_CortSM COBRE tvertex DXSSD 0.5466634 0.5873718 hyper CortDA_CortSM ds000030 tvertex DXSSD 1.1560392 0.2524877 hyper CortDA_CortSM ZHH tvertex DXSSD 6.0846098 0.0000000 hyper CortDA_CortSM CMH tvolume DXSSD 2.0362326 0.0442933 hyper CortDA_CortSM COBRE tvolume DXSSD 1.1798602 0.2443957 hyper CortDA_CortSM ds000030 tvolume DXSSD 1.8918418 0.0635959 hyper CortDA_CortSM ZHH tvolume DXSSD 4.7461613 0.0000042 hyper CortDA_thalamus CMH pvertex DXSSD 3.3563766 0.0011070 hyper CortDA_thalamus COBRE pvertex DXSSD 1.5344736 0.1320732 hyper CortDA_thalamus ds000030 pvertex DXSSD 1.3263653 0.1900088 hyper CortDA_thalamus ZHH pvertex DXSSD 3.2899980 0.0012030 hyper CortDA_thalamus CMH tvertex DXSSD 3.5460097 0.0005901 hyper CortDA_thalamus COBRE tvertex DXSSD 2.9370505 0.0052552 hyper CortDA_thalamus ds000030 tvertex DXSSD 1.8103877 0.0755076 hyper CortDA_thalamus ZHH tvertex DXSSD 4.5593559 0.0000094 hyper CortDA_thalamus CMH tvolume DXSSD 4.5482130 0.0000148 hyper CortDA_thalamus COBRE tvolume DXSSD 2.9873379 0.0045879 hyper CortDA_thalamus ds000030 tvolume DXSSD 2.1713130 0.0340847 hyper CortDA_thalamus ZHH tvolume DXSSD 3.4018269 0.0008229 hyper CortFP_CortSM CMH pvertex DXSSD 3.3184448 0.0012520 hyper CortFP_CortSM COBRE pvertex DXSSD 2.1281709 0.0389612 hyper CortFP_CortSM ds000030 pvertex DXSSD 1.3250661 0.1904366 hyper CortFP_CortSM ZHH pvertex DXSSD 3.2848092 0.0012241 hyper CortFP_CortSM CMH tvertex DXSSD 3.0989110 0.0025043 hyper CortFP_CortSM COBRE tvertex DXSSD 2.5247079 0.0152600 hyper CortFP_CortSM ds000030 tvertex DXSSD 2.1271389 0.0377484 hyper CortFP_CortSM ZHH tvertex DXSSD 3.9391567 0.0001164 hyper CortFP_CortSM CMH tvolume DXSSD 2.5880489 0.0110456 hyper CortFP_CortSM COBRE tvolume DXSSD 1.1398047 0.2605346 hyper CortFP_CortSM ds000030 tvolume DXSSD 3.4509512 0.0010587 hyper CortFP_CortSM ZHH tvolume DXSSD 3.3432662 0.0010052 hyper CortSM_cerebellum CMH pvertex DXSSD 2.8530052 0.0052353 hyper CortSM_cerebellum COBRE pvertex DXSSD 2.6343940 0.0115915 hyper CortSM_cerebellum ds000030 pvertex DXSSD 2.1377744 0.0368362 hyper CortSM_cerebellum ZHH pvertex DXSSD 3.5767739 0.0004457 hyper CortSM_cerebellum CMH tvertex DXSSD 3.0642189 0.0027859 hyper CortSM_cerebellum COBRE tvertex DXSSD 3.5177224 0.0010240 hyper CortSM_cerebellum ds000030 tvertex DXSSD 2.7013132 0.0090799 hyper CortSM_cerebellum ZHH tvertex DXSSD 3.9495271 0.0001118 hyper CortSM_cerebellum CMH tvolume DXSSD 2.7271361 0.0075112 hyper CortSM_cerebellum COBRE tvolume DXSSD 2.2549213 0.0291650 hyper CortSM_cerebellum ds000030 tvolume DXSSD 2.4511537 0.0173297 hyper CortSM_cerebellum ZHH tvolume DXSSD 4.2348927 0.0000363 hyper CortSM_thalamus CMH pvertex DXSSD 3.2647429 0.0014878 hyper CortSM_thalamus COBRE pvertex DXSSD 4.0880853 0.0001818 hyper CortSM_thalamus ds000030 pvertex DXSSD 2.3518344 0.0221596 hyper CortSM_thalamus ZHH pvertex DXSSD 2.7078940 0.0074167 hyper CortSM_thalamus CMH tvertex DXSSD 3.8683176 0.0001923 hyper CortSM_thalamus COBRE tvertex DXSSD 5.0883117 0.0000072 hyper CortSM_thalamus ds000030 tvertex DXSSD 2.7376128 0.0082412 hyper CortSM_thalamus ZHH tvertex DXSSD 2.9532402 0.0035596 hyper CortSM_thalamus CMH tvolume DXSSD 3.8441078 0.0002096 hyper CortSM_thalamus COBRE tvolume DXSSD 3.4946287 0.0010957 hyper CortSM_thalamus ds000030 tvolume DXSSD 3.3985227 0.0012420 hyper CortSM_thalamus ZHH tvolume DXSSD 3.1167000 0.0021258 hyper CortVA_CortDA CMH pvertex DXSSD 1.2350005 0.2196401 hyper CortVA_CortDA COBRE pvertex DXSSD 1.4682423 0.1491515 hyper CortVA_CortDA ds000030 pvertex DXSSD 4.6806422 0.0000181 hyper CortVA_CortDA ZHH pvertex DXSSD 4.7349298 0.0000044 hyper CortVA_CortDA CMH tvertex DXSSD 2.4541491 0.0157989 hyper CortVA_CortDA COBRE tvertex DXSSD 1.7526491 0.0866283 hyper CortVA_CortDA ds000030 tvertex DXSSD 2.6914350 0.0093213 hyper CortVA_CortDA ZHH tvertex DXSSD 6.7740919 0.0000000 hyper CortVA_CortDA CMH tvolume DXSSD 1.8739505 0.0637715 hyper CortVA_CortDA COBRE tvolume DXSSD 1.4976249 0.1413709 hyper CortVA_CortDA ds000030 tvolume DXSSD 2.0857786 0.0414860 hyper CortVA_CortDA ZHH tvolume DXSSD 5.6883141 0.0000001 hyper CortVA_thalamus CMH pvertex DXSSD 2.3601089 0.0201533 hyper CortVA_thalamus COBRE pvertex DXSSD 0.6577569 0.5141210 hyper CortVA_thalamus ds000030 pvertex DXSSD 1.9176334 0.0601731 hyper CortVA_thalamus ZHH pvertex DXSSD 3.3143369 0.0011085 hyper CortVA_thalamus CMH tvertex DXSSD 3.1683196 0.0020184 hyper CortVA_thalamus COBRE tvertex DXSSD 1.3026996 0.1994545 hyper CortVA_thalamus ds000030 tvertex DXSSD 1.3776201 0.1737058 hyper CortVA_thalamus ZHH tvertex DXSSD 4.9695406 0.0000015 hyper CortVA_thalamus CMH tvolume DXSSD 2.6689238 0.0088419 hyper CortVA_thalamus COBRE tvolume DXSSD 2.6159512 0.0121455 hyper CortVA_thalamus ds000030 tvolume DXSSD 2.9280756 0.0048944 hyper CortVA_thalamus ZHH tvolume DXSSD 5.1325790 0.0000007 hyper CortVI_cerebellum CMH pvertex DXSSD 2.5059463 0.0137777 hyper CortVI_cerebellum COBRE pvertex DXSSD 2.2640232 0.0285542 hyper CortVI_cerebellum ds000030 pvertex DXSSD 2.2382208 0.0291293 hyper CortVI_cerebellum ZHH pvertex DXSSD 3.3906721 0.0008551 hyper CortVI_cerebellum CMH tvertex DXSSD 3.0193319 0.0031939 hyper CortVI_cerebellum COBRE tvertex DXSSD 3.2432960 0.0022578 hyper CortVI_cerebellum ds000030 tvertex DXSSD 1.1326796 0.2620910 hyper CortVI_cerebellum ZHH tvertex DXSSD 3.4705313 0.0006486 hyper CortVI_cerebellum CMH tvolume DXSSD 2.4872823 0.0144776 hyper CortVI_cerebellum COBRE tvolume DXSSD 2.8430943 0.0067510 hyper CortVI_cerebellum ds000030 tvolume DXSSD 0.9611283 0.3405472 hyper CortVI_cerebellum ZHH tvolume DXSSD 3.2230787 0.0015029 hyper CortVI_striatum CMH pvertex DXSSD 2.6426214 0.0095105 hyper CortVI_striatum COBRE pvertex DXSSD 2.1283515 0.0389454 hyper CortVI_striatum ds000030 pvertex DXSSD 0.0498187 0.9604410 hyper CortVI_striatum ZHH pvertex DXSSD 3.4868579 0.0006126 hyper CortVI_striatum CMH tvertex DXSSD 3.2838928 0.0013993 hyper CortVI_striatum COBRE tvertex DXSSD 1.5306756 0.1330083 hyper CortVI_striatum ds000030 tvertex DXSSD -0.4477015 0.6560656 hyper CortVI_striatum ZHH tvertex DXSSD 3.7865589 0.0002073 hyper CortVI_striatum CMH tvolume DXSSD 2.7896505 0.0062873 hyper CortVI_striatum COBRE tvolume DXSSD 2.5025433 0.0161190 hyper CortVI_striatum ds000030 tvolume DXSSD 0.1800368 0.8577622 hyper CortVI_striatum ZHH tvolume DXSSD 3.4075568 0.0008069 hyper CortVI_thalamus CMH pvertex DXSSD 2.6853600 0.0084461 hyper CortVI_thalamus COBRE pvertex DXSSD 3.6812734 0.0006306 hyper CortVI_thalamus ds000030 pvertex DXSSD 2.2409145 0.0289439 hyper CortVI_thalamus ZHH pvertex DXSSD 4.2162657 0.0000391 hyper CortVI_thalamus CMH tvertex DXSSD 3.6256455 0.0004500 hyper CortVI_thalamus COBRE tvertex DXSSD 3.4204297 0.0013599 hyper CortVI_thalamus ds000030 tvertex DXSSD 1.9176961 0.0601650 hyper CortVI_thalamus ZHH tvertex DXSSD 4.5426685 0.0000101 hyper CortVI_thalamus CMH tvolume DXSSD 3.1809944 0.0019398 hyper CortVI_thalamus COBRE tvolume DXSSD 3.3324263 0.0017522 hyper CortVI_thalamus ds000030 tvolume DXSSD 1.8220013 0.0737026 hyper CortVI_thalamus ZHH tvolume DXSSD 3.5645743 0.0004656 hypo cerebellum_striatum CMH pvertex DXSSD -3.5999616 0.0004913 hypo cerebellum_striatum COBRE pvertex DXSSD -1.8077813 0.0774795 hypo cerebellum_striatum ds000030 pvertex DXSSD -2.9621033 0.0044498 hypo cerebellum_striatum ZHH pvertex DXSSD -3.3963618 0.0008385 hypo cerebellum_striatum CMH tvertex DXSSD -3.5999616 0.0004913 hypo cerebellum_striatum COBRE tvertex DXSSD -1.8077813 0.0774795 hypo cerebellum_striatum ds000030 tvertex DXSSD -2.9621033 0.0044498 hypo cerebellum_striatum ZHH tvertex DXSSD -3.3963618 0.0008385 hypo cerebellum_striatum CMH tvolume DXSSD -3.5999616 0.0004913 hypo cerebellum_striatum COBRE tvolume DXSSD -1.8077813 0.0774795 hypo cerebellum_striatum ds000030 tvolume DXSSD -2.9621033 0.0044498 hypo cerebellum_striatum ZHH tvolume DXSSD -3.3963618 0.0008385 hypo cerebellum_thalamus CMH pvertex DXSSD -4.6015074 0.0000120 hypo cerebellum_thalamus COBRE pvertex DXSSD -2.6812577 0.0102866 hypo cerebellum_thalamus ds000030 pvertex DXSSD -4.7403172 0.0000147 hypo cerebellum_thalamus ZHH pvertex DXSSD -4.5891934 0.0000083 hypo cerebellum_thalamus CMH tvertex DXSSD -4.6015074 0.0000120 hypo cerebellum_thalamus COBRE tvertex DXSSD -2.6812577 0.0102866 hypo cerebellum_thalamus ds000030 tvertex DXSSD -4.7403172 0.0000147 hypo cerebellum_thalamus ZHH tvertex DXSSD -4.5891934 0.0000083 hypo cerebellum_thalamus CMH tvolume DXSSD -4.6015074 0.0000120 hypo cerebellum_thalamus COBRE tvolume DXSSD -2.6812577 0.0102866 hypo cerebellum_thalamus ds000030 tvolume DXSSD -4.7403172 0.0000147 hypo cerebellum_thalamus ZHH tvolume DXSSD -4.5891934 0.0000083 hypo CortDM_CortDA CMH pvertex DXSSD -2.2385297 0.0273380 hypo CortDM_CortDA COBRE pvertex DXSSD -1.1462114 0.2579032 hypo CortDM_CortDA ds000030 pvertex DXSSD -2.5832313 0.0123780 hypo CortDM_CortDA ZHH pvertex DXSSD -4.4924489 0.0000125 hypo CortDM_CortDA CMH tvertex DXSSD -3.7948583 0.0002497 hypo CortDM_CortDA COBRE tvertex DXSSD -1.6071827 0.1151678 hypo CortDM_CortDA ds000030 tvertex DXSSD -2.8753738 0.0056652 hypo CortDM_CortDA ZHH tvertex DXSSD -4.1312970 0.0000549 hypo CortFP_cerebellum CMH pvertex DXSSD -3.0274325 0.0031164 hypo CortFP_cerebellum COBRE pvertex DXSSD -2.4144515 0.0199847 hypo CortFP_cerebellum ds000030 pvertex DXSSD -2.2988879 0.0251978 hypo CortFP_cerebellum ZHH pvertex DXSSD -3.4484459 0.0007005 hypo CortFP_cerebellum CMH tvertex DXSSD -3.2782075 0.0014250 hypo CortFP_cerebellum COBRE tvertex DXSSD -1.8266465 0.0745419 hypo CortFP_cerebellum ds000030 tvertex DXSSD -3.9203669 0.0002397 hypo CortFP_cerebellum ZHH tvertex DXSSD -4.3649517 0.0000213 hypo CortFP_cerebellum CMH tvolume DXSSD -3.7529968 0.0002893 hypo CortFP_cerebellum COBRE tvolume DXSSD -1.0983332 0.2780330 hypo CortFP_cerebellum ds000030 tvolume DXSSD -2.1921521 0.0324673 hypo CortFP_cerebellum ZHH tvolume DXSSD -3.9193496 0.0001256 hypo CortVA_striatum CMH pvertex DXSSD -1.5934447 0.1141247 hypo CortVA_striatum COBRE pvertex DXSSD -2.5633210 0.0138624 hypo CortVA_striatum ds000030 pvertex DXSSD -0.5908363 0.5569657 hypo CortVA_striatum ZHH pvertex DXSSD -3.5838948 0.0004345 hypo CortVA_striatum CMH tvertex DXSSD -1.8999148 0.0602411 hypo CortVA_striatum COBRE tvertex DXSSD -1.5178655 0.1362013 hypo CortVA_striatum ds000030 tvertex DXSSD -0.5884030 0.5585863 hypo CortVA_striatum ZHH tvertex DXSSD -4.2883953 0.0000292 hypo CortVA_striatum CMH tvolume DXSSD -2.2259698 0.0281950 hypo CortVA_striatum COBRE tvolume DXSSD -1.2274397 0.2261841 hypo CortVA_striatum ds000030 tvolume DXSSD -0.7110836 0.4799323 hypo CortVA_striatum ZHH tvolume DXSSD -4.0229863 0.0000842 hypo thalamus_striatum CMH pvertex DXSSD -1.6761060 0.0967504 hypo thalamus_striatum COBRE pvertex DXSSD -1.7888432 0.0805259 hypo thalamus_striatum ds000030 pvertex DXSSD -3.8062880 0.0003469 hypo thalamus_striatum ZHH pvertex DXSSD -4.7618743 0.0000039 hypo thalamus_striatum CMH tvertex DXSSD -1.6761060 0.0967504 hypo thalamus_striatum COBRE tvertex DXSSD -1.7888432 0.0805259 hypo thalamus_striatum ds000030 tvertex DXSSD -3.8062880 0.0003469 hypo thalamus_striatum ZHH tvertex DXSSD -4.7618743 0.0000039 hypo thalamus_striatum CMH tvolume DXSSD -1.6761060 0.0967504 hypo thalamus_striatum COBRE tvolume DXSSD -1.7888432 0.0805259 hypo thalamus_striatum ds000030 tvolume DXSSD -3.8062880 0.0003469 hypo thalamus_striatum ZHH tvolume DXSSD -4.7618743 0.0000039 FC_gscores_lmfitbySite %&gt;% mutate(node_class = if_else(str_detect(edge_group,&#39;_Cort&#39;), &quot;Within_Cortical&quot;, &quot;Subcortical_to&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;, node_class == &quot;Subcortical_to&quot;) %&gt;% ggplot(aes(y = abs(statistic), x = rev(vertex_type), color = effect_direction)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~Site) FC_gscores_lmfitbySite_mFC &lt;- all_subject_FC_weights %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% ungroup() %&gt;% group_by(effect_direction, edge_group, vertex_type, Site) %&gt;% do(tidy(lm(mFC_score ~ DX + Age_pt + Sex + fd_mean_pt,.))) FC_gscores_lmfitbySite_mFC %&gt;% select(effect_direction, edge_group, Site, vertex_type, term, statistic, p.value) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% knitr::kable() effect_direction edge_group Site vertex_type term statistic p.value hyper CortDA_CortSM CMH pvertex DXSSD 3.4307831 0.0008673 hyper CortDA_CortSM COBRE pvertex DXSSD 1.4297202 0.1598599 hyper CortDA_CortSM ds000030 pvertex DXSSD 0.8898616 0.3772807 hyper CortDA_CortSM ZHH pvertex DXSSD 4.8705102 0.0000024 hyper CortDA_CortSM CMH tvertex DXSSD 4.0865458 0.0000869 hyper CortDA_CortSM COBRE tvertex DXSSD 0.4606818 0.6472958 hyper CortDA_CortSM ds000030 tvertex DXSSD 1.3658362 0.1773557 hyper CortDA_CortSM ZHH tvertex DXSSD 5.9353567 0.0000000 hyper CortDA_CortSM CMH tvolume DXSSD 2.1163903 0.0367212 hyper CortDA_CortSM COBRE tvolume DXSSD 1.1158132 0.2705591 hyper CortDA_CortSM ds000030 tvolume DXSSD 1.8909728 0.0637141 hyper CortDA_CortSM ZHH tvolume DXSSD 4.6916826 0.0000053 hyper CortDA_thalamus CMH pvertex DXSSD 3.2795216 0.0014191 hyper CortDA_thalamus COBRE pvertex DXSSD 1.5761312 0.1221592 hyper CortDA_thalamus ds000030 pvertex DXSSD 1.3630007 0.1782426 hyper CortDA_thalamus ZHH pvertex DXSSD 3.2095767 0.0015713 hyper CortDA_thalamus CMH tvertex DXSSD 3.4832581 0.0007285 hyper CortDA_thalamus COBRE tvertex DXSSD 2.9730426 0.0047690 hyper CortDA_thalamus ds000030 tvertex DXSSD 1.8303839 0.0724224 hyper CortDA_thalamus ZHH tvertex DXSSD 4.5539688 0.0000096 hyper CortDA_thalamus CMH tvolume DXSSD 4.4753669 0.0000197 hyper CortDA_thalamus COBRE tvolume DXSSD 2.9252450 0.0054245 hyper CortDA_thalamus ds000030 tvolume DXSSD 2.0558319 0.0443891 hyper CortDA_thalamus ZHH tvolume DXSSD 3.3514208 0.0009777 hyper CortFP_CortSM CMH pvertex DXSSD 3.2950360 0.0013501 hyper CortFP_CortSM COBRE pvertex DXSSD 2.1243536 0.0392965 hyper CortFP_CortSM ds000030 pvertex DXSSD 1.3545793 0.1808968 hyper CortFP_CortSM ZHH pvertex DXSSD 3.3034184 0.0011500 hyper CortFP_CortSM CMH tvertex DXSSD 3.0923611 0.0025554 hyper CortFP_CortSM COBRE tvertex DXSSD 2.4394421 0.0188107 hyper CortFP_CortSM ds000030 tvertex DXSSD 2.1964282 0.0321439 hyper CortFP_CortSM ZHH tvertex DXSSD 3.8966111 0.0001370 hyper CortFP_CortSM CMH tvolume DXSSD 2.5811025 0.0112563 hyper CortFP_CortSM COBRE tvolume DXSSD 1.0987144 0.2778685 hyper CortFP_CortSM ds000030 tvolume DXSSD 3.3993770 0.0012388 hyper CortFP_CortSM ZHH tvolume DXSSD 3.3354669 0.0010321 hyper CortSM_cerebellum CMH pvertex DXSSD 2.8419054 0.0054071 hyper CortSM_cerebellum COBRE pvertex DXSSD 2.6414208 0.0113866 hyper CortSM_cerebellum ds000030 pvertex DXSSD 2.0966782 0.0404710 hyper CortSM_cerebellum ZHH pvertex DXSSD 3.4324427 0.0007404 hyper CortSM_cerebellum CMH tvertex DXSSD 3.1435967 0.0021804 hyper CortSM_cerebellum COBRE tvertex DXSSD 3.5036518 0.0010671 hyper CortSM_cerebellum ds000030 tvertex DXSSD 2.6616182 0.0100861 hyper CortSM_cerebellum ZHH tvertex DXSSD 3.8410350 0.0001690 hyper CortSM_cerebellum CMH tvolume DXSSD 2.7356209 0.0073333 hyper CortSM_cerebellum COBRE tvolume DXSSD 2.2608830 0.0287636 hyper CortSM_cerebellum ds000030 tvolume DXSSD 2.4384035 0.0178917 hyper CortSM_cerebellum ZHH tvolume DXSSD 4.1944266 0.0000427 hyper CortSM_thalamus CMH pvertex DXSSD 3.2567289 0.0015264 hyper CortSM_thalamus COBRE pvertex DXSSD 4.0523578 0.0002032 hyper CortSM_thalamus ds000030 pvertex DXSSD 2.2998461 0.0251397 hyper CortSM_thalamus ZHH pvertex DXSSD 2.6609259 0.0084891 hyper CortSM_thalamus CMH tvertex DXSSD 3.7932260 0.0002511 hyper CortSM_thalamus COBRE tvertex DXSSD 5.0398104 0.0000085 hyper CortSM_thalamus ds000030 tvertex DXSSD 2.7801334 0.0073495 hyper CortSM_thalamus ZHH tvertex DXSSD 2.8791553 0.0044654 hyper CortSM_thalamus CMH tvolume DXSSD 3.8139460 0.0002334 hyper CortSM_thalamus COBRE tvolume DXSSD 3.5671379 0.0008854 hyper CortSM_thalamus ds000030 tvolume DXSSD 3.3706408 0.0013514 hyper CortSM_thalamus ZHH tvolume DXSSD 3.0662577 0.0024979 hyper CortVA_CortDA CMH pvertex DXSSD 1.1942827 0.2351105 hyper CortVA_CortDA COBRE pvertex DXSSD 1.4891082 0.1435922 hyper CortVA_CortDA ds000030 pvertex DXSSD 4.6235019 0.0000221 hyper CortVA_CortDA ZHH pvertex DXSSD 4.7363092 0.0000044 hyper CortVA_CortDA CMH tvertex DXSSD 2.4500596 0.0159692 hyper CortVA_CortDA COBRE tvertex DXSSD 1.6777851 0.1004796 hyper CortVA_CortDA ds000030 tvertex DXSSD 2.6399326 0.0106779 hyper CortVA_CortDA ZHH tvertex DXSSD 6.6943833 0.0000000 hyper CortVA_CortDA CMH tvolume DXSSD 1.8291741 0.0702667 hyper CortVA_CortDA COBRE tvolume DXSSD 1.4308434 0.1595394 hyper CortVA_CortDA ds000030 tvolume DXSSD 2.0456072 0.0454198 hyper CortVA_CortDA ZHH tvolume DXSSD 5.6784223 0.0000001 hyper CortVA_thalamus CMH pvertex DXSSD 2.3485462 0.0207562 hyper CortVA_thalamus COBRE pvertex DXSSD 0.6636740 0.5103617 hyper CortVA_thalamus ds000030 pvertex DXSSD 1.8543685 0.0688623 hyper CortVA_thalamus ZHH pvertex DXSSD 3.2957164 0.0011801 hyper CortVA_thalamus CMH tvertex DXSSD 3.1460918 0.0021636 hyper CortVA_thalamus COBRE tvertex DXSSD 1.2630874 0.2132102 hyper CortVA_thalamus ds000030 tvertex DXSSD 1.3294243 0.1890044 hyper CortVA_thalamus ZHH tvertex DXSSD 4.9802654 0.0000015 hyper CortVA_thalamus CMH tvolume DXSSD 2.5225142 0.0131820 hyper CortVA_thalamus COBRE tvolume DXSSD 2.3386630 0.0239600 hyper CortVA_thalamus ds000030 tvolume DXSSD 2.6567961 0.0102151 hyper CortVA_thalamus ZHH tvolume DXSSD 5.0876035 0.0000009 hyper CortVI_cerebellum CMH pvertex DXSSD 2.4981919 0.0140648 hyper CortVI_cerebellum COBRE pvertex DXSSD 2.1699284 0.0354538 hyper CortVI_cerebellum ds000030 pvertex DXSSD 2.1798312 0.0334152 hyper CortVI_cerebellum ZHH pvertex DXSSD 3.3174170 0.0010970 hyper CortVI_cerebellum CMH tvertex DXSSD 3.0308620 0.0030841 hyper CortVI_cerebellum COBRE tvertex DXSSD 3.1381458 0.0030319 hyper CortVI_cerebellum ds000030 tvertex DXSSD 1.1098774 0.2717123 hyper CortVI_cerebellum ZHH tvertex DXSSD 3.4115696 0.0007958 hyper CortVI_cerebellum CMH tvolume DXSSD 2.4663823 0.0152990 hyper CortVI_cerebellum COBRE tvolume DXSSD 2.8672746 0.0063321 hyper CortVI_cerebellum ds000030 tvolume DXSSD 0.9070202 0.3682147 hyper CortVI_cerebellum ZHH tvolume DXSSD 3.2739764 0.0012693 hyper CortVI_striatum CMH pvertex DXSSD 2.5667714 0.0117023 hyper CortVI_striatum COBRE pvertex DXSSD 2.1634478 0.0359792 hyper CortVI_striatum ds000030 pvertex DXSSD 0.0924687 0.9266499 hyper CortVI_striatum ZHH pvertex DXSSD 3.4364916 0.0007301 hyper CortVI_striatum CMH tvertex DXSSD 3.2722167 0.0014527 hyper CortVI_striatum COBRE tvertex DXSSD 1.5308306 0.1329700 hyper CortVI_striatum ds000030 tvertex DXSSD -0.4409396 0.6609247 hyper CortVI_striatum ZHH tvertex DXSSD 3.7933874 0.0002021 hyper CortVI_striatum CMH tvolume DXSSD 2.7862641 0.0063486 hyper CortVI_striatum COBRE tvolume DXSSD 2.4982614 0.0162900 hyper CortVI_striatum ds000030 tvolume DXSSD 0.1752642 0.8614931 hyper CortVI_striatum ZHH tvolume DXSSD 3.4117737 0.0007952 hyper CortVI_thalamus CMH pvertex DXSSD 2.6740456 0.0087168 hyper CortVI_thalamus COBRE pvertex DXSSD 3.6308895 0.0007329 hyper CortVI_thalamus ds000030 pvertex DXSSD 2.0990152 0.0402563 hyper CortVI_thalamus ZHH pvertex DXSSD 4.0590252 0.0000731 hyper CortVI_thalamus CMH tvertex DXSSD 3.6254324 0.0004503 hyper CortVI_thalamus COBRE tvertex DXSSD 3.3566622 0.0016346 hyper CortVI_thalamus ds000030 tvertex DXSSD 1.7281902 0.0893685 hyper CortVI_thalamus ZHH tvertex DXSSD 4.4057593 0.0000180 hyper CortVI_thalamus CMH tvolume DXSSD 3.1768236 0.0019654 hyper CortVI_thalamus COBRE tvolume DXSSD 3.3028490 0.0019067 hyper CortVI_thalamus ds000030 tvolume DXSSD 1.7634136 0.0831903 hyper CortVI_thalamus ZHH tvolume DXSSD 3.4954138 0.0005945 hypo cerebellum_striatum CMH pvertex DXSSD -3.5490765 0.0005840 hypo cerebellum_striatum COBRE pvertex DXSSD -1.7904138 0.0802695 hypo cerebellum_striatum ds000030 pvertex DXSSD -3.0064730 0.0039263 hypo cerebellum_striatum ZHH pvertex DXSSD -3.3182648 0.0010939 hypo cerebellum_striatum CMH tvertex DXSSD -3.5490765 0.0005840 hypo cerebellum_striatum COBRE tvertex DXSSD -1.7904138 0.0802695 hypo cerebellum_striatum ds000030 tvertex DXSSD -3.0064730 0.0039263 hypo cerebellum_striatum ZHH tvertex DXSSD -3.3182648 0.0010939 hypo cerebellum_striatum CMH tvolume DXSSD -3.5490765 0.0005840 hypo cerebellum_striatum COBRE tvolume DXSSD -1.7904138 0.0802695 hypo cerebellum_striatum ds000030 tvolume DXSSD -3.0064730 0.0039263 hypo cerebellum_striatum ZHH tvolume DXSSD -3.3182648 0.0010939 hypo cerebellum_thalamus CMH pvertex DXSSD -4.4808819 0.0000193 hypo cerebellum_thalamus COBRE pvertex DXSSD -2.6415968 0.0113815 hypo cerebellum_thalamus ds000030 pvertex DXSSD -4.7561742 0.0000139 hypo cerebellum_thalamus ZHH pvertex DXSSD -4.3983000 0.0000185 hypo cerebellum_thalamus CMH tvertex DXSSD -4.4808819 0.0000193 hypo cerebellum_thalamus COBRE tvertex DXSSD -2.6415968 0.0113815 hypo cerebellum_thalamus ds000030 tvertex DXSSD -4.7561742 0.0000139 hypo cerebellum_thalamus ZHH tvertex DXSSD -4.3983000 0.0000185 hypo cerebellum_thalamus CMH tvolume DXSSD -4.4808819 0.0000193 hypo cerebellum_thalamus COBRE tvolume DXSSD -2.6415968 0.0113815 hypo cerebellum_thalamus ds000030 tvolume DXSSD -4.7561742 0.0000139 hypo cerebellum_thalamus ZHH tvolume DXSSD -4.3983000 0.0000185 hypo CortDM_CortDA CMH pvertex DXSSD -2.2907244 0.0240165 hypo CortDM_CortDA COBRE pvertex DXSSD -1.1158494 0.2705437 hypo CortDM_CortDA ds000030 pvertex DXSSD -2.5383652 0.0138937 hypo CortDM_CortDA ZHH pvertex DXSSD -4.4192219 0.0000170 hypo CortDM_CortDA CMH tvertex DXSSD -3.8260644 0.0002235 hypo CortDM_CortDA COBRE tvertex DXSSD -1.5936059 0.1181836 hypo CortDM_CortDA ds000030 tvertex DXSSD -2.7716795 0.0075194 hypo CortDM_CortDA ZHH tvertex DXSSD -4.1358070 0.0000540 hypo CortFP_cerebellum CMH pvertex DXSSD -3.0094475 0.0032909 hypo CortFP_cerebellum COBRE pvertex DXSSD -2.3914417 0.0211237 hypo CortFP_cerebellum ds000030 pvertex DXSSD -2.3131727 0.0243437 hypo CortFP_cerebellum ZHH pvertex DXSSD -3.4109787 0.0007974 hypo CortFP_cerebellum CMH tvertex DXSSD -3.2831654 0.0014026 hypo CortFP_cerebellum COBRE tvertex DXSSD -1.8163214 0.0761378 hypo CortFP_cerebellum ds000030 tvertex DXSSD -3.8897813 0.0002648 hypo CortFP_cerebellum ZHH tvertex DXSSD -4.3185329 0.0000258 hypo CortFP_cerebellum CMH tvolume DXSSD -3.6847034 0.0003671 hypo CortFP_cerebellum COBRE tvolume DXSSD -1.0513869 0.2988212 hypo CortFP_cerebellum ds000030 tvolume DXSSD -2.1598294 0.0350058 hypo CortFP_cerebellum ZHH tvolume DXSSD -3.8614994 0.0001565 hypo CortVA_striatum CMH pvertex DXSSD -1.6023847 0.1121330 hypo CortVA_striatum COBRE pvertex DXSSD -2.5671704 0.0137297 hypo CortVA_striatum ds000030 pvertex DXSSD -0.5883299 0.5586350 hypo CortVA_striatum ZHH pvertex DXSSD -3.5439397 0.0005010 hypo CortVA_striatum CMH tvertex DXSSD -1.8872077 0.0619478 hypo CortVA_striatum COBRE tvertex DXSSD -1.5217461 0.1352276 hypo CortVA_striatum ds000030 tvertex DXSSD -0.5752787 0.5673669 hypo CortVA_striatum ZHH tvertex DXSSD -4.2976545 0.0000281 hypo CortVA_striatum CMH tvolume DXSSD -2.2087906 0.0294051 hypo CortVA_striatum COBRE tvolume DXSSD -1.2424386 0.2206559 hypo CortVA_striatum ds000030 tvolume DXSSD -0.6187080 0.5385735 hypo CortVA_striatum ZHH tvolume DXSSD -4.0171254 0.0000861 hypo thalamus_striatum CMH pvertex DXSSD -1.6019709 0.1122246 hypo thalamus_striatum COBRE pvertex DXSSD -1.7722924 0.0832701 hypo thalamus_striatum ds000030 pvertex DXSSD -3.7438324 0.0004237 hypo thalamus_striatum ZHH pvertex DXSSD -4.7647254 0.0000039 hypo thalamus_striatum CMH tvertex DXSSD -1.6019709 0.1122246 hypo thalamus_striatum COBRE tvertex DXSSD -1.7722924 0.0832701 hypo thalamus_striatum ds000030 tvertex DXSSD -3.7438324 0.0004237 hypo thalamus_striatum ZHH tvertex DXSSD -4.7647254 0.0000039 hypo thalamus_striatum CMH tvolume DXSSD -1.6019709 0.1122246 hypo thalamus_striatum COBRE tvolume DXSSD -1.7722924 0.0832701 hypo thalamus_striatum ds000030 tvolume DXSSD -3.7438324 0.0004237 hypo thalamus_striatum ZHH tvolume DXSSD -4.7647254 0.0000039 FC_gscores_lmfitbySite_mFC %&gt;% mutate(node_class = if_else(str_detect(edge_group,&#39;_Cort&#39;), &quot;Within_Cortical&quot;, &quot;Subcortical_to&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;, node_class == &quot;Subcortical_to&quot;) %&gt;% ggplot(aes(y = abs(statistic), x = rev(vertex_type), color = effect_direction)) + geom_point() + geom_line(aes(group = edge_group)) + facet_wrap(~Site) wFC_corrs &lt;- all_subject_FC_weights %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) knitr::opts_chunk$set(dev = &quot;png&quot;, dev.args = list(type = &quot;cairo-png&quot;)) library(tidyverse) ## ── Attaching packages ──────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.1 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ─────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(here) ## here() starts at /mnt/tigrlab/projects/edickie/code/SZ_PINT library(broom) knitr::opts_chunk$set(dev = &quot;png&quot;, dev.args = list(type = &quot;cairo-png&quot;)) Note: to self (as of April - the one thing that is coming out is wtar wiht VI to thalamus) 10.1 The paths to data # These functions are for reading timeseries files source(here(&#39;code/R/settings_helpers.R&#39;)) #source(here(&#39;code/R/file_reading_helpers.R&#39;)) pheno &lt;- read_pheno_file()%&gt;% drop_na(DX) ## Parsed with column specification: ## cols( ## .default = col_double(), ## dataset = col_character(), ## subject_id = col_character(), ## session_id = col_character(), ## task_id = col_character(), ## run_id = col_character(), ## acq_id = col_character(), ## subject = col_character(), ## session = col_character(), ## DX = col_character(), ## Site = col_character(), ## filename = col_character(), ## cmh_session_id = col_character(), ## Sex = col_character(), ## Scanner = col_character(), ## isFEP = col_character(), ## zhh_chosen_sess = col_logical(), ## ghost_NoGhost = col_character(), ## in_matched_sample = col_logical() ## ) ## See spec(...) for full column specifications. YeoNet_colours &lt;- define_Yeo7_colours() Yeo7_2011_80verts &lt;- read_Yeo72011_template() pheno_extended &lt;- read_csv(here(&quot;data/processed/pheno/qa_pheno_compiled_2020_mar02.csv&quot;)) %&gt;% mutate(subject = str_c(&quot;sub-&quot;,sub_id)) ## Warning: Missing column names filled in: &#39;X1&#39; [1] ## Parsed with column specification: ## cols( ## X1 = col_double(), ## sub_id = col_character(), ## SessNo = col_double(), ## dataset = col_character(), ## sex = col_character(), ## dx = col_character(), ## age = col_double(), ## Site = col_character(), ## isFEP = col_character(), ## panss_total_calc = col_double(), ## panss_positive_total_calc = col_double(), ## panss_negative_total_calc = col_double(), ## panss_general_total_calc = col_double(), ## sans_G_total = col_double(), ## wtar_raw = col_double(), ## wtar_std = col_double(), ## merge_sub_id = col_character(), ## Edu = col_double() ## ) weighted_subject_scores &lt;- read_csv(here(&quot;data/processed/mri/all_clinicalplusqa_group/weighted_subject_FC_scores/SSD4cohorts_DXweighted_subject_scores.csv&quot;)) ## Parsed with column specification: ## cols( ## vertex_type = col_character(), ## subject = col_character(), ## dataset = col_character(), ## effect_direction = col_character(), ## edge_group = col_character(), ## wFC_score = col_double(), ## mFC_score = col_double() ## ) weighted_subject_scores &lt;- weighted_subject_scores%&gt;% group_by(vertex_type, edge_group, effect_direction) %&gt;% mutate(upper_wFC = mean(wFC_score) + 3*sd(wFC_score), lower_wFC = mean(wFC_score) - 3*sd(wFC_score), upper_out = upper_wFC &lt; wFC_score, lower_out = lower_wFC &gt; wFC_score, wFC_score_cliped = if_else(upper_out, upper_wFC, wFC_score), wFC_score_cliped = if_else(lower_out, lower_wFC, wFC_score_cliped)) # facet_grid(edge_group ~ vertex_type, scales = &quot;free&quot;) inner_join(pheno, pheno_extended, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% select(subject, dataset) %&gt;% distinct() ## # A tibble: 496 x 2 ## subject dataset ## &lt;chr&gt; &lt;chr&gt; ## 1 sub-10159 ds000030_R1.0.5 ## 2 sub-10206 ds000030_R1.0.5 ## 3 sub-10217 ds000030_R1.0.5 ## 4 sub-10225 ds000030_R1.0.5 ## 5 sub-10227 ds000030_R1.0.5 ## 6 sub-10228 ds000030_R1.0.5 ## 7 sub-10235 ds000030_R1.0.5 ## 8 sub-10249 ds000030_R1.0.5 ## 9 sub-10273 ds000030_R1.0.5 ## 10 sub-10274 ds000030_R1.0.5 ## # … with 486 more rows pheno_extended %&gt;% count(sub_id, dataset) %&gt;% filter(n &gt; 1) ## # A tibble: 0 x 3 ## # … with 3 variables: sub_id &lt;chr&gt;, dataset &lt;chr&gt;, n &lt;int&gt; pheno_extended %&gt;% names() ## [1] &quot;X1&quot; &quot;sub_id&quot; ## [3] &quot;SessNo&quot; &quot;dataset&quot; ## [5] &quot;sex&quot; &quot;dx&quot; ## [7] &quot;age&quot; &quot;Site&quot; ## [9] &quot;isFEP&quot; &quot;panss_total_calc&quot; ## [11] &quot;panss_positive_total_calc&quot; &quot;panss_negative_total_calc&quot; ## [13] &quot;panss_general_total_calc&quot; &quot;sans_G_total&quot; ## [15] &quot;wtar_raw&quot; &quot;wtar_std&quot; ## [17] &quot;merge_sub_id&quot; &quot;Edu&quot; ## [19] &quot;subject&quot; pheno_extended %&gt;% gather(clinical_measure, clinical_score, starts_with(&quot;panss&quot;), starts_with(&quot;sans&quot;), starts_with(&quot;wtar&quot;), &quot;Edu&quot;) %&gt;% group_by(Site, dx, clinical_measure) %&gt;% summarise(n = sum(!is.na(clinical_score))) %&gt;% spread(clinical_measure, n) ## `summarise()` regrouping output by &#39;Site&#39;, &#39;dx&#39; (override with `.groups` argument) ## # A tibble: 8 x 10 ## # Groups: Site, dx [8] ## Site dx Edu panss_general_t… panss_negative_… panss_positive_… ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 CMH CTRL 41 6 6 6 ## 2 CMH SSD 66 16 16 16 ## 3 COBRE CTRL 28 0 0 0 ## 4 COBRE SSD 16 20 21 22 ## 5 ds00… CTRL 107 0 0 0 ## 6 ds00… SSD 31 0 0 0 ## 7 ZHH CTRL 93 0 0 0 ## 8 ZHH SSD 46 0 0 0 ## # … with 4 more variables: panss_total_calc &lt;int&gt;, sans_G_total &lt;int&gt;, ## # wtar_raw &lt;int&gt;, wtar_std &lt;int&gt; summary(pheno_extended$sans_G_total) ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 0.000 5.000 7.000 7.237 9.250 15.000 420 with_wFC1 &lt;- weighted_subject_scores %&gt;% inner_join(pheno_extended, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% drop_na(dx) wFC_corrs &lt;- with_wFC1 %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;pvertex&quot;, dx == &quot;SSD&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) wFC_corrs &lt;- with_wFC1 %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;pvertex&quot;, dx == &quot;CTRL&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) wFC_corrs &lt;- with_wFC1 %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;pvertex&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) wFC_corrs &lt;- with_wFC1 %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;tvertex&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) wFC_corrs &lt;- with_wFC1 %&gt;% ungroup() %&gt;% filter(vertex_type == &quot;tvolume&quot;) %&gt;% select(subject, dataset, edge_group, wFC_score) %&gt;% spread(edge_group, wFC_score) %&gt;% select(-subject, -dataset) %&gt;% cor(.) heatmap(abs(wFC_corrs)) library(cowplot) ## ## ******************************************************** ## Note: As of version 1.0.0, cowplot does not change the ## default ggplot2 theme anymore. To recover the previous ## behavior, execute: ## theme_set(theme_cowplot()) ## ******************************************************** # Marginal densities along x axis plot_greyred_scatter_elipsed &lt;- function(df, x, y, color) { #the tidy eval ness xvar &lt;- enquo(x) yvar &lt;- enquo(y) colorvar &lt;- enquo(color) # make the main scatte bit using above main_scatter &lt;- ggplot(data = df, aes(x = !!xvar, y = !!yvar, color = !!colorvar)) + geom_point(alpha = 0.7, size = 1) + geom_smooth(method = &quot;lm&quot;) + #stat_ellipse() + theme_bw() + scale_color_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) xdens &lt;- axis_canvas(main_scatter, axis = &quot;x&quot;)+ geom_density(data = df, aes(x = !!xvar, fill = !!colorvar), alpha = 0.5, size = 0.2) + scale_fill_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) ydens &lt;- axis_canvas(main_scatter, axis = &quot;y&quot;, coord_flip = TRUE)+ geom_density(data = df, aes(x = !!yvar, fill = !!colorvar), alpha = 0.5, size = 0.2) + scale_fill_manual(values = c(&quot;grey20&quot;,&quot;red&quot;)) + coord_flip() #putting the peices together p1 &lt;- insert_xaxis_grob(main_scatter, xdens, grid::unit(.2, &quot;null&quot;), position = &quot;top&quot;) p2&lt;- insert_yaxis_grob(p1, ydens, grid::unit(.2, &quot;null&quot;), position = &quot;right&quot;) return(p2) } with_wFC1 %&gt;% ungroup() %&gt;% select(subject, dataset, dx) %&gt;% distinct() %&gt;% count(dx) ## # A tibble: 2 x 2 ## dx n ## &lt;chr&gt; &lt;int&gt; ## 1 CTRL 203 ## 2 SSD 203 plt &lt;- with_wFC1 %&gt;% ungroup() %&gt;% select(subject, dataset, dx, vertex_type, edge_group, wFC_score) %&gt;% filter(vertex_type==&quot;pvertex&quot;) %&gt;% spread(edge_group, wFC_score) %&gt;% plot_greyred_scatter_elipsed(subcort_to_VI, subcort_to_FP, dx) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ggdraw(plt) plt &lt;- with_wFC1 %&gt;% ungroup() %&gt;% select(subject, dataset, dx, vertex_type, edge_group, wFC_score) %&gt;% filter(vertex_type==&quot;tvertex&quot;) %&gt;% spread(edge_group, wFC_score) %&gt;% plot_greyred_scatter_elipsed(subcort_to_VI, subcort_to_FP, dx) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ggdraw(plt) plt &lt;- with_wFC1 %&gt;% ungroup() %&gt;% select(subject, dataset, dx, vertex_type, edge_group, wFC_score) %&gt;% filter(vertex_type==&quot;tvolume&quot;) %&gt;% spread(edge_group, wFC_score) %&gt;% plot_greyred_scatter_elipsed(subcort_to_VI, subcort_to_FP, dx) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ## `geom_smooth()` using formula &#39;y ~ x&#39; ggdraw(plt) with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;, wtar_std &lt; 900) %&gt;% filter(edge_group %in% c(&quot;subcort_to_VI&quot;)) %&gt;% ggplot(aes(x = wtar_std, y = wFC_score, color = Site)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + scale_color_manual(values = c(&quot;tomato3&quot;, &quot;orangered3&quot;)) + facet_grid(edge_group~vertex_type, scales = &quot;free_x&quot;) + theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;, wtar_std &lt; 900) %&gt;% filter(edge_group %in% c(&quot;subcort_to_FP&quot;)) %&gt;% ggplot(aes(x = wtar_std, y = wFC_score, color = Site)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + scale_color_manual(values = c(&quot;tomato3&quot;, &quot;orangered3&quot;)) + facet_grid(edge_group~vertex_type, scales = &quot;free_x&quot;) + theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;, wtar_std &lt; 900) %&gt;% filter(edge_group %in% c(&quot;subcort_to_DA&quot;)) %&gt;% ggplot(aes(x = wtar_std, y = wFC_score_cliped, color = Site)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_grid(edge_group~vertex_type, scales = &quot;free_x&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;) %&gt;% filter(edge_group %in% c(&quot;subcort_to_DA&quot;)) %&gt;% ggplot(aes(x = panss_total_calc, y = wFC_score, color = Site)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_grid(edge_group~vertex_type, scales = &quot;free_x&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## Warning: Removed 159 rows containing non-finite values (stat_smooth). ## Warning: Removed 159 rows containing missing values (geom_point). wf1_edgegroup_num &lt;- unique(with_wFC1$edge_group) %&gt;% length() wtar_panss_models_lm_glance &lt;- with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;) %&gt;% gather(clinical_measure, clinical_score, wtar_std, panss_total_calc) %&gt;% filter(clinical_score &lt; 900) %&gt;% group_by(edge_group, effect_direction, vertex_type, clinical_measure) %&gt;% do(glance(lm(wFC_score_cliped ~ clinical_score + Site, data = .))) wtar_panss_models_tidylm &lt;- with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;COBRE&quot;), dx == &quot;SSD&quot;) %&gt;% gather(clinical_measure, clinical_score, wtar_std, panss_total_calc) %&gt;% filter(clinical_score &lt; 900) %&gt;% group_by(edge_group, effect_direction, vertex_type, clinical_measure) %&gt;% do(tidy(lm(wFC_score_cliped ~ clinical_score + Site, data = .))) %&gt;% filter(term == &quot;clinical_score&quot;) %&gt;% mutate(p_bonf = p.value*wf1_edgegroup_num) wtar_panss_models_tidylm %&gt;% arrange(p.value) %&gt;% select(vertex_type, clinical_measure, edge_group, statistic, p.value, p_bonf) %&gt;% knitr::kable() ## Adding missing grouping variables: `effect_direction` effect_direction vertex_type clinical_measure edge_group statistic p.value p_bonf hyper tvertex wtar_std subcort_to_VI -3.1666703 0.0026030 0.0364423 hyper tvertex wtar_std cortVA_to_DA -2.7271116 0.0087387 0.1223415 hyper pvertex wtar_std subcort_to_DM 2.7247498 0.0087933 0.1231059 hyper tvolume wtar_std subcort_to_SM -2.7138753 0.0090488 0.1266826 hyper pvertex wtar_std subcort_to_VI -2.6713339 0.0101151 0.1416114 hyper pvertex wtar_std subcort_to_DA 2.6704410 0.0101387 0.1419414 hyper pvertex panss_total_calc subcort_to_DA -2.7194728 0.0103458 0.1448417 hyper tvertex wtar_std subcort_to_SM -2.3729272 0.0214552 0.3003727 hyper pvertex panss_total_calc subcort_to_VI 2.4033245 0.0220260 0.3083640 hyper pvertex panss_total_calc subcort_to_DM -2.2245533 0.0330643 0.4629003 hypo pvertex wtar_std subcort_to_FP 2.1834932 0.0336255 0.4707566 hyper tvertex panss_total_calc subcort_to_VI 2.1724716 0.0371039 0.5194548 hyper tvolume wtar_std subcort_to_VI -2.1309866 0.0379324 0.5310541 hyper tvolume panss_total_calc subcort_to_DA 2.0936723 0.0440523 0.6167321 hypo tvertex wtar_std subcort_to_FP 1.8638952 0.0680978 0.9533697 hypo tvolume wtar_std subcort_to_FP 1.8384031 0.0718299 1.0056182 hyper pvertex wtar_std cortVA_to_DA -1.8105945 0.0760963 1.0653481 hyper tvolume wtar_std subcort_to_DM 1.7720684 0.0823569 1.1529971 hypo tvertex panss_total_calc cortDM_to_VA 1.7005000 0.0984442 1.3782194 hyper tvolume panss_total_calc subcort_to_VI 1.6829983 0.1018147 1.4254057 hyper tvolume wtar_std cortFP_to_SM 1.5617584 0.1245295 1.7434125 hypo tvertex panss_total_calc subcort_to_FP 1.5318168 0.1350992 1.8913885 hyper pvertex panss_total_calc subcort_to_SM 1.5178764 0.1385684 1.9399580 hyper pvertex wtar_std subcort_to_SM -1.4834436 0.1441106 2.0175490 hyper tvolume panss_total_calc subcort_to_DM -1.4172511 0.1657824 2.3209532 hyper tvertex wtar_std subcort_to_DA 1.3467294 0.1840219 2.5763065 hyper tvertex panss_total_calc subcort_to_SM 1.3500186 0.1861977 2.6067679 hyper tvolume wtar_std subcort_to_DA -1.3216427 0.1921853 2.6905949 hypo tvertex wtar_std cortVI_to_VI 1.3077243 0.1968312 2.7556372 hypo tvertex wtar_std cortDM_to_VA 1.2841926 0.2048778 2.8682896 hypo pvertex wtar_std cerebullum_to_thalamus -1.2381911 0.2213147 3.0984060 hypo tvertex wtar_std cerebullum_to_thalamus -1.2381911 0.2213147 3.0984060 hypo tvolume wtar_std cerebullum_to_thalamus -1.2381911 0.2213147 3.0984060 hypo pvertex panss_total_calc subcort_to_FP 1.2290254 0.2277544 3.1885616 hyper tvertex panss_total_calc cortFP_to_SM 1.2251834 0.2291793 3.2085099 hypo pvertex panss_total_calc cerebullum_to_thalamus 1.2121707 0.2340546 3.2767646 hypo tvertex panss_total_calc cerebullum_to_thalamus 1.2121707 0.2340546 3.2767646 hypo tvolume panss_total_calc cerebullum_to_thalamus 1.2121707 0.2340546 3.2767646 hyper pvertex panss_total_calc cortFP_to_SM 1.1883428 0.2431805 3.4045265 hyper tvertex panss_total_calc subcort_to_DM -1.1601095 0.2543288 3.5606036 hyper tvertex wtar_std subcort_to_DM -1.0710948 0.2891696 4.0483740 hypo pvertex wtar_std cortDM_to_VA 1.0635149 0.2925583 4.0958166 hyper tvolume panss_total_calc cortFP_to_SM 1.0660013 0.2941605 4.1182467 hyper tvolume wtar_std cortDA_to_SM 1.0439642 0.3014252 4.2199533 hypo pvertex wtar_std cortVI_to_VI 1.0118550 0.3163840 4.4293763 hypo tvolume panss_total_calc cortVI_to_VI -0.9645574 0.3417822 4.7849505 hyper pvertex panss_total_calc cortDA_to_SM -0.9363104 0.3559154 4.9828156 hyper tvertex panss_total_calc subcort_to_DA -0.9195921 0.3644594 5.1024316 hypo tvertex wtar_std subcort_to_VA 0.8735671 0.3864489 5.4102845 hypo pvertex panss_total_calc cortDM_to_VA 0.8685183 0.3913834 5.4793683 hypo tvolume panss_total_calc subcort_to_FP 0.8104418 0.4234926 5.9288964 hypo tvertex panss_total_calc cortDM_to_DA 0.8052312 0.4264503 5.9703043 hypo tvertex panss_total_calc cortVI_to_VI -0.7721785 0.4455038 6.2370535 hypo tvolume panss_total_calc subcort_to_VA 0.7461782 0.4608426 6.4517971 hypo tvolume wtar_std cortVI_to_VI 0.7122753 0.4795403 6.7135645 hypo pvertex panss_total_calc cortDM_to_DA 0.6819499 0.5000294 7.0004115 hypo tvolume panss_total_calc cortDM_to_VA 0.6783945 0.5022514 7.0315198 hyper tvertex panss_total_calc cortVA_to_DA -0.6705380 0.5071809 7.1005325 hypo tvolume wtar_std cortDM_to_VA -0.6490472 0.5192202 7.2690827 hyper tvertex panss_total_calc cortDA_to_SM -0.6384402 0.5275935 7.3863086 hyper tvolume panss_total_calc cortDA_to_SM 0.6175770 0.5410928 7.5752989 hypo pvertex panss_total_calc subcort_to_VA 0.6151627 0.5426665 7.5973310 hyper tvolume panss_total_calc subcort_to_SM 0.5555273 0.5822809 8.1519328 hyper tvolume panss_total_calc cortVA_to_DA 0.5414143 0.5918588 8.2860236 hypo pvertex wtar_std subcort_to_VA 0.5247893 0.6020036 8.4280498 hypo tvertex wtar_std cortDM_to_DA 0.5112138 0.6114076 8.5597060 hyper pvertex panss_total_calc cortVA_to_DA 0.5112853 0.6125554 8.5757760 hypo pvertex panss_total_calc cortVI_to_VI -0.5004723 0.6200641 8.6808975 hyper pvertex wtar_std cortFP_to_SM 0.4582548 0.6487161 9.0820259 hyper pvertex wtar_std cortDA_to_SM -0.4547267 0.6512356 9.1172981 hypo tvolume wtar_std subcort_to_VA 0.4040479 0.6878669 9.6301365 hypo pvertex wtar_std cerebullum_to_striatum -0.3960070 0.6937518 9.7125256 hypo tvertex wtar_std cerebullum_to_striatum -0.3960070 0.6937518 9.7125256 hypo tvolume wtar_std cerebullum_to_striatum -0.3960070 0.6937518 9.7125256 hyper tvertex wtar_std cortFP_to_SM -0.3005344 0.7649913 10.7098782 hyper tvolume wtar_std cortVA_to_DA -0.2783227 0.7818900 10.9464594 hypo tvertex panss_total_calc subcort_to_VA -0.2423695 0.8099939 11.3399145 hypo pvertex wtar_std cortDM_to_DA -0.2363828 0.8140825 11.3971550 hypo pvertex panss_total_calc cerebullum_to_striatum 0.0468992 0.9628762 13.4802670 hypo tvertex panss_total_calc cerebullum_to_striatum 0.0468992 0.9628762 13.4802670 hypo tvolume panss_total_calc cerebullum_to_striatum 0.0468992 0.9628762 13.4802670 hyper tvertex wtar_std cortDA_to_SM -0.0163268 0.9870374 13.8185235 with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;ds000030_R1.0.5&quot;, &quot;ZHH&quot;), dx == &quot;SSD&quot;) %&gt;% gather(clinical_measure, clinical_score, starts_with(&quot;sans&quot;)) %&gt;% group_by(edge_group, effect_direction, clinical_measure, vertex_type) %&gt;% do(tidy(lm(wFC_score_cliped ~ clinical_score + Site, data = .))) %&gt;% filter(term == &quot;clinical_score&quot;) %&gt;% mutate(p_bonf = p.value*wf1_edgegroup_num) %&gt;% arrange(p.value) %&gt;% select(clinical_measure, edge_group, statistic, p.value, p_bonf) %&gt;% knitr::kable() ## Adding missing grouping variables: `effect_direction`, `vertex_type` effect_direction vertex_type clinical_measure edge_group statistic p.value p_bonf hyper tvolume sans_G_total subcort_to_SM 2.4875045 0.0151812 0.2125373 hyper tvertex sans_G_total subcort_to_VI 1.9361643 0.0567734 0.7948275 hyper tvolume sans_G_total subcort_to_VI 1.6589897 0.1014682 1.4205543 hypo pvertex sans_G_total subcort_to_FP -1.5420567 0.1274438 1.7842127 hyper pvertex sans_G_total subcort_to_VI 1.4954325 0.1391720 1.9484085 hypo tvertex sans_G_total subcort_to_FP -1.3845077 0.1704790 2.3867056 hypo pvertex sans_G_total cortDM_to_DA 1.3566622 0.1791272 2.5077802 hyper tvertex sans_G_total subcort_to_SM 1.3213395 0.1905718 2.6680056 hypo pvertex sans_G_total cerebullum_to_striatum -1.2631091 0.2106251 2.9487514 hypo tvertex sans_G_total cerebullum_to_striatum -1.2631091 0.2106251 2.9487514 hypo tvolume sans_G_total cerebullum_to_striatum -1.2631091 0.2106251 2.9487514 hyper tvolume sans_G_total subcort_to_DM -1.2564700 0.2130070 2.9820980 hyper pvertex sans_G_total subcort_to_SM 1.1152238 0.2684631 3.7584831 hypo tvertex sans_G_total cortDM_to_VA 1.0769370 0.2851036 3.9914506 hypo pvertex sans_G_total cortDM_to_VA 0.9085618 0.3666127 5.1325774 hypo tvolume sans_G_total cortVI_to_VI -0.8494696 0.3984358 5.5781011 hypo tvolume sans_G_total cortDM_to_VA 0.8469926 0.3998059 5.5972821 hyper tvertex sans_G_total subcort_to_DA 0.8406224 0.4033425 5.6467952 hypo tvertex sans_G_total cortDM_to_DA 0.7515310 0.4547827 6.3669579 hyper tvolume sans_G_total cortDA_to_SM -0.6656902 0.5077362 7.1083072 hyper tvertex sans_G_total subcort_to_DM -0.6173409 0.5389574 7.5454041 hyper tvolume sans_G_total cortVA_to_DA 0.5886788 0.5579191 7.8108669 hyper tvertex sans_G_total cortFP_to_SM 0.5866619 0.5592658 7.8297209 hypo tvolume sans_G_total subcort_to_FP -0.5531700 0.5818606 8.1460489 hyper pvertex sans_G_total subcort_to_DM -0.5513937 0.5830710 8.1629947 hypo pvertex sans_G_total cerebullum_to_thalamus -0.4918904 0.6242932 8.7401049 hypo tvertex sans_G_total cerebullum_to_thalamus -0.4918904 0.6242932 8.7401049 hypo tvolume sans_G_total cerebullum_to_thalamus -0.4918904 0.6242932 8.7401049 hyper tvolume sans_G_total subcort_to_DA 0.4639754 0.6440652 9.0169122 hyper tvolume sans_G_total cortFP_to_SM 0.3917039 0.6964340 9.7500756 hypo tvertex sans_G_total cortVI_to_VI -0.3713528 0.7114653 9.9605141 hypo tvertex sans_G_total subcort_to_VA -0.3607271 0.7193597 10.0710353 hyper pvertex sans_G_total cortVA_to_DA -0.2835217 0.7775906 10.8862682 hyper tvertex sans_G_total cortDA_to_SM -0.2763748 0.7830520 10.9627283 hyper tvertex sans_G_total cortVA_to_DA -0.2570921 0.7978410 11.1697734 hypo tvolume sans_G_total subcort_to_VA 0.2160165 0.8295857 11.6141998 hyper pvertex sans_G_total cortDA_to_SM 0.0771662 0.9387054 13.1418755 hypo pvertex sans_G_total cortVI_to_VI 0.0623462 0.9504599 13.3064390 hypo pvertex sans_G_total subcort_to_VA 0.0336562 0.9732445 13.6254223 hyper pvertex sans_G_total cortFP_to_SM -0.0058626 0.9953386 13.9347401 hyper pvertex sans_G_total subcort_to_DA 0.0003958 0.9996853 13.9955939 with_wFC1 %&gt;% filter(Site %in% c(&quot;CMH&quot;, &quot;ds000030_R1.0.5&quot;, &quot;ZHH&quot;), dx == &quot;SSD&quot;) %&gt;% filter(edge_group %in% c(&quot;cortDA_to_SM&quot;)) %&gt;% ggplot(aes(x = sans_G_total, y = wFC_score_cliped, color = Site)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_grid(edge_group~vertex_type, scales = &quot;free_y&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ## Warning: Removed 315 rows containing non-finite values (stat_smooth). ## Warning: Removed 315 rows containing missing values (geom_point). weighted_subject_scores %&gt;% inner_join(pheno, by = c(&quot;subject&quot;, &quot;dataset&quot;)) %&gt;% filter(Site == &quot;ZHH&quot;) %&gt;% filter(effect_direction == &quot;hypo&quot;) %&gt;% drop_na(isFEP) %&gt;% ggplot(aes(x = isFEP, y = wFC_score)) + geom_boxplot() + geom_jitter(alpha = 0.3) + facet_grid(vertex_type~edge_group, scales = &quot;free_y&quot;) with_wFC1 %&gt;% filter(Site == &quot;ZHH&quot;) %&gt;% drop_na(isFEP) %&gt;% group_by(edge_group, vertex_type) %&gt;% do(tidy(lm(wFC_score ~ isFEP, data = .))) %&gt;% mutate(p_bonf = p.value*wf1_edgegroup_num) %&gt;% arrange(p.value) %&gt;% filter(term != &quot;(Intercept)&quot;) %&gt;% select(term, statistic, p.value, p_bonf) %&gt;% knitr::kable() ## Adding missing grouping variables: `edge_group`, `vertex_type` edge_group vertex_type term statistic p.value p_bonf subcort_to_SM tvertex isFEPFirst Episode -2.6405907 0.0100164 0.1402297 cortDM_to_DA pvertex isFEPFirst Episode 2.2511570 0.0272276 0.3811862 cortVA_to_DA tvertex isFEPFirst Episode -2.1895579 0.0315849 0.4421887 subcort_to_DA tvolume isFEPFirst Episode -2.0129989 0.0476103 0.6665440 cortDM_to_DA tvertex isFEPFirst Episode 2.0123142 0.0476840 0.6675762 subcort_to_SM tvolume isFEPFirst Episode -1.9971661 0.0493404 0.6907651 subcort_to_SM pvertex isFEPFirst Episode -1.8311440 0.0709473 0.9932626 cortDA_to_SM tvertex isFEPFirst Episode -1.7232492 0.0888571 1.2440000 subcort_to_FP tvertex isFEPFirst Episode 1.7153858 0.0902962 1.2641469 cortVI_to_VI tvertex isFEPFirst Episode 1.4329237 0.1559274 2.1829832 cortVI_to_VI tvolume isFEPFirst Episode 1.3887084 0.1689254 2.3649560 cortVA_to_DA pvertex isFEPFirst Episode -1.3827028 0.1707530 2.3905427 subcort_to_FP pvertex isFEPFirst Episode 1.3797789 0.1716483 2.4030763 cortDM_to_VA tvertex isFEPFirst Episode 1.2644526 0.2098816 2.9383423 cortFP_to_SM tvolume isFEPFirst Episode 1.2363413 0.2200897 3.0812565 cortVI_to_VI pvertex isFEPFirst Episode 1.1626214 0.2485738 3.4800332 cortDA_to_SM tvolume isFEPFirst Episode 1.1427171 0.2566968 3.5937547 cerebullum_to_thalamus pvertex isFEPFirst Episode 1.1146888 0.2684509 3.7583132 cerebullum_to_thalamus tvertex isFEPFirst Episode 1.1146888 0.2684509 3.7583132 cerebullum_to_thalamus tvolume isFEPFirst Episode 1.1146888 0.2684509 3.7583132 subcort_to_DM tvolume isFEPFirst Episode -1.0782146 0.2843042 3.9802588 subcort_to_VA tvolume isFEPFirst Episode 0.8923195 0.3750018 5.2500259 cortVA_to_DA tvolume isFEPFirst Episode 0.8826961 0.3801480 5.3220716 subcort_to_VI pvertex isFEPFirst Episode -0.8662518 0.3890433 5.4466062 subcort_to_DM tvertex isFEPFirst Episode -0.8029066 0.4245001 5.9430019 subcort_to_VI tvertex isFEPFirst Episode -0.7936549 0.4298354 6.0176954 subcort_to_VA tvertex isFEPFirst Episode 0.7446093 0.4587745 6.4228429 subcort_to_DM pvertex isFEPFirst Episode -0.6751904 0.5015774 7.0220830 cortFP_to_SM tvertex isFEPFirst Episode 0.6617081 0.5101337 7.1418718 cortDA_to_SM pvertex isFEPFirst Episode -0.6299691 0.5305798 7.4281176 subcort_to_VI tvolume isFEPFirst Episode -0.5730642 0.5682711 7.9557948 cortDM_to_VA pvertex isFEPFirst Episode 0.4415407 0.6600591 9.2408276 subcort_to_VA pvertex isFEPFirst Episode 0.3116628 0.7561391 10.5859477 cortFP_to_SM pvertex isFEPFirst Episode 0.3103486 0.7571343 10.5998804 subcort_to_DA pvertex isFEPFirst Episode 0.3072207 0.7595047 10.6330663 cortDM_to_VA tvolume isFEPFirst Episode 0.2816198 0.7789905 10.9058671 subcort_to_FP tvolume isFEPFirst Episode 0.2156699 0.8298154 11.6174149 subcort_to_DA tvertex isFEPFirst Episode -0.1936623 0.8469503 11.8573037 cerebullum_to_striatum pvertex isFEPFirst Episode -0.1021152 0.9189307 12.8650294 cerebullum_to_striatum tvertex isFEPFirst Episode -0.1021152 0.9189307 12.8650294 cerebullum_to_striatum tvolume isFEPFirst Episode -0.1021152 0.9189307 12.8650294 10.1.1 refit the models with Education included refit_w_edu_pooled_glance &lt;- with_wFC1 %&gt;% inner_join(pheno, by = c(&quot;subject&quot;,&quot;dataset&quot;)) %&gt;% filter(in_matched_sample) %&gt;% group_by(edge_group, vertex_type) %&gt;% do(glance(lm(wFC_score ~ DX + Age_match_pt + Sex + fd_mean_match_pt + Site.x + Edu, data = .))) %&gt;% select(edge_group, vertex_type, df.residual) %&gt;% distinct() refit_w_edu_pooled_tidy &lt;- with_wFC1 %&gt;% inner_join(pheno, by = c(&quot;subject&quot;,&quot;dataset&quot;)) %&gt;% filter(in_matched_sample) %&gt;% group_by(edge_group, vertex_type) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_match_pt + Sex + fd_mean_match_pt + Site.x + Edu, data = .))) %&gt;% mutate(p_bonf = p.value*wf1_edgegroup_num) refit_w_edu_pooled &lt;- refit_w_edu_pooled_glance %&gt;% select(edge_group, vertex_type, `df.residual`) %&gt;% distinct() %&gt;% inner_join(refit_w_edu_pooled_tidy, by = c(&quot;vertex_type&quot;, &quot;edge_group&quot;)) %&gt;% mutate(Site = &quot;pooled&quot;) %&gt;% mutate( beta = specify_decimal(estimate,2), beta_se = specify_decimal(std.error,2), t_stat = specify_decimal(statistic,2), pval_str = ifelse(p_bonf &lt; 0.001, format(p_bonf, scientific = TRUE, digits = 2), specify_decimal(p_bonf,3)), pval_str = ifelse(p_bonf &gt; 0.10, &quot;ns&quot;, pval_str), report_str = str_glue(&quot;beta(SE)={beta}({beta_se}), t({df.residual})={t_stat}, p={pval_str}&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% select(edge_group, vertex_type, report_str) %&gt;% spread(vertex_type, report_str) refit_w_edu_pooled %&gt;% knitr::kable() edge_group pvertex tvertex tvolume cerebullum_to_striatum beta(SE)=-0.08(0.02), t(336)=-4.78, p=3.7e-05 beta(SE)=-0.08(0.02), t(336)=-4.78, p=3.7e-05 beta(SE)=-0.08(0.02), t(336)=-4.78, p=3.7e-05 cerebullum_to_thalamus beta(SE)=-0.11(0.02), t(336)=-6.47, p=4.9e-09 beta(SE)=-0.11(0.02), t(336)=-6.47, p=4.9e-09 beta(SE)=-0.11(0.02), t(336)=-6.47, p=4.9e-09 cortDA_to_SM beta(SE)=0.10(0.02), t(336)=5.54, p=8.3e-07 beta(SE)=0.09(0.02), t(336)=5.92, p=1.1e-07 beta(SE)=0.09(0.02), t(336)=4.30, p=3.2e-04 cortDM_to_DA beta(SE)=-0.08(0.02), t(336)=-5.03, p=1.1e-05 beta(SE)=-0.08(0.01), t(336)=-5.84, p=1.7e-07 NA cortDM_to_VA beta(SE)=-0.11(0.02), t(336)=-5.67, p=4.4e-07 beta(SE)=-0.10(0.01), t(336)=-7.04, p=1.5e-10 beta(SE)=-0.13(0.02), t(336)=-6.16, p=2.9e-08 cortFP_to_SM beta(SE)=0.08(0.02), t(336)=4.33, p=2.8e-04 beta(SE)=0.08(0.01), t(336)=5.14, p=6.4e-06 beta(SE)=0.09(0.02), t(336)=4.01, p=0.001 cortVA_to_DA beta(SE)=0.09(0.02), t(336)=4.70, p=5.4e-05 beta(SE)=0.09(0.01), t(336)=6.60, p=2.2e-09 beta(SE)=0.09(0.02), t(336)=5.17, p=5.7e-06 cortVI_to_VI beta(SE)=-0.13(0.03), t(336)=-5.01, p=1.2e-05 beta(SE)=-0.12(0.02), t(336)=-5.24, p=4.0e-06 beta(SE)=-0.10(0.03), t(336)=-3.57, p=0.006 subcort_to_DA beta(SE)=0.07(0.02), t(336)=3.94, p=0.001 beta(SE)=0.07(0.01), t(336)=4.91, p=2.0e-05 beta(SE)=0.05(0.01), t(336)=4.98, p=1.4e-05 subcort_to_DM beta(SE)=0.08(0.01), t(336)=5.39, p=1.9e-06 beta(SE)=0.07(0.01), t(336)=5.31, p=2.8e-06 beta(SE)=0.06(0.01), t(336)=5.23, p=4.2e-06 subcort_to_FP beta(SE)=-0.08(0.01), t(336)=-6.26, p=1.6e-08 beta(SE)=-0.08(0.01), t(336)=-6.09, p=4.4e-08 beta(SE)=-0.06(0.01), t(336)=-6.09, p=4.4e-08 subcort_to_SM beta(SE)=0.09(0.02), t(336)=5.42, p=1.6e-06 beta(SE)=0.09(0.01), t(336)=6.23, p=1.9e-08 beta(SE)=0.07(0.01), t(336)=6.60, p=2.3e-09 subcort_to_VA beta(SE)=-0.08(0.01), t(336)=-5.45, p=1.4e-06 beta(SE)=-0.07(0.01), t(336)=-6.15, p=3.1e-08 beta(SE)=-0.06(0.01), t(336)=-6.73, p=1.0e-09 subcort_to_VI beta(SE)=0.09(0.02), t(336)=5.63, p=5.4e-07 beta(SE)=0.08(0.01), t(336)=6.07, p=4.9e-08 beta(SE)=0.06(0.01), t(336)=5.58, p=7.1e-07 The Site-wise version refit_w_edu_sitewise_glance &lt;- with_wFC1 %&gt;% inner_join(pheno, by = c(&quot;subject&quot;,&quot;dataset&quot;)) %&gt;% filter(in_matched_sample) %&gt;% group_by(edge_group, vertex_type, Site.x) %&gt;% do(glance(lm(wFC_score ~ DX + Age_match_pt + Sex + fd_mean_match_pt, data = .))) %&gt;% select(edge_group, vertex_type, Site.x, df.residual) %&gt;% distinct() refit_w_edu_sitewise_tidy &lt;- with_wFC1 %&gt;% inner_join(pheno, by = c(&quot;subject&quot;,&quot;dataset&quot;)) %&gt;% filter(in_matched_sample) %&gt;% group_by(edge_group, vertex_type, Site.x) %&gt;% do(tidy(lm(wFC_score ~ DX + Age_match_pt + Sex + fd_mean_match_pt, data = .))) %&gt;% mutate(p_bonf = p.value*wf1_edgegroup_num) refit_w_edu_sitewise &lt;- refit_w_edu_sitewise_glance %&gt;% select(edge_group, vertex_type, Site.x, `df.residual`) %&gt;% distinct() %&gt;% inner_join(refit_w_edu_sitewise_tidy, by = c(&quot;vertex_type&quot;, &quot;edge_group&quot;, &quot;Site.x&quot;)) %&gt;% mutate( beta = specify_decimal(estimate,2), beta_se = specify_decimal(std.error,2), t_stat = specify_decimal(statistic,2), pval_str = ifelse(p_bonf &lt; 0.001, format(p_bonf, scientific = TRUE, digits = 2), specify_decimal(p_bonf,3)), pval_str = ifelse(p_bonf &gt; 0.10, &quot;ns&quot;, pval_str), report_str = str_glue(&quot;beta(SE)={beta}({beta_se}), t({df.residual})={t_stat}, p={pval_str}&quot;)) %&gt;% filter(term == &quot;DXSSD&quot;) %&gt;% select(edge_group, vertex_type, Site.x, report_str) %&gt;% spread(vertex_type, report_str) refit_w_edu_sitewise %&gt;% knitr::kable() edge_group Site.x pvertex tvertex tvolume cerebullum_to_striatum CMH beta(SE)=-0.10(0.03), t(103)=-3.57, p=0.008 beta(SE)=-0.10(0.03), t(103)=-3.57, p=0.008 beta(SE)=-0.10(0.03), t(103)=-3.57, p=0.008 cerebullum_to_striatum COBRE beta(SE)=-0.08(0.04), t(44)=-1.82, p=ns beta(SE)=-0.08(0.04), t(44)=-1.82, p=ns beta(SE)=-0.08(0.04), t(44)=-1.82, p=ns cerebullum_to_striatum ds000030_R1.0.5 beta(SE)=-0.09(0.03), t(57)=-2.96, p=0.062 beta(SE)=-0.09(0.03), t(57)=-2.96, p=0.062 beta(SE)=-0.09(0.03), t(57)=-2.96, p=0.062 cerebullum_to_striatum ZHH beta(SE)=-0.08(0.02), t(182)=-3.40, p=0.011 beta(SE)=-0.08(0.02), t(182)=-3.40, p=0.011 beta(SE)=-0.08(0.02), t(182)=-3.40, p=0.011 cerebullum_to_thalamus CMH beta(SE)=-0.13(0.03), t(103)=-4.62, p=1.6e-04 beta(SE)=-0.13(0.03), t(103)=-4.62, p=1.6e-04 beta(SE)=-0.13(0.03), t(103)=-4.62, p=1.6e-04 cerebullum_to_thalamus COBRE beta(SE)=-0.11(0.04), t(44)=-2.67, p=ns beta(SE)=-0.11(0.04), t(44)=-2.67, p=ns beta(SE)=-0.11(0.04), t(44)=-2.67, p=ns cerebullum_to_thalamus ds000030_R1.0.5 beta(SE)=-0.15(0.03), t(57)=-4.73, p=2.1e-04 beta(SE)=-0.15(0.03), t(57)=-4.73, p=2.1e-04 beta(SE)=-0.15(0.03), t(57)=-4.73, p=2.1e-04 cerebullum_to_thalamus ZHH beta(SE)=-0.10(0.02), t(182)=-4.61, p=1.0e-04 beta(SE)=-0.10(0.02), t(182)=-4.61, p=1.0e-04 beta(SE)=-0.10(0.02), t(182)=-4.61, p=1.0e-04 cortDA_to_SM CMH beta(SE)=0.08(0.02), t(103)=3.46, p=0.011 beta(SE)=0.07(0.02), t(103)=3.97, p=0.002 beta(SE)=0.03(0.02), t(103)=1.65, p=ns cortDA_to_SM COBRE beta(SE)=0.06(0.04), t(44)=1.59, p=ns beta(SE)=0.03(0.04), t(44)=0.75, p=ns beta(SE)=0.05(0.04), t(44)=1.29, p=ns cortDA_to_SM ds000030_R1.0.5 beta(SE)=0.02(0.03), t(57)=0.81, p=ns beta(SE)=0.03(0.02), t(57)=1.08, p=ns beta(SE)=0.07(0.04), t(57)=1.84, p=ns cortDA_to_SM ZHH beta(SE)=0.12(0.02), t(182)=4.95, p=2.4e-05 beta(SE)=0.13(0.02), t(182)=6.08, p=9.9e-08 beta(SE)=0.15(0.03), t(182)=4.87, p=3.3e-05 cortDM_to_DA CMH beta(SE)=-0.06(0.03), t(103)=-2.25, p=ns beta(SE)=-0.08(0.02), t(103)=-3.67, p=0.005 NA cortDM_to_DA COBRE beta(SE)=-0.05(0.05), t(44)=-1.07, p=ns beta(SE)=-0.07(0.04), t(44)=-1.61, p=ns NA cortDM_to_DA ds000030_R1.0.5 beta(SE)=-0.07(0.03), t(57)=-2.57, p=ns beta(SE)=-0.07(0.02), t(57)=-2.92, p=0.071 NA cortDM_to_DA ZHH beta(SE)=-0.09(0.02), t(182)=-4.61, p=1.1e-04 beta(SE)=-0.07(0.02), t(182)=-4.01, p=0.001 NA cortDM_to_VA CMH beta(SE)=-0.04(0.03), t(103)=-1.58, p=ns beta(SE)=-0.07(0.02), t(103)=-3.23, p=0.023 beta(SE)=-0.09(0.03), t(103)=-2.66, p=ns cortDM_to_VA COBRE beta(SE)=-0.13(0.05), t(44)=-2.76, p=ns beta(SE)=-0.08(0.04), t(44)=-2.12, p=ns beta(SE)=-0.16(0.05), t(44)=-3.25, p=0.031 cortDM_to_VA ds000030_R1.0.5 beta(SE)=-0.10(0.04), t(57)=-2.65, p=ns beta(SE)=-0.06(0.03), t(57)=-2.28, p=ns beta(SE)=-0.12(0.05), t(57)=-2.40, p=ns cortDM_to_VA ZHH beta(SE)=-0.09(0.02), t(182)=-3.67, p=0.004 beta(SE)=-0.08(0.02), t(182)=-5.13, p=1.0e-05 beta(SE)=-0.07(0.03), t(182)=-2.89, p=0.060 cortFP_to_SM CMH beta(SE)=0.08(0.03), t(103)=3.30, p=0.019 beta(SE)=0.06(0.02), t(103)=3.10, p=0.035 beta(SE)=0.06(0.02), t(103)=2.45, p=ns cortFP_to_SM COBRE beta(SE)=0.11(0.05), t(44)=2.17, p=ns beta(SE)=0.10(0.04), t(44)=2.52, p=ns beta(SE)=0.04(0.04), t(44)=1.18, p=ns cortFP_to_SM ds000030_R1.0.5 beta(SE)=0.04(0.04), t(57)=1.10, p=ns beta(SE)=0.06(0.03), t(57)=2.12, p=ns beta(SE)=0.14(0.04), t(57)=3.54, p=0.011 cortFP_to_SM ZHH beta(SE)=0.08(0.02), t(182)=3.25, p=0.019 beta(SE)=0.07(0.02), t(182)=3.94, p=0.002 beta(SE)=0.10(0.03), t(182)=3.22, p=0.021 cortVA_to_DA CMH beta(SE)=0.04(0.03), t(103)=1.27, p=ns beta(SE)=0.05(0.02), t(103)=2.49, p=ns beta(SE)=0.04(0.02), t(103)=1.88, p=ns cortVA_to_DA COBRE beta(SE)=0.06(0.04), t(44)=1.44, p=ns beta(SE)=0.05(0.03), t(44)=1.67, p=ns beta(SE)=0.06(0.03), t(44)=1.75, p=ns cortVA_to_DA ds000030_R1.0.5 beta(SE)=0.11(0.02), t(57)=4.63, p=3.0e-04 beta(SE)=0.06(0.02), t(57)=2.71, p=ns beta(SE)=0.09(0.04), t(57)=2.21, p=ns cortVA_to_DA ZHH beta(SE)=0.12(0.03), t(182)=4.69, p=7.5e-05 beta(SE)=0.12(0.02), t(182)=6.86, p=1.5e-09 beta(SE)=0.14(0.02), t(182)=5.58, p=1.2e-06 cortVI_to_VI CMH beta(SE)=-0.09(0.04), t(103)=-2.16, p=ns beta(SE)=-0.12(0.04), t(103)=-3.09, p=0.036 beta(SE)=-0.08(0.04), t(103)=-1.99, p=ns cortVI_to_VI COBRE beta(SE)=-0.14(0.05), t(44)=-2.74, p=ns beta(SE)=-0.11(0.05), t(44)=-2.08, p=ns beta(SE)=-0.14(0.06), t(44)=-2.39, p=ns cortVI_to_VI ds000030_R1.0.5 beta(SE)=-0.03(0.05), t(57)=-0.62, p=ns beta(SE)=-0.05(0.04), t(57)=-1.11, p=ns beta(SE)=-0.08(0.06), t(57)=-1.35, p=ns cortVI_to_VI ZHH beta(SE)=-0.15(0.03), t(182)=-4.26, p=4.7e-04 beta(SE)=-0.15(0.03), t(182)=-4.65, p=8.8e-05 beta(SE)=-0.10(0.03), t(182)=-2.75, p=0.091 subcort_to_DA CMH beta(SE)=0.08(0.02), t(103)=3.40, p=0.014 beta(SE)=0.07(0.02), t(103)=3.56, p=0.008 beta(SE)=0.08(0.02), t(103)=4.65, p=1.4e-04 subcort_to_DA COBRE beta(SE)=0.07(0.04), t(44)=1.54, p=ns beta(SE)=0.11(0.04), t(44)=2.91, p=0.080 beta(SE)=0.08(0.02), t(44)=3.66, p=0.009 subcort_to_DA ds000030_R1.0.5 beta(SE)=0.04(0.03), t(57)=1.23, p=ns beta(SE)=0.04(0.02), t(57)=1.95, p=ns beta(SE)=0.03(0.02), t(57)=1.61, p=ns subcort_to_DA ZHH beta(SE)=0.08(0.02), t(182)=3.44, p=0.010 beta(SE)=0.08(0.02), t(182)=4.71, p=6.8e-05 beta(SE)=0.06(0.01), t(182)=4.33, p=3.4e-04 subcort_to_DM CMH beta(SE)=0.05(0.02), t(103)=2.44, p=ns beta(SE)=0.07(0.02), t(103)=3.73, p=0.004 beta(SE)=0.05(0.02), t(103)=3.17, p=0.028 subcort_to_DM COBRE beta(SE)=0.07(0.03), t(44)=2.40, p=ns beta(SE)=0.05(0.03), t(44)=1.74, p=ns beta(SE)=0.05(0.02), t(44)=2.39, p=ns subcort_to_DM ds000030_R1.0.5 beta(SE)=0.11(0.03), t(57)=4.05, p=0.002 beta(SE)=0.08(0.03), t(57)=2.87, p=0.080 beta(SE)=0.09(0.02), t(57)=4.37, p=7.4e-04 subcort_to_DM ZHH beta(SE)=0.09(0.02), t(182)=5.09, p=1.3e-05 beta(SE)=0.07(0.01), t(182)=4.92, p=2.7e-05 beta(SE)=0.04(0.01), t(182)=3.11, p=0.031 subcort_to_FP CMH beta(SE)=-0.07(0.02), t(103)=-3.50, p=0.010 beta(SE)=-0.07(0.02), t(103)=-3.46, p=0.011 beta(SE)=-0.07(0.02), t(103)=-4.18, p=8.7e-04 subcort_to_FP COBRE beta(SE)=-0.09(0.03), t(44)=-3.00, p=0.061 beta(SE)=-0.07(0.03), t(44)=-2.67, p=ns beta(SE)=-0.04(0.02), t(44)=-2.22, p=ns subcort_to_FP ds000030_R1.0.5 beta(SE)=-0.04(0.02), t(57)=-1.84, p=ns beta(SE)=-0.08(0.02), t(57)=-3.18, p=0.033 beta(SE)=-0.04(0.02), t(57)=-2.26, p=ns subcort_to_FP ZHH beta(SE)=-0.07(0.02), t(182)=-4.43, p=2.3e-04 beta(SE)=-0.07(0.02), t(182)=-4.77, p=5.2e-05 beta(SE)=-0.05(0.01), t(182)=-4.68, p=7.8e-05 subcort_to_SM CMH beta(SE)=0.09(0.02), t(103)=3.74, p=0.004 beta(SE)=0.09(0.02), t(103)=4.37, p=4.2e-04 beta(SE)=0.07(0.02), t(103)=4.06, p=0.001 subcort_to_SM COBRE beta(SE)=0.16(0.04), t(44)=4.20, p=0.002 beta(SE)=0.15(0.03), t(44)=5.29, p=5.1e-05 beta(SE)=0.08(0.02), t(44)=3.69, p=0.009 subcort_to_SM ds000030_R1.0.5 beta(SE)=0.11(0.05), t(57)=2.53, p=ns beta(SE)=0.11(0.04), t(57)=3.08, p=0.045 beta(SE)=0.09(0.02), t(57)=3.81, p=0.005 subcort_to_SM ZHH beta(SE)=0.07(0.02), t(182)=3.65, p=0.005 beta(SE)=0.07(0.02), t(182)=4.09, p=9.0e-04 beta(SE)=0.05(0.01), t(182)=4.32, p=3.6e-04 subcort_to_VA CMH beta(SE)=-0.05(0.02), t(103)=-2.40, p=ns beta(SE)=-0.06(0.02), t(103)=-3.33, p=0.017 beta(SE)=-0.06(0.01), t(103)=-4.01, p=0.002 subcort_to_VA COBRE beta(SE)=-0.10(0.03), t(44)=-2.97, p=0.067 beta(SE)=-0.06(0.03), t(44)=-2.43, p=ns beta(SE)=-0.04(0.02), t(44)=-2.02, p=ns subcort_to_VA ds000030_R1.0.5 beta(SE)=-0.05(0.03), t(57)=-1.63, p=ns beta(SE)=-0.04(0.02), t(57)=-1.84, p=ns beta(SE)=-0.04(0.01), t(57)=-3.23, p=0.029 subcort_to_VA ZHH beta(SE)=-0.09(0.02), t(182)=-4.83, p=4.0e-05 beta(SE)=-0.08(0.02), t(182)=-5.35, p=3.6e-06 beta(SE)=-0.06(0.01), t(182)=-6.08, p=9.5e-08 subcort_to_VI CMH beta(SE)=0.08(0.03), t(103)=3.22, p=0.024 beta(SE)=0.08(0.02), t(103)=4.05, p=0.001 beta(SE)=0.06(0.02), t(103)=3.70, p=0.005 subcort_to_VI COBRE beta(SE)=0.14(0.04), t(44)=3.75, p=0.007 beta(SE)=0.12(0.03), t(44)=3.60, p=0.011 beta(SE)=0.09(0.02), t(44)=3.79, p=0.006 subcort_to_VI ds000030_R1.0.5 beta(SE)=0.05(0.02), t(57)=2.32, p=ns beta(SE)=0.03(0.02), t(57)=1.75, p=ns beta(SE)=0.03(0.02), t(57)=1.88, p=ns subcort_to_VI ZHH beta(SE)=0.10(0.02), t(182)=4.81, p=4.5e-05 beta(SE)=0.10(0.02), t(182)=5.08, p=1.3e-05 beta(SE)=0.06(0.01), t(182)=4.46, p=2.0e-04 report_model_beta_t_wdf &lt;- function(tidy_model, glance_models, this_term, p_value_col = p.value, ...) { p_value_col = enquo(p_value_col) the_df &lt;- glance_models %&gt;% filter(...) %&gt;% pull(df.residual) %&gt;% unique() tidy_model %&gt;% filter(...) %&gt;% filter(term == this_term) %&gt;% mutate( beta = specify_decimal(estimate,2), beta_se = specify_decimal(std.error,2), t_stat = specify_decimal(statistic,2), pval_str = ifelse(!!p_value_col &lt; 0.001, format(!!p_value_col, scientific = TRUE, digits = 2), specify_decimal(!!p_value_col,3)), pval_str = ifelse(!!p_value_col &gt; 0.10, &quot;ns&quot;, pval_str), report_str = str_glue(&quot;beta(SE)={beta}({beta_se}), t({the_df})={t_stat}, p={pval_str}&quot;)) %&gt;% pull(report_str) } report_model_beta_t_wdf(wtar_panss_models_tidylm, wtar_panss_models_lm_glance,&quot;clinical_score&quot;, p_value_col = p_bonf, vertex_type == &quot;pvertex&quot;, clinical_measure==&quot;wtar_std&quot;, edge_group == &quot;subcort_to_VI&quot;) ## beta(SE)=0.00(0.00), t(51)=-2.67, p=ns report_wtar_model_t &lt;- function(this_edgegroup, this_vertextype) { report_model_beta_t_wdf( wtar_panss_models_tidylm, wtar_panss_models_lm_glance, &quot;clinical_score&quot;, p_value_col = p_bonf, vertex_type == this_vertextype, clinical_measure==&quot;wtar_std&quot;, edge_group == this_edgegroup) } report_wtar_model_t(&quot;subcort_to_VI&quot;, &quot;tvolume&quot;) ## beta(SE)=0.00(0.00), t(51)=-2.13, p=ns 10.1.2 The results write-up A significant main effect of SSD diagnosis was also observed when models were refitted with an additional covariate of years of Education (see Supplemental Table 4 for all model fits). When models were fit separately for each site all model fits remained significant for the two larger cohort ZHH and CAMH sample, with more variability observed in the COBRE and UCLA cohorts. Interestingly, hypoconnectivity between the subcortical areas and the frontal-partietal network was negatively correlated with hyperconnectivity between subcortical areas and the visual networks (see Figure 4a). These dysconnectivity patterns were also associated with verbal intelligence (WTAR scores) within participants with SSD from the COBRE and CAMH cohorts (subcortical to VI: template volume beta(SE)=0.00(0.00), t(51)=-2.13, p=ns , template surface beta(SE)=0.00(0.00), t(51)=-3.17, p=0.036, PINT beta(SE)=0.00(0.00), t(51)=-2.67, p=ns ; subcortical to FP: template volume beta(SE)=0.00(0.00), t(51)=1.84, p=ns template surface beta(SE)=0.00(0.00), t(51)=1.86, p=ns, PINT beta(SE)=0.00(0.00), t(51)=2.18, p=ns)see Figure 4b). Clinical scores (SANS for CMH, UCLA, ZHH cohorts) nor PANSS total scores (in CAMH and COBRE), were not correlated with any FC weighted scores after correction for multiple comparisons. In the ZHH sample, no significant differences between first episode and chronic SSD participants in FC scores were observed after correction for multiple comparisons (). "]
]
